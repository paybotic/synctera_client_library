/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.140.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the VerificationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerificationRequest{}

// VerificationRequest struct for VerificationRequest
type VerificationRequest struct {
	CustomerID string `json:"customer_id"`
}

type _VerificationRequest VerificationRequest

// NewVerificationRequest instantiates a new VerificationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerificationRequest(customerID string) *VerificationRequest {
	this := VerificationRequest{}
	this.CustomerID = customerID
	return &this
}

// NewVerificationRequestWithDefaults instantiates a new VerificationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerificationRequestWithDefaults() *VerificationRequest {
	this := VerificationRequest{}
	return &this
}

// GetCustomerID returns the CustomerID field value
func (o *VerificationRequest) GetCustomerID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerID
}

// GetCustomerIDOk returns a tuple with the CustomerID field value
// and a boolean to check if the value has been set.
func (o *VerificationRequest) GetCustomerIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerID, true
}

// SetCustomerID sets field value
func (o *VerificationRequest) SetCustomerID(v string) {
	o.CustomerID = v
}

func (o VerificationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerificationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customer_id"] = o.CustomerID
	return toSerialize, nil
}

func (o *VerificationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customer_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVerificationRequest := _VerificationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVerificationRequest)

	if err != nil {
		return err
	}

	*o = VerificationRequest(varVerificationRequest)

	return err
}

type NullableVerificationRequest struct {
	value *VerificationRequest
	isSet bool
}

func (v NullableVerificationRequest) Get() *VerificationRequest {
	return v.value
}

func (v *NullableVerificationRequest) Set(val *VerificationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVerificationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVerificationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerificationRequest(val *VerificationRequest) *NullableVerificationRequest {
	return &NullableVerificationRequest{value: val, isSet: true}
}

func (v NullableVerificationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerificationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
