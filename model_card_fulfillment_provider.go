/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.140.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// CardFulfillmentProvider card fulfillment provider for physical cards
type CardFulfillmentProvider string

// List of card_fulfillment_provider
const (
	CARDFULFILLMENTPROVIDER_ARROWEYE CardFulfillmentProvider = "ARROWEYE"
	CARDFULFILLMENTPROVIDER_GD       CardFulfillmentProvider = "GD"
)

// All allowed values of CardFulfillmentProvider enum
var AllowedCardFulfillmentProviderEnumValues = []CardFulfillmentProvider{
	"ARROWEYE",
	"GD",
}

func (v *CardFulfillmentProvider) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CardFulfillmentProvider(value)
	for _, existing := range AllowedCardFulfillmentProviderEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CardFulfillmentProvider", value)
}

// NewCardFulfillmentProviderFromValue returns a pointer to a valid CardFulfillmentProvider
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCardFulfillmentProviderFromValue(v string) (*CardFulfillmentProvider, error) {
	ev := CardFulfillmentProvider(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CardFulfillmentProvider: valid values are %v", v, AllowedCardFulfillmentProviderEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CardFulfillmentProvider) IsValid() bool {
	for _, existing := range AllowedCardFulfillmentProviderEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to card_fulfillment_provider value
func (v CardFulfillmentProvider) Ptr() *CardFulfillmentProvider {
	return &v
}

type NullableCardFulfillmentProvider struct {
	value *CardFulfillmentProvider
	isSet bool
}

func (v NullableCardFulfillmentProvider) Get() *CardFulfillmentProvider {
	return v.value
}

func (v *NullableCardFulfillmentProvider) Set(val *CardFulfillmentProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableCardFulfillmentProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableCardFulfillmentProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardFulfillmentProvider(val *CardFulfillmentProvider) *NullableCardFulfillmentProvider {
	return &NullableCardFulfillmentProvider{value: val, isSet: true}
}

func (v NullableCardFulfillmentProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardFulfillmentProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
