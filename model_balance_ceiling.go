/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.140.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the BalanceCeiling type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BalanceCeiling{}

// BalanceCeiling struct for BalanceCeiling
type BalanceCeiling struct {
	// Maximum balance in the account's currency. Unit in cents.
	Balance int64 `json:"balance"`
	// ID of linked backing account for just-in-time (JIT) funding of transactions to maintain the balance ceiling
	LinkedAccountId *string `json:"linked_account_id,omitempty"`
	// ID of linked backing account for just-in-time (JIT) funding of transactions to maintain the balance ceiling This attribute is a deprecated alias for linked_account_id.
	// Deprecated
	OverflowAccountId *string `json:"overflow_account_id,omitempty"`
}

type _BalanceCeiling BalanceCeiling

// NewBalanceCeiling instantiates a new BalanceCeiling object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBalanceCeiling(balance int64) *BalanceCeiling {
	this := BalanceCeiling{}
	this.Balance = balance
	return &this
}

// NewBalanceCeilingWithDefaults instantiates a new BalanceCeiling object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBalanceCeilingWithDefaults() *BalanceCeiling {
	this := BalanceCeiling{}
	return &this
}

// GetBalance returns the Balance field value
func (o *BalanceCeiling) GetBalance() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *BalanceCeiling) GetBalanceOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *BalanceCeiling) SetBalance(v int64) {
	o.Balance = v
}

// GetLinkedAccountId returns the LinkedAccountId field value if set, zero value otherwise.
func (o *BalanceCeiling) GetLinkedAccountId() string {
	if o == nil || IsNil(o.LinkedAccountId) {
		var ret string
		return ret
	}
	return *o.LinkedAccountId
}

// GetLinkedAccountIdOk returns a tuple with the LinkedAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalanceCeiling) GetLinkedAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.LinkedAccountId) {
		return nil, false
	}
	return o.LinkedAccountId, true
}

// HasLinkedAccountId returns a boolean if a field has been set.
func (o *BalanceCeiling) HasLinkedAccountId() bool {
	if o != nil && !IsNil(o.LinkedAccountId) {
		return true
	}

	return false
}

// SetLinkedAccountId gets a reference to the given string and assigns it to the LinkedAccountId field.
func (o *BalanceCeiling) SetLinkedAccountId(v string) {
	o.LinkedAccountId = &v
}

// GetOverflowAccountId returns the OverflowAccountId field value if set, zero value otherwise.
// Deprecated
func (o *BalanceCeiling) GetOverflowAccountId() string {
	if o == nil || IsNil(o.OverflowAccountId) {
		var ret string
		return ret
	}
	return *o.OverflowAccountId
}

// GetOverflowAccountIdOk returns a tuple with the OverflowAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *BalanceCeiling) GetOverflowAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.OverflowAccountId) {
		return nil, false
	}
	return o.OverflowAccountId, true
}

// HasOverflowAccountId returns a boolean if a field has been set.
func (o *BalanceCeiling) HasOverflowAccountId() bool {
	if o != nil && !IsNil(o.OverflowAccountId) {
		return true
	}

	return false
}

// SetOverflowAccountId gets a reference to the given string and assigns it to the OverflowAccountId field.
// Deprecated
func (o *BalanceCeiling) SetOverflowAccountId(v string) {
	o.OverflowAccountId = &v
}

func (o BalanceCeiling) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BalanceCeiling) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["balance"] = o.Balance
	if !IsNil(o.LinkedAccountId) {
		toSerialize["linked_account_id"] = o.LinkedAccountId
	}
	if !IsNil(o.OverflowAccountId) {
		toSerialize["overflow_account_id"] = o.OverflowAccountId
	}
	return toSerialize, nil
}

func (o *BalanceCeiling) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"balance",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBalanceCeiling := _BalanceCeiling{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBalanceCeiling)

	if err != nil {
		return err
	}

	*o = BalanceCeiling(varBalanceCeiling)

	return err
}

type NullableBalanceCeiling struct {
	value *BalanceCeiling
	isSet bool
}

func (v NullableBalanceCeiling) Get() *BalanceCeiling {
	return v.value
}

func (v *NullableBalanceCeiling) Set(val *BalanceCeiling) {
	v.value = val
	v.isSet = true
}

func (v NullableBalanceCeiling) IsSet() bool {
	return v.isSet
}

func (v *NullableBalanceCeiling) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBalanceCeiling(val *BalanceCeiling) *NullableBalanceCeiling {
	return &NullableBalanceCeiling{value: val, isSet: true}
}

func (v NullableBalanceCeiling) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBalanceCeiling) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
