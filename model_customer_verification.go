/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.69.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CustomerVerification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerVerification{}

// CustomerVerification struct for CustomerVerification
type CustomerVerification struct {
	// Whether this customer has consented to a KYC check. 
	CustomerConsent bool `json:"customer_consent"`
	// IP address of the customer being verified.
	CustomerIpAddress *string `json:"customer_ip_address,omitempty"`
	// The ID of the uploaded government-issued identification document provided by the Socure SDK. 
	DocumentId *string `json:"document_id,omitempty"`
	// List of possible checks to run on a customer. This is a legacy field that is now ignored. 
	VerificationType []VerificationType `json:"verification_type,omitempty"`
}

// NewCustomerVerification instantiates a new CustomerVerification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerVerification(customerConsent bool) *CustomerVerification {
	this := CustomerVerification{}
	this.CustomerConsent = customerConsent
	return &this
}

// NewCustomerVerificationWithDefaults instantiates a new CustomerVerification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerVerificationWithDefaults() *CustomerVerification {
	this := CustomerVerification{}
	return &this
}

// GetCustomerConsent returns the CustomerConsent field value
func (o *CustomerVerification) GetCustomerConsent() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CustomerConsent
}

// GetCustomerConsentOk returns a tuple with the CustomerConsent field value
// and a boolean to check if the value has been set.
func (o *CustomerVerification) GetCustomerConsentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerConsent, true
}

// SetCustomerConsent sets field value
func (o *CustomerVerification) SetCustomerConsent(v bool) {
	o.CustomerConsent = v
}

// GetCustomerIpAddress returns the CustomerIpAddress field value if set, zero value otherwise.
func (o *CustomerVerification) GetCustomerIpAddress() string {
	if o == nil || IsNil(o.CustomerIpAddress) {
		var ret string
		return ret
	}
	return *o.CustomerIpAddress
}

// GetCustomerIpAddressOk returns a tuple with the CustomerIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerVerification) GetCustomerIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerIpAddress) {
		return nil, false
	}
	return o.CustomerIpAddress, true
}

// HasCustomerIpAddress returns a boolean if a field has been set.
func (o *CustomerVerification) HasCustomerIpAddress() bool {
	if o != nil && !IsNil(o.CustomerIpAddress) {
		return true
	}

	return false
}

// SetCustomerIpAddress gets a reference to the given string and assigns it to the CustomerIpAddress field.
func (o *CustomerVerification) SetCustomerIpAddress(v string) {
	o.CustomerIpAddress = &v
}

// GetDocumentId returns the DocumentId field value if set, zero value otherwise.
func (o *CustomerVerification) GetDocumentId() string {
	if o == nil || IsNil(o.DocumentId) {
		var ret string
		return ret
	}
	return *o.DocumentId
}

// GetDocumentIdOk returns a tuple with the DocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerVerification) GetDocumentIdOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentId) {
		return nil, false
	}
	return o.DocumentId, true
}

// HasDocumentId returns a boolean if a field has been set.
func (o *CustomerVerification) HasDocumentId() bool {
	if o != nil && !IsNil(o.DocumentId) {
		return true
	}

	return false
}

// SetDocumentId gets a reference to the given string and assigns it to the DocumentId field.
func (o *CustomerVerification) SetDocumentId(v string) {
	o.DocumentId = &v
}

// GetVerificationType returns the VerificationType field value if set, zero value otherwise.
func (o *CustomerVerification) GetVerificationType() []VerificationType {
	if o == nil || IsNil(o.VerificationType) {
		var ret []VerificationType
		return ret
	}
	return o.VerificationType
}

// GetVerificationTypeOk returns a tuple with the VerificationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerVerification) GetVerificationTypeOk() ([]VerificationType, bool) {
	if o == nil || IsNil(o.VerificationType) {
		return nil, false
	}
	return o.VerificationType, true
}

// HasVerificationType returns a boolean if a field has been set.
func (o *CustomerVerification) HasVerificationType() bool {
	if o != nil && !IsNil(o.VerificationType) {
		return true
	}

	return false
}

// SetVerificationType gets a reference to the given []VerificationType and assigns it to the VerificationType field.
func (o *CustomerVerification) SetVerificationType(v []VerificationType) {
	o.VerificationType = v
}

func (o CustomerVerification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerVerification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customer_consent"] = o.CustomerConsent
	if !IsNil(o.CustomerIpAddress) {
		toSerialize["customer_ip_address"] = o.CustomerIpAddress
	}
	if !IsNil(o.DocumentId) {
		toSerialize["document_id"] = o.DocumentId
	}
	if !IsNil(o.VerificationType) {
		toSerialize["verification_type"] = o.VerificationType
	}
	return toSerialize, nil
}

type NullableCustomerVerification struct {
	value *CustomerVerification
	isSet bool
}

func (v NullableCustomerVerification) Get() *CustomerVerification {
	return v.value
}

func (v *NullableCustomerVerification) Set(val *CustomerVerification) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerVerification) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerVerification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerVerification(val *CustomerVerification) *NullableCustomerVerification {
	return &NullableCustomerVerification{value: val, isSet: true}
}

func (v NullableCustomerVerification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerVerification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


