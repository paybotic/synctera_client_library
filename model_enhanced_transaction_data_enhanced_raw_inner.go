/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.32.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EnhancedTransactionDataEnhancedRawInner struct for EnhancedTransactionDataEnhancedRawInner
type EnhancedTransactionDataEnhancedRawInner struct {
	// The monetary amount of the transaction
	Amount *float32 `json:"amount,omitempty"`
	// The method used to detrmine the category
	CategorizedBy *int32 `json:"categorized_by,omitempty"`
	// The category of the transaction
	Category *string `json:"category,omitempty"`
	// The unique identifier for the category
	CategoryGuid *string `json:"category_guid,omitempty"`
	// The method used to describe the transaction
	DescribedBy *int32 `json:"described_by,omitempty"`
	// A human-readable version of `original_description`
	Description *string `json:"description,omitempty"`
	// The transaction type assigned by the partner
	ExtendedTransactionType *string `json:"extended_transaction_type,omitempty"`
	// The unique partner-defined identifier for the transaction
	Id *int32 `json:"id,omitempty"`
	// Whether the transaction represents a bill payment
	IsBillPay *bool `json:"is_bill_pay,omitempty"`
	// Whether or not the transaction represents a direct deposit
	IsDirectDeposit *bool `json:"is_direct_deposit,omitempty"`
	// Whether or not the transaction represents an expense
	IsExpense *bool `json:"is_expense,omitempty"`
	// Whether or not the transaction represents a fee
	IsFee *bool `json:"is_fee,omitempty"`
	// Whether or not the transaction represents income
	IsIncome *bool `json:"is_income,omitempty"`
	// Whether or not the transaction is international
	IsInternational *bool `json:"is_international,omitempty"`
	// Whether or not the transaction is an overdraft fee
	IsOverdraftFee *bool `json:"is_overdraft_fee,omitempty"`
	// Whether or not the transaction is a payroll advance
	IsPayrollAdvance *bool `json:"is_payroll_advance,omitempty"`
	// Whether or not the transaction is a subscription
	IsSubscription *bool `json:"is_subscription,omitempty"`
	// Additional descriptiive information about the transaction
	Memo *string `json:"memo,omitempty"`
	// The ISO 18245 category code for the transaction
	MerchantCategoryCode *int32 `json:"merchant_category_code,omitempty"`
	// The unique identifier for the merchant
	MerchantGuid *string `json:"merchant_guid,omitempty"`
	// The unique identifier for the merchant location
	MerchantLocationGuid *string `json:"merchant_location_guid,omitempty"`
	// The original description for the transaction
	OriginalDescription *string `json:"original_description,omitempty"`
	// The type of the transsaction. This will be either `CREDIT` or `DEBIT`
	Type *string `json:"type,omitempty"`
}

// NewEnhancedTransactionDataEnhancedRawInner instantiates a new EnhancedTransactionDataEnhancedRawInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnhancedTransactionDataEnhancedRawInner() *EnhancedTransactionDataEnhancedRawInner {
	this := EnhancedTransactionDataEnhancedRawInner{}
	return &this
}

// NewEnhancedTransactionDataEnhancedRawInnerWithDefaults instantiates a new EnhancedTransactionDataEnhancedRawInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnhancedTransactionDataEnhancedRawInnerWithDefaults() *EnhancedTransactionDataEnhancedRawInner {
	this := EnhancedTransactionDataEnhancedRawInner{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetAmount() float32 {
	if o == nil || o.Amount == nil {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetAmountOk() (*float32, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetAmount(v float32) {
	o.Amount = &v
}

// GetCategorizedBy returns the CategorizedBy field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetCategorizedBy() int32 {
	if o == nil || o.CategorizedBy == nil {
		var ret int32
		return ret
	}
	return *o.CategorizedBy
}

// GetCategorizedByOk returns a tuple with the CategorizedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetCategorizedByOk() (*int32, bool) {
	if o == nil || o.CategorizedBy == nil {
		return nil, false
	}
	return o.CategorizedBy, true
}

// HasCategorizedBy returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasCategorizedBy() bool {
	if o != nil && o.CategorizedBy != nil {
		return true
	}

	return false
}

// SetCategorizedBy gets a reference to the given int32 and assigns it to the CategorizedBy field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetCategorizedBy(v int32) {
	o.CategorizedBy = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetCategory(v string) {
	o.Category = &v
}

// GetCategoryGuid returns the CategoryGuid field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetCategoryGuid() string {
	if o == nil || o.CategoryGuid == nil {
		var ret string
		return ret
	}
	return *o.CategoryGuid
}

// GetCategoryGuidOk returns a tuple with the CategoryGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetCategoryGuidOk() (*string, bool) {
	if o == nil || o.CategoryGuid == nil {
		return nil, false
	}
	return o.CategoryGuid, true
}

// HasCategoryGuid returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasCategoryGuid() bool {
	if o != nil && o.CategoryGuid != nil {
		return true
	}

	return false
}

// SetCategoryGuid gets a reference to the given string and assigns it to the CategoryGuid field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetCategoryGuid(v string) {
	o.CategoryGuid = &v
}

// GetDescribedBy returns the DescribedBy field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetDescribedBy() int32 {
	if o == nil || o.DescribedBy == nil {
		var ret int32
		return ret
	}
	return *o.DescribedBy
}

// GetDescribedByOk returns a tuple with the DescribedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetDescribedByOk() (*int32, bool) {
	if o == nil || o.DescribedBy == nil {
		return nil, false
	}
	return o.DescribedBy, true
}

// HasDescribedBy returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasDescribedBy() bool {
	if o != nil && o.DescribedBy != nil {
		return true
	}

	return false
}

// SetDescribedBy gets a reference to the given int32 and assigns it to the DescribedBy field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetDescribedBy(v int32) {
	o.DescribedBy = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetDescription(v string) {
	o.Description = &v
}

// GetExtendedTransactionType returns the ExtendedTransactionType field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetExtendedTransactionType() string {
	if o == nil || o.ExtendedTransactionType == nil {
		var ret string
		return ret
	}
	return *o.ExtendedTransactionType
}

// GetExtendedTransactionTypeOk returns a tuple with the ExtendedTransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetExtendedTransactionTypeOk() (*string, bool) {
	if o == nil || o.ExtendedTransactionType == nil {
		return nil, false
	}
	return o.ExtendedTransactionType, true
}

// HasExtendedTransactionType returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasExtendedTransactionType() bool {
	if o != nil && o.ExtendedTransactionType != nil {
		return true
	}

	return false
}

// SetExtendedTransactionType gets a reference to the given string and assigns it to the ExtendedTransactionType field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetExtendedTransactionType(v string) {
	o.ExtendedTransactionType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetId(v int32) {
	o.Id = &v
}

// GetIsBillPay returns the IsBillPay field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsBillPay() bool {
	if o == nil || o.IsBillPay == nil {
		var ret bool
		return ret
	}
	return *o.IsBillPay
}

// GetIsBillPayOk returns a tuple with the IsBillPay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsBillPayOk() (*bool, bool) {
	if o == nil || o.IsBillPay == nil {
		return nil, false
	}
	return o.IsBillPay, true
}

// HasIsBillPay returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasIsBillPay() bool {
	if o != nil && o.IsBillPay != nil {
		return true
	}

	return false
}

// SetIsBillPay gets a reference to the given bool and assigns it to the IsBillPay field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetIsBillPay(v bool) {
	o.IsBillPay = &v
}

// GetIsDirectDeposit returns the IsDirectDeposit field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsDirectDeposit() bool {
	if o == nil || o.IsDirectDeposit == nil {
		var ret bool
		return ret
	}
	return *o.IsDirectDeposit
}

// GetIsDirectDepositOk returns a tuple with the IsDirectDeposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsDirectDepositOk() (*bool, bool) {
	if o == nil || o.IsDirectDeposit == nil {
		return nil, false
	}
	return o.IsDirectDeposit, true
}

// HasIsDirectDeposit returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasIsDirectDeposit() bool {
	if o != nil && o.IsDirectDeposit != nil {
		return true
	}

	return false
}

// SetIsDirectDeposit gets a reference to the given bool and assigns it to the IsDirectDeposit field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetIsDirectDeposit(v bool) {
	o.IsDirectDeposit = &v
}

// GetIsExpense returns the IsExpense field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsExpense() bool {
	if o == nil || o.IsExpense == nil {
		var ret bool
		return ret
	}
	return *o.IsExpense
}

// GetIsExpenseOk returns a tuple with the IsExpense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsExpenseOk() (*bool, bool) {
	if o == nil || o.IsExpense == nil {
		return nil, false
	}
	return o.IsExpense, true
}

// HasIsExpense returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasIsExpense() bool {
	if o != nil && o.IsExpense != nil {
		return true
	}

	return false
}

// SetIsExpense gets a reference to the given bool and assigns it to the IsExpense field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetIsExpense(v bool) {
	o.IsExpense = &v
}

// GetIsFee returns the IsFee field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsFee() bool {
	if o == nil || o.IsFee == nil {
		var ret bool
		return ret
	}
	return *o.IsFee
}

// GetIsFeeOk returns a tuple with the IsFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsFeeOk() (*bool, bool) {
	if o == nil || o.IsFee == nil {
		return nil, false
	}
	return o.IsFee, true
}

// HasIsFee returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasIsFee() bool {
	if o != nil && o.IsFee != nil {
		return true
	}

	return false
}

// SetIsFee gets a reference to the given bool and assigns it to the IsFee field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetIsFee(v bool) {
	o.IsFee = &v
}

// GetIsIncome returns the IsIncome field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsIncome() bool {
	if o == nil || o.IsIncome == nil {
		var ret bool
		return ret
	}
	return *o.IsIncome
}

// GetIsIncomeOk returns a tuple with the IsIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsIncomeOk() (*bool, bool) {
	if o == nil || o.IsIncome == nil {
		return nil, false
	}
	return o.IsIncome, true
}

// HasIsIncome returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasIsIncome() bool {
	if o != nil && o.IsIncome != nil {
		return true
	}

	return false
}

// SetIsIncome gets a reference to the given bool and assigns it to the IsIncome field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetIsIncome(v bool) {
	o.IsIncome = &v
}

// GetIsInternational returns the IsInternational field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsInternational() bool {
	if o == nil || o.IsInternational == nil {
		var ret bool
		return ret
	}
	return *o.IsInternational
}

// GetIsInternationalOk returns a tuple with the IsInternational field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsInternationalOk() (*bool, bool) {
	if o == nil || o.IsInternational == nil {
		return nil, false
	}
	return o.IsInternational, true
}

// HasIsInternational returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasIsInternational() bool {
	if o != nil && o.IsInternational != nil {
		return true
	}

	return false
}

// SetIsInternational gets a reference to the given bool and assigns it to the IsInternational field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetIsInternational(v bool) {
	o.IsInternational = &v
}

// GetIsOverdraftFee returns the IsOverdraftFee field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsOverdraftFee() bool {
	if o == nil || o.IsOverdraftFee == nil {
		var ret bool
		return ret
	}
	return *o.IsOverdraftFee
}

// GetIsOverdraftFeeOk returns a tuple with the IsOverdraftFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsOverdraftFeeOk() (*bool, bool) {
	if o == nil || o.IsOverdraftFee == nil {
		return nil, false
	}
	return o.IsOverdraftFee, true
}

// HasIsOverdraftFee returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasIsOverdraftFee() bool {
	if o != nil && o.IsOverdraftFee != nil {
		return true
	}

	return false
}

// SetIsOverdraftFee gets a reference to the given bool and assigns it to the IsOverdraftFee field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetIsOverdraftFee(v bool) {
	o.IsOverdraftFee = &v
}

// GetIsPayrollAdvance returns the IsPayrollAdvance field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsPayrollAdvance() bool {
	if o == nil || o.IsPayrollAdvance == nil {
		var ret bool
		return ret
	}
	return *o.IsPayrollAdvance
}

// GetIsPayrollAdvanceOk returns a tuple with the IsPayrollAdvance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsPayrollAdvanceOk() (*bool, bool) {
	if o == nil || o.IsPayrollAdvance == nil {
		return nil, false
	}
	return o.IsPayrollAdvance, true
}

// HasIsPayrollAdvance returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasIsPayrollAdvance() bool {
	if o != nil && o.IsPayrollAdvance != nil {
		return true
	}

	return false
}

// SetIsPayrollAdvance gets a reference to the given bool and assigns it to the IsPayrollAdvance field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetIsPayrollAdvance(v bool) {
	o.IsPayrollAdvance = &v
}

// GetIsSubscription returns the IsSubscription field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsSubscription() bool {
	if o == nil || o.IsSubscription == nil {
		var ret bool
		return ret
	}
	return *o.IsSubscription
}

// GetIsSubscriptionOk returns a tuple with the IsSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetIsSubscriptionOk() (*bool, bool) {
	if o == nil || o.IsSubscription == nil {
		return nil, false
	}
	return o.IsSubscription, true
}

// HasIsSubscription returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasIsSubscription() bool {
	if o != nil && o.IsSubscription != nil {
		return true
	}

	return false
}

// SetIsSubscription gets a reference to the given bool and assigns it to the IsSubscription field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetIsSubscription(v bool) {
	o.IsSubscription = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetMemo() string {
	if o == nil || o.Memo == nil {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetMemoOk() (*string, bool) {
	if o == nil || o.Memo == nil {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasMemo() bool {
	if o != nil && o.Memo != nil {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetMemo(v string) {
	o.Memo = &v
}

// GetMerchantCategoryCode returns the MerchantCategoryCode field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetMerchantCategoryCode() int32 {
	if o == nil || o.MerchantCategoryCode == nil {
		var ret int32
		return ret
	}
	return *o.MerchantCategoryCode
}

// GetMerchantCategoryCodeOk returns a tuple with the MerchantCategoryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetMerchantCategoryCodeOk() (*int32, bool) {
	if o == nil || o.MerchantCategoryCode == nil {
		return nil, false
	}
	return o.MerchantCategoryCode, true
}

// HasMerchantCategoryCode returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasMerchantCategoryCode() bool {
	if o != nil && o.MerchantCategoryCode != nil {
		return true
	}

	return false
}

// SetMerchantCategoryCode gets a reference to the given int32 and assigns it to the MerchantCategoryCode field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetMerchantCategoryCode(v int32) {
	o.MerchantCategoryCode = &v
}

// GetMerchantGuid returns the MerchantGuid field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetMerchantGuid() string {
	if o == nil || o.MerchantGuid == nil {
		var ret string
		return ret
	}
	return *o.MerchantGuid
}

// GetMerchantGuidOk returns a tuple with the MerchantGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetMerchantGuidOk() (*string, bool) {
	if o == nil || o.MerchantGuid == nil {
		return nil, false
	}
	return o.MerchantGuid, true
}

// HasMerchantGuid returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasMerchantGuid() bool {
	if o != nil && o.MerchantGuid != nil {
		return true
	}

	return false
}

// SetMerchantGuid gets a reference to the given string and assigns it to the MerchantGuid field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetMerchantGuid(v string) {
	o.MerchantGuid = &v
}

// GetMerchantLocationGuid returns the MerchantLocationGuid field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetMerchantLocationGuid() string {
	if o == nil || o.MerchantLocationGuid == nil {
		var ret string
		return ret
	}
	return *o.MerchantLocationGuid
}

// GetMerchantLocationGuidOk returns a tuple with the MerchantLocationGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetMerchantLocationGuidOk() (*string, bool) {
	if o == nil || o.MerchantLocationGuid == nil {
		return nil, false
	}
	return o.MerchantLocationGuid, true
}

// HasMerchantLocationGuid returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasMerchantLocationGuid() bool {
	if o != nil && o.MerchantLocationGuid != nil {
		return true
	}

	return false
}

// SetMerchantLocationGuid gets a reference to the given string and assigns it to the MerchantLocationGuid field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetMerchantLocationGuid(v string) {
	o.MerchantLocationGuid = &v
}

// GetOriginalDescription returns the OriginalDescription field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetOriginalDescription() string {
	if o == nil || o.OriginalDescription == nil {
		var ret string
		return ret
	}
	return *o.OriginalDescription
}

// GetOriginalDescriptionOk returns a tuple with the OriginalDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetOriginalDescriptionOk() (*string, bool) {
	if o == nil || o.OriginalDescription == nil {
		return nil, false
	}
	return o.OriginalDescription, true
}

// HasOriginalDescription returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasOriginalDescription() bool {
	if o != nil && o.OriginalDescription != nil {
		return true
	}

	return false
}

// SetOriginalDescription gets a reference to the given string and assigns it to the OriginalDescription field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetOriginalDescription(v string) {
	o.OriginalDescription = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EnhancedTransactionDataEnhancedRawInner) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EnhancedTransactionDataEnhancedRawInner) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EnhancedTransactionDataEnhancedRawInner) SetType(v string) {
	o.Type = &v
}

func (o EnhancedTransactionDataEnhancedRawInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.CategorizedBy != nil {
		toSerialize["categorized_by"] = o.CategorizedBy
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.CategoryGuid != nil {
		toSerialize["category_guid"] = o.CategoryGuid
	}
	if o.DescribedBy != nil {
		toSerialize["described_by"] = o.DescribedBy
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ExtendedTransactionType != nil {
		toSerialize["extended_transaction_type"] = o.ExtendedTransactionType
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsBillPay != nil {
		toSerialize["is_bill_pay"] = o.IsBillPay
	}
	if o.IsDirectDeposit != nil {
		toSerialize["is_direct_deposit"] = o.IsDirectDeposit
	}
	if o.IsExpense != nil {
		toSerialize["is_expense"] = o.IsExpense
	}
	if o.IsFee != nil {
		toSerialize["is_fee"] = o.IsFee
	}
	if o.IsIncome != nil {
		toSerialize["is_income"] = o.IsIncome
	}
	if o.IsInternational != nil {
		toSerialize["is_international"] = o.IsInternational
	}
	if o.IsOverdraftFee != nil {
		toSerialize["is_overdraft_fee"] = o.IsOverdraftFee
	}
	if o.IsPayrollAdvance != nil {
		toSerialize["is_payroll_advance"] = o.IsPayrollAdvance
	}
	if o.IsSubscription != nil {
		toSerialize["is_subscription"] = o.IsSubscription
	}
	if o.Memo != nil {
		toSerialize["memo"] = o.Memo
	}
	if o.MerchantCategoryCode != nil {
		toSerialize["merchant_category_code"] = o.MerchantCategoryCode
	}
	if o.MerchantGuid != nil {
		toSerialize["merchant_guid"] = o.MerchantGuid
	}
	if o.MerchantLocationGuid != nil {
		toSerialize["merchant_location_guid"] = o.MerchantLocationGuid
	}
	if o.OriginalDescription != nil {
		toSerialize["original_description"] = o.OriginalDescription
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableEnhancedTransactionDataEnhancedRawInner struct {
	value *EnhancedTransactionDataEnhancedRawInner
	isSet bool
}

func (v NullableEnhancedTransactionDataEnhancedRawInner) Get() *EnhancedTransactionDataEnhancedRawInner {
	return v.value
}

func (v *NullableEnhancedTransactionDataEnhancedRawInner) Set(val *EnhancedTransactionDataEnhancedRawInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEnhancedTransactionDataEnhancedRawInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEnhancedTransactionDataEnhancedRawInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnhancedTransactionDataEnhancedRawInner(val *EnhancedTransactionDataEnhancedRawInner) *NullableEnhancedTransactionDataEnhancedRawInner {
	return &NullableEnhancedTransactionDataEnhancedRawInner{value: val, isSet: true}
}

func (v NullableEnhancedTransactionDataEnhancedRawInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnhancedTransactionDataEnhancedRawInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
