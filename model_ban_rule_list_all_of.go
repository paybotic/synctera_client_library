/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.32.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BanRuleListAllOf struct for BanRuleListAllOf
type BanRuleListAllOf struct {
	// Array of ban rules
	BanRules []BanRule `json:"ban_rules"`
}

// NewBanRuleListAllOf instantiates a new BanRuleListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBanRuleListAllOf(banRules []BanRule) *BanRuleListAllOf {
	this := BanRuleListAllOf{}
	this.BanRules = banRules
	return &this
}

// NewBanRuleListAllOfWithDefaults instantiates a new BanRuleListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBanRuleListAllOfWithDefaults() *BanRuleListAllOf {
	this := BanRuleListAllOf{}
	return &this
}

// GetBanRules returns the BanRules field value
func (o *BanRuleListAllOf) GetBanRules() []BanRule {
	if o == nil {
		var ret []BanRule
		return ret
	}

	return o.BanRules
}

// GetBanRulesOk returns a tuple with the BanRules field value
// and a boolean to check if the value has been set.
func (o *BanRuleListAllOf) GetBanRulesOk() ([]BanRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.BanRules, true
}

// SetBanRules sets field value
func (o *BanRuleListAllOf) SetBanRules(v []BanRule) {
	o.BanRules = v
}

func (o BanRuleListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ban_rules"] = o.BanRules
	}
	return json.Marshal(toSerialize)
}

type NullableBanRuleListAllOf struct {
	value *BanRuleListAllOf
	isSet bool
}

func (v NullableBanRuleListAllOf) Get() *BanRuleListAllOf {
	return v.value
}

func (v *NullableBanRuleListAllOf) Set(val *BanRuleListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBanRuleListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBanRuleListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBanRuleListAllOf(val *BanRuleListAllOf) *NullableBanRuleListAllOf {
	return &NullableBanRuleListAllOf{value: val, isSet: true}
}

func (v NullableBanRuleListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBanRuleListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


