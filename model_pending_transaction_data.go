/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 
 *
 * API version: 0.17.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger
import (
	"time"
)

type PendingTransactionData struct {
	// The amount of the hold.
	Amount int32 `json:"amount"`
	// The account \"available balance\" at the time this hold was created
	AvailBalance int32 `json:"avail_balance"`
	// The account balance at the time this hold was created
	Balance int32 `json:"balance"`
	// ISO 4217 alphabetic currency code of the transfer amount
	Currency string `json:"currency"`
	DcSign *DcSign `json:"dc_sign"`
	// The effective date of the transaction once it gets posted
	EffectiveDate time.Time `json:"effective_date"`
	// The date that at which this hold is no longer valid.
	ExpiresAt time.Time `json:"expires_at"`
	// an unstructured json blob representing additional transaction information supplied by the integrator.
	ExternalData *interface{} `json:"external_data"`
	// Whether or not the hold was forced (spending controls ignored)
	ForcePost bool `json:"force_post"`
	// An array representing any previous states of the hold, if it has been modified (For example, increasing or decreasing the hold amount).
	History []PendingTransactionHistory `json:"history"`
	Memo string `json:"memo"`
	// The network this transaction is associated with
	Network string `json:"network"`
	Operation string `json:"operation"`
	// If a hold has been declined or modified, this will include the reason.
	Reason string `json:"reason"`
	// The requested amount, in the case of hold modifications.
	ReqAmount int32 `json:"req_amount"`
	// Information received by the transaction risk/fraud service related to this transaction
	RiskInfo *interface{} `json:"risk_info"`
	// The status of the hold.
	Status string `json:"status"`
	// The specific transaction type. For example, for `ach`, this may be \"outgoing_debit\".
	Subtype string `json:"subtype"`
	// The total amount of the hold. This may be different than `amount` in the case where a hold increase or decrease was requested.
	TotalAmount int32 `json:"total_amount"`
	// The uuid of the transaction that this pending transaction originated from, if any. This is primary used when a transaction \"posts\", but a subset of the amount reserved until a future settlement date.
	TransactionId string `json:"transaction_id,omitempty"`
	// The general type of transaction. For example, \"card\" or \"ach\".
	Type_ string `json:"type"`
	// An unstructured JSON blob representing additional transaction information specific to each payment rail.
	UserData *interface{} `json:"user_data"`
	// Does this hold represent a partial debit (or credit)?
	WasPartial bool `json:"was_partial"`
}
