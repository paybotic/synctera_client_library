/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.69.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResponsePersonalId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsePersonalId{}

// ResponsePersonalId struct for ResponsePersonalId
type ResponsePersonalId struct {
	// The ISO 3166 Alpha-2 country code for the country that issued the personal identifier. 
	CountryCode string `json:"country_code"`
	// UUID for the personal identifier for subsequent changes and deletion
	Id string `json:"id"`
	IdType PersonalIdType `json:"id_type"`
	// The personal identifier. Format varies by personal identifier type.
	Identifier string `json:"identifier"`
	// True if the identifier was provided by the system, e.g. via SSN Prefill.
	SystemProvided bool `json:"system_provided"`
}

// NewResponsePersonalId instantiates a new ResponsePersonalId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsePersonalId(countryCode string, id string, idType PersonalIdType, identifier string, systemProvided bool) *ResponsePersonalId {
	this := ResponsePersonalId{}
	this.CountryCode = countryCode
	this.Id = id
	this.IdType = idType
	this.Identifier = identifier
	this.SystemProvided = systemProvided
	return &this
}

// NewResponsePersonalIdWithDefaults instantiates a new ResponsePersonalId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsePersonalIdWithDefaults() *ResponsePersonalId {
	this := ResponsePersonalId{}
	return &this
}

// GetCountryCode returns the CountryCode field value
func (o *ResponsePersonalId) GetCountryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
func (o *ResponsePersonalId) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryCode, true
}

// SetCountryCode sets field value
func (o *ResponsePersonalId) SetCountryCode(v string) {
	o.CountryCode = v
}

// GetId returns the Id field value
func (o *ResponsePersonalId) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ResponsePersonalId) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ResponsePersonalId) SetId(v string) {
	o.Id = v
}

// GetIdType returns the IdType field value
func (o *ResponsePersonalId) GetIdType() PersonalIdType {
	if o == nil {
		var ret PersonalIdType
		return ret
	}

	return o.IdType
}

// GetIdTypeOk returns a tuple with the IdType field value
// and a boolean to check if the value has been set.
func (o *ResponsePersonalId) GetIdTypeOk() (*PersonalIdType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdType, true
}

// SetIdType sets field value
func (o *ResponsePersonalId) SetIdType(v PersonalIdType) {
	o.IdType = v
}

// GetIdentifier returns the Identifier field value
func (o *ResponsePersonalId) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *ResponsePersonalId) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *ResponsePersonalId) SetIdentifier(v string) {
	o.Identifier = v
}

// GetSystemProvided returns the SystemProvided field value
func (o *ResponsePersonalId) GetSystemProvided() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SystemProvided
}

// GetSystemProvidedOk returns a tuple with the SystemProvided field value
// and a boolean to check if the value has been set.
func (o *ResponsePersonalId) GetSystemProvidedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemProvided, true
}

// SetSystemProvided sets field value
func (o *ResponsePersonalId) SetSystemProvided(v bool) {
	o.SystemProvided = v
}

func (o ResponsePersonalId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsePersonalId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["country_code"] = o.CountryCode
	toSerialize["id"] = o.Id
	toSerialize["id_type"] = o.IdType
	toSerialize["identifier"] = o.Identifier
	toSerialize["system_provided"] = o.SystemProvided
	return toSerialize, nil
}

type NullableResponsePersonalId struct {
	value *ResponsePersonalId
	isSet bool
}

func (v NullableResponsePersonalId) Get() *ResponsePersonalId {
	return v.value
}

func (v *NullableResponsePersonalId) Set(val *ResponsePersonalId) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsePersonalId) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsePersonalId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsePersonalId(val *ResponsePersonalId) *NullableResponsePersonalId {
	return &NullableResponsePersonalId{value: val, isSet: true}
}

func (v NullableResponsePersonalId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsePersonalId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


