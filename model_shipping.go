/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.69.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Shipping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Shipping{}

// Shipping Details about the shipping method. If supplied this will override the default shipping address of the customer or account.
type Shipping struct {
	Address *Address1 `json:"address,omitempty"`
	// The name of the person to send in care of
	CareOfLine *string `json:"care_of_line,omitempty"`
	// Is the shipment expedited
	IsExpeditedFulfillment *bool `json:"is_expedited_fulfillment,omitempty"`
	// The shipping method.  * `INTERNATIONAL_GROUND` is only available for addresses in Canada and Mexico. 
	Method *string `json:"method,omitempty"`
	// The phone number of the recipient
	PhoneNumber *string `json:"phone_number,omitempty"`
	RecipientName *RecipientName `json:"recipient_name,omitempty"`
}

// NewShipping instantiates a new Shipping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipping() *Shipping {
	this := Shipping{}
	var isExpeditedFulfillment bool = false
	this.IsExpeditedFulfillment = &isExpeditedFulfillment
	var method string = "LOCAL_MAIL"
	this.Method = &method
	return &this
}

// NewShippingWithDefaults instantiates a new Shipping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShippingWithDefaults() *Shipping {
	this := Shipping{}
	var isExpeditedFulfillment bool = false
	this.IsExpeditedFulfillment = &isExpeditedFulfillment
	var method string = "LOCAL_MAIL"
	this.Method = &method
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *Shipping) GetAddress() Address1 {
	if o == nil || IsNil(o.Address) {
		var ret Address1
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shipping) GetAddressOk() (*Address1, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *Shipping) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given Address1 and assigns it to the Address field.
func (o *Shipping) SetAddress(v Address1) {
	o.Address = &v
}

// GetCareOfLine returns the CareOfLine field value if set, zero value otherwise.
func (o *Shipping) GetCareOfLine() string {
	if o == nil || IsNil(o.CareOfLine) {
		var ret string
		return ret
	}
	return *o.CareOfLine
}

// GetCareOfLineOk returns a tuple with the CareOfLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shipping) GetCareOfLineOk() (*string, bool) {
	if o == nil || IsNil(o.CareOfLine) {
		return nil, false
	}
	return o.CareOfLine, true
}

// HasCareOfLine returns a boolean if a field has been set.
func (o *Shipping) HasCareOfLine() bool {
	if o != nil && !IsNil(o.CareOfLine) {
		return true
	}

	return false
}

// SetCareOfLine gets a reference to the given string and assigns it to the CareOfLine field.
func (o *Shipping) SetCareOfLine(v string) {
	o.CareOfLine = &v
}

// GetIsExpeditedFulfillment returns the IsExpeditedFulfillment field value if set, zero value otherwise.
func (o *Shipping) GetIsExpeditedFulfillment() bool {
	if o == nil || IsNil(o.IsExpeditedFulfillment) {
		var ret bool
		return ret
	}
	return *o.IsExpeditedFulfillment
}

// GetIsExpeditedFulfillmentOk returns a tuple with the IsExpeditedFulfillment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shipping) GetIsExpeditedFulfillmentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExpeditedFulfillment) {
		return nil, false
	}
	return o.IsExpeditedFulfillment, true
}

// HasIsExpeditedFulfillment returns a boolean if a field has been set.
func (o *Shipping) HasIsExpeditedFulfillment() bool {
	if o != nil && !IsNil(o.IsExpeditedFulfillment) {
		return true
	}

	return false
}

// SetIsExpeditedFulfillment gets a reference to the given bool and assigns it to the IsExpeditedFulfillment field.
func (o *Shipping) SetIsExpeditedFulfillment(v bool) {
	o.IsExpeditedFulfillment = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *Shipping) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shipping) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *Shipping) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *Shipping) SetMethod(v string) {
	o.Method = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *Shipping) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shipping) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *Shipping) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *Shipping) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetRecipientName returns the RecipientName field value if set, zero value otherwise.
func (o *Shipping) GetRecipientName() RecipientName {
	if o == nil || IsNil(o.RecipientName) {
		var ret RecipientName
		return ret
	}
	return *o.RecipientName
}

// GetRecipientNameOk returns a tuple with the RecipientName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Shipping) GetRecipientNameOk() (*RecipientName, bool) {
	if o == nil || IsNil(o.RecipientName) {
		return nil, false
	}
	return o.RecipientName, true
}

// HasRecipientName returns a boolean if a field has been set.
func (o *Shipping) HasRecipientName() bool {
	if o != nil && !IsNil(o.RecipientName) {
		return true
	}

	return false
}

// SetRecipientName gets a reference to the given RecipientName and assigns it to the RecipientName field.
func (o *Shipping) SetRecipientName(v RecipientName) {
	o.RecipientName = &v
}

func (o Shipping) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Shipping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.CareOfLine) {
		toSerialize["care_of_line"] = o.CareOfLine
	}
	if !IsNil(o.IsExpeditedFulfillment) {
		toSerialize["is_expedited_fulfillment"] = o.IsExpeditedFulfillment
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.RecipientName) {
		toSerialize["recipient_name"] = o.RecipientName
	}
	return toSerialize, nil
}

type NullableShipping struct {
	value *Shipping
	isSet bool
}

func (v NullableShipping) Get() *Shipping {
	return v.value
}

func (v *NullableShipping) Set(val *Shipping) {
	v.value = val
	v.isSet = true
}

func (v NullableShipping) IsSet() bool {
	return v.isSet
}

func (v *NullableShipping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipping(val *Shipping) *NullableShipping {
	return &NullableShipping{value: val, isSet: true}
}

func (v NullableShipping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


