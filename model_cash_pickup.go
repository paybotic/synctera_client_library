/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.32.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// CashPickup struct for CashPickup
type CashPickup struct {
	AccountId string `json:"account_id"`
	// The amount (in cents) of the transaction
	Amount int32 `json:"amount"`
	BusinessId string `json:"business_id"`
	CreationTime time.Time `json:"creation_time"`
	Currency string `json:"currency"`
	EmployeeCustomerId string `json:"employee_customer_id"`
	Id string `json:"id"`
	LastUpdatedTime time.Time `json:"last_updated_time"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	// the date when the money was actually picked up
	PickupTime *time.Time `json:"pickup_time,omitempty"`
	PostedAmount *int32 `json:"posted_amount,omitempty"`
	// The date the transaction was posted. This is the date any money is considered to be added or removed from an account.
	PostedDate *string `json:"posted_date,omitempty"`
	// An external ID provided by the partner. This is not guaranteed to be globally unique.
	ReferenceId string `json:"reference_id"`
	// the date when the money was expected to be picked up
	ScheduledPickupDate string `json:"scheduled_pickup_date"`
	TransactionId string `json:"transaction_id"`
	Status CashPickupStatus `json:"status"`
}

// NewCashPickup instantiates a new CashPickup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCashPickup(accountId string, amount int32, businessId string, creationTime time.Time, currency string, employeeCustomerId string, id string, lastUpdatedTime time.Time, referenceId string, scheduledPickupDate string, transactionId string, status CashPickupStatus) *CashPickup {
	this := CashPickup{}
	this.AccountId = accountId
	this.Amount = amount
	this.BusinessId = businessId
	this.CreationTime = creationTime
	this.Currency = currency
	this.EmployeeCustomerId = employeeCustomerId
	this.Id = id
	this.LastUpdatedTime = lastUpdatedTime
	this.ReferenceId = referenceId
	this.ScheduledPickupDate = scheduledPickupDate
	this.TransactionId = transactionId
	this.Status = status
	return &this
}

// NewCashPickupWithDefaults instantiates a new CashPickup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCashPickupWithDefaults() *CashPickup {
	this := CashPickup{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *CashPickup) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *CashPickup) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *CashPickup) SetAccountId(v string) {
	o.AccountId = v
}

// GetAmount returns the Amount field value
func (o *CashPickup) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CashPickup) GetAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CashPickup) SetAmount(v int32) {
	o.Amount = v
}

// GetBusinessId returns the BusinessId field value
func (o *CashPickup) GetBusinessId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BusinessId
}

// GetBusinessIdOk returns a tuple with the BusinessId field value
// and a boolean to check if the value has been set.
func (o *CashPickup) GetBusinessIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BusinessId, true
}

// SetBusinessId sets field value
func (o *CashPickup) SetBusinessId(v string) {
	o.BusinessId = v
}

// GetCreationTime returns the CreationTime field value
func (o *CashPickup) GetCreationTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value
// and a boolean to check if the value has been set.
func (o *CashPickup) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreationTime, true
}

// SetCreationTime sets field value
func (o *CashPickup) SetCreationTime(v time.Time) {
	o.CreationTime = v
}

// GetCurrency returns the Currency field value
func (o *CashPickup) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *CashPickup) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *CashPickup) SetCurrency(v string) {
	o.Currency = v
}

// GetEmployeeCustomerId returns the EmployeeCustomerId field value
func (o *CashPickup) GetEmployeeCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmployeeCustomerId
}

// GetEmployeeCustomerIdOk returns a tuple with the EmployeeCustomerId field value
// and a boolean to check if the value has been set.
func (o *CashPickup) GetEmployeeCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmployeeCustomerId, true
}

// SetEmployeeCustomerId sets field value
func (o *CashPickup) SetEmployeeCustomerId(v string) {
	o.EmployeeCustomerId = v
}

// GetId returns the Id field value
func (o *CashPickup) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CashPickup) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CashPickup) SetId(v string) {
	o.Id = v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value
func (o *CashPickup) GetLastUpdatedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value
// and a boolean to check if the value has been set.
func (o *CashPickup) GetLastUpdatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdatedTime, true
}

// SetLastUpdatedTime sets field value
func (o *CashPickup) SetLastUpdatedTime(v time.Time) {
	o.LastUpdatedTime = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CashPickup) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashPickup) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CashPickup) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CashPickup) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetPickupTime returns the PickupTime field value if set, zero value otherwise.
func (o *CashPickup) GetPickupTime() time.Time {
	if o == nil || o.PickupTime == nil {
		var ret time.Time
		return ret
	}
	return *o.PickupTime
}

// GetPickupTimeOk returns a tuple with the PickupTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashPickup) GetPickupTimeOk() (*time.Time, bool) {
	if o == nil || o.PickupTime == nil {
		return nil, false
	}
	return o.PickupTime, true
}

// HasPickupTime returns a boolean if a field has been set.
func (o *CashPickup) HasPickupTime() bool {
	if o != nil && o.PickupTime != nil {
		return true
	}

	return false
}

// SetPickupTime gets a reference to the given time.Time and assigns it to the PickupTime field.
func (o *CashPickup) SetPickupTime(v time.Time) {
	o.PickupTime = &v
}

// GetPostedAmount returns the PostedAmount field value if set, zero value otherwise.
func (o *CashPickup) GetPostedAmount() int32 {
	if o == nil || o.PostedAmount == nil {
		var ret int32
		return ret
	}
	return *o.PostedAmount
}

// GetPostedAmountOk returns a tuple with the PostedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashPickup) GetPostedAmountOk() (*int32, bool) {
	if o == nil || o.PostedAmount == nil {
		return nil, false
	}
	return o.PostedAmount, true
}

// HasPostedAmount returns a boolean if a field has been set.
func (o *CashPickup) HasPostedAmount() bool {
	if o != nil && o.PostedAmount != nil {
		return true
	}

	return false
}

// SetPostedAmount gets a reference to the given int32 and assigns it to the PostedAmount field.
func (o *CashPickup) SetPostedAmount(v int32) {
	o.PostedAmount = &v
}

// GetPostedDate returns the PostedDate field value if set, zero value otherwise.
func (o *CashPickup) GetPostedDate() string {
	if o == nil || o.PostedDate == nil {
		var ret string
		return ret
	}
	return *o.PostedDate
}

// GetPostedDateOk returns a tuple with the PostedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashPickup) GetPostedDateOk() (*string, bool) {
	if o == nil || o.PostedDate == nil {
		return nil, false
	}
	return o.PostedDate, true
}

// HasPostedDate returns a boolean if a field has been set.
func (o *CashPickup) HasPostedDate() bool {
	if o != nil && o.PostedDate != nil {
		return true
	}

	return false
}

// SetPostedDate gets a reference to the given string and assigns it to the PostedDate field.
func (o *CashPickup) SetPostedDate(v string) {
	o.PostedDate = &v
}

// GetReferenceId returns the ReferenceId field value
func (o *CashPickup) GetReferenceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value
// and a boolean to check if the value has been set.
func (o *CashPickup) GetReferenceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReferenceId, true
}

// SetReferenceId sets field value
func (o *CashPickup) SetReferenceId(v string) {
	o.ReferenceId = v
}

// GetScheduledPickupDate returns the ScheduledPickupDate field value
func (o *CashPickup) GetScheduledPickupDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScheduledPickupDate
}

// GetScheduledPickupDateOk returns a tuple with the ScheduledPickupDate field value
// and a boolean to check if the value has been set.
func (o *CashPickup) GetScheduledPickupDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScheduledPickupDate, true
}

// SetScheduledPickupDate sets field value
func (o *CashPickup) SetScheduledPickupDate(v string) {
	o.ScheduledPickupDate = v
}

// GetTransactionId returns the TransactionId field value
func (o *CashPickup) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *CashPickup) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *CashPickup) SetTransactionId(v string) {
	o.TransactionId = v
}

// GetStatus returns the Status field value
func (o *CashPickup) GetStatus() CashPickupStatus {
	if o == nil {
		var ret CashPickupStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CashPickup) GetStatusOk() (*CashPickupStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CashPickup) SetStatus(v CashPickupStatus) {
	o.Status = v
}

func (o CashPickup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["business_id"] = o.BusinessId
	}
	if true {
		toSerialize["creation_time"] = o.CreationTime
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if true {
		toSerialize["employee_customer_id"] = o.EmployeeCustomerId
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["last_updated_time"] = o.LastUpdatedTime
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.PickupTime != nil {
		toSerialize["pickup_time"] = o.PickupTime
	}
	if o.PostedAmount != nil {
		toSerialize["posted_amount"] = o.PostedAmount
	}
	if o.PostedDate != nil {
		toSerialize["posted_date"] = o.PostedDate
	}
	if true {
		toSerialize["reference_id"] = o.ReferenceId
	}
	if true {
		toSerialize["scheduled_pickup_date"] = o.ScheduledPickupDate
	}
	if true {
		toSerialize["transaction_id"] = o.TransactionId
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableCashPickup struct {
	value *CashPickup
	isSet bool
}

func (v NullableCashPickup) Get() *CashPickup {
	return v.value
}

func (v *NullableCashPickup) Set(val *CashPickup) {
	v.value = val
	v.isSet = true
}

func (v NullableCashPickup) IsSet() bool {
	return v.isSet
}

func (v *NullableCashPickup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCashPickup(val *CashPickup) *NullableCashPickup {
	return &NullableCashPickup{value: val, isSet: true}
}

func (v NullableCashPickup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCashPickup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


