/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AccountChargeSecuredAllOf struct for AccountChargeSecuredAllOf
type AccountChargeSecuredAllOf struct {
	Security *Security `json:"security,omitempty"`
}

// NewAccountChargeSecuredAllOf instantiates a new AccountChargeSecuredAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountChargeSecuredAllOf() *AccountChargeSecuredAllOf {
	this := AccountChargeSecuredAllOf{}
	return &this
}

// NewAccountChargeSecuredAllOfWithDefaults instantiates a new AccountChargeSecuredAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountChargeSecuredAllOfWithDefaults() *AccountChargeSecuredAllOf {
	this := AccountChargeSecuredAllOf{}
	return &this
}

// GetSecurity returns the Security field value if set, zero value otherwise.
func (o *AccountChargeSecuredAllOf) GetSecurity() Security {
	if o == nil || o.Security == nil {
		var ret Security
		return ret
	}
	return *o.Security
}

// GetSecurityOk returns a tuple with the Security field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountChargeSecuredAllOf) GetSecurityOk() (*Security, bool) {
	if o == nil || o.Security == nil {
		return nil, false
	}
	return o.Security, true
}

// HasSecurity returns a boolean if a field has been set.
func (o *AccountChargeSecuredAllOf) HasSecurity() bool {
	if o != nil && o.Security != nil {
		return true
	}

	return false
}

// SetSecurity gets a reference to the given Security and assigns it to the Security field.
func (o *AccountChargeSecuredAllOf) SetSecurity(v Security) {
	o.Security = &v
}

func (o AccountChargeSecuredAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Security != nil {
		toSerialize["security"] = o.Security
	}
	return json.Marshal(toSerialize)
}

type NullableAccountChargeSecuredAllOf struct {
	value *AccountChargeSecuredAllOf
	isSet bool
}

func (v NullableAccountChargeSecuredAllOf) Get() *AccountChargeSecuredAllOf {
	return v.value
}

func (v *NullableAccountChargeSecuredAllOf) Set(val *AccountChargeSecuredAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountChargeSecuredAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountChargeSecuredAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountChargeSecuredAllOf(val *AccountChargeSecuredAllOf) *NullableAccountChargeSecuredAllOf {
	return &NullableAccountChargeSecuredAllOf{value: val, isSet: true}
}

func (v NullableAccountChargeSecuredAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountChargeSecuredAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


