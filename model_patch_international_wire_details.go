/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.140.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PatchInternationalWireDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchInternationalWireDetails{}

// PatchInternationalWireDetails struct for PatchInternationalWireDetails
type PatchInternationalWireDetails struct {
	BankAddress *Address `json:"bank_address,omitempty"`
	// Correspondent banks details used for international payments. Note that in a patch request, the entirity of the correspondent_banks_details array will be updated.
	CorrespondentBanksDetails []CorrespondentBankDetails `json:"correspondent_banks_details,omitempty"`
	// The SWIFT code (also known as BIC code) used for international payments.
	SwiftCode *string `json:"swift_code,omitempty" validate:"regexp=^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$"`
}

// NewPatchInternationalWireDetails instantiates a new PatchInternationalWireDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchInternationalWireDetails() *PatchInternationalWireDetails {
	this := PatchInternationalWireDetails{}
	return &this
}

// NewPatchInternationalWireDetailsWithDefaults instantiates a new PatchInternationalWireDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchInternationalWireDetailsWithDefaults() *PatchInternationalWireDetails {
	this := PatchInternationalWireDetails{}
	return &this
}

// GetBankAddress returns the BankAddress field value if set, zero value otherwise.
func (o *PatchInternationalWireDetails) GetBankAddress() Address {
	if o == nil || IsNil(o.BankAddress) {
		var ret Address
		return ret
	}
	return *o.BankAddress
}

// GetBankAddressOk returns a tuple with the BankAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchInternationalWireDetails) GetBankAddressOk() (*Address, bool) {
	if o == nil || IsNil(o.BankAddress) {
		return nil, false
	}
	return o.BankAddress, true
}

// HasBankAddress returns a boolean if a field has been set.
func (o *PatchInternationalWireDetails) HasBankAddress() bool {
	if o != nil && !IsNil(o.BankAddress) {
		return true
	}

	return false
}

// SetBankAddress gets a reference to the given Address and assigns it to the BankAddress field.
func (o *PatchInternationalWireDetails) SetBankAddress(v Address) {
	o.BankAddress = &v
}

// GetCorrespondentBanksDetails returns the CorrespondentBanksDetails field value if set, zero value otherwise.
func (o *PatchInternationalWireDetails) GetCorrespondentBanksDetails() []CorrespondentBankDetails {
	if o == nil || IsNil(o.CorrespondentBanksDetails) {
		var ret []CorrespondentBankDetails
		return ret
	}
	return o.CorrespondentBanksDetails
}

// GetCorrespondentBanksDetailsOk returns a tuple with the CorrespondentBanksDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchInternationalWireDetails) GetCorrespondentBanksDetailsOk() ([]CorrespondentBankDetails, bool) {
	if o == nil || IsNil(o.CorrespondentBanksDetails) {
		return nil, false
	}
	return o.CorrespondentBanksDetails, true
}

// HasCorrespondentBanksDetails returns a boolean if a field has been set.
func (o *PatchInternationalWireDetails) HasCorrespondentBanksDetails() bool {
	if o != nil && !IsNil(o.CorrespondentBanksDetails) {
		return true
	}

	return false
}

// SetCorrespondentBanksDetails gets a reference to the given []CorrespondentBankDetails and assigns it to the CorrespondentBanksDetails field.
func (o *PatchInternationalWireDetails) SetCorrespondentBanksDetails(v []CorrespondentBankDetails) {
	o.CorrespondentBanksDetails = v
}

// GetSwiftCode returns the SwiftCode field value if set, zero value otherwise.
func (o *PatchInternationalWireDetails) GetSwiftCode() string {
	if o == nil || IsNil(o.SwiftCode) {
		var ret string
		return ret
	}
	return *o.SwiftCode
}

// GetSwiftCodeOk returns a tuple with the SwiftCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchInternationalWireDetails) GetSwiftCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SwiftCode) {
		return nil, false
	}
	return o.SwiftCode, true
}

// HasSwiftCode returns a boolean if a field has been set.
func (o *PatchInternationalWireDetails) HasSwiftCode() bool {
	if o != nil && !IsNil(o.SwiftCode) {
		return true
	}

	return false
}

// SetSwiftCode gets a reference to the given string and assigns it to the SwiftCode field.
func (o *PatchInternationalWireDetails) SetSwiftCode(v string) {
	o.SwiftCode = &v
}

func (o PatchInternationalWireDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchInternationalWireDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BankAddress) {
		toSerialize["bank_address"] = o.BankAddress
	}
	if !IsNil(o.CorrespondentBanksDetails) {
		toSerialize["correspondent_banks_details"] = o.CorrespondentBanksDetails
	}
	if !IsNil(o.SwiftCode) {
		toSerialize["swift_code"] = o.SwiftCode
	}
	return toSerialize, nil
}

type NullablePatchInternationalWireDetails struct {
	value *PatchInternationalWireDetails
	isSet bool
}

func (v NullablePatchInternationalWireDetails) Get() *PatchInternationalWireDetails {
	return v.value
}

func (v *NullablePatchInternationalWireDetails) Set(val *PatchInternationalWireDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchInternationalWireDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchInternationalWireDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchInternationalWireDetails(val *PatchInternationalWireDetails) *NullablePatchInternationalWireDetails {
	return &NullablePatchInternationalWireDetails{value: val, isSet: true}
}

func (v NullablePatchInternationalWireDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchInternationalWireDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
