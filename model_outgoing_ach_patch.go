/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.69.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OutgoingAchPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutgoingAchPatch{}

// OutgoingAchPatch Update sent ach transaction
type OutgoingAchPatch struct {
	FundsAvailabilityTime NullableTime `json:"funds_availability_time,omitempty"`
	Status NullableString `json:"status,omitempty"`
}

// NewOutgoingAchPatch instantiates a new OutgoingAchPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutgoingAchPatch() *OutgoingAchPatch {
	this := OutgoingAchPatch{}
	return &this
}

// NewOutgoingAchPatchWithDefaults instantiates a new OutgoingAchPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutgoingAchPatchWithDefaults() *OutgoingAchPatch {
	this := OutgoingAchPatch{}
	return &this
}

// GetFundsAvailabilityTime returns the FundsAvailabilityTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutgoingAchPatch) GetFundsAvailabilityTime() time.Time {
	if o == nil || IsNil(o.FundsAvailabilityTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.FundsAvailabilityTime.Get()
}

// GetFundsAvailabilityTimeOk returns a tuple with the FundsAvailabilityTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutgoingAchPatch) GetFundsAvailabilityTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.FundsAvailabilityTime.Get(), o.FundsAvailabilityTime.IsSet()
}

// HasFundsAvailabilityTime returns a boolean if a field has been set.
func (o *OutgoingAchPatch) HasFundsAvailabilityTime() bool {
	if o != nil && o.FundsAvailabilityTime.IsSet() {
		return true
	}

	return false
}

// SetFundsAvailabilityTime gets a reference to the given NullableTime and assigns it to the FundsAvailabilityTime field.
func (o *OutgoingAchPatch) SetFundsAvailabilityTime(v time.Time) {
	o.FundsAvailabilityTime.Set(&v)
}
// SetFundsAvailabilityTimeNil sets the value for FundsAvailabilityTime to be an explicit nil
func (o *OutgoingAchPatch) SetFundsAvailabilityTimeNil() {
	o.FundsAvailabilityTime.Set(nil)
}

// UnsetFundsAvailabilityTime ensures that no value is present for FundsAvailabilityTime, not even an explicit nil
func (o *OutgoingAchPatch) UnsetFundsAvailabilityTime() {
	o.FundsAvailabilityTime.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutgoingAchPatch) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutgoingAchPatch) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *OutgoingAchPatch) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *OutgoingAchPatch) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *OutgoingAchPatch) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *OutgoingAchPatch) UnsetStatus() {
	o.Status.Unset()
}

func (o OutgoingAchPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutgoingAchPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FundsAvailabilityTime.IsSet() {
		toSerialize["funds_availability_time"] = o.FundsAvailabilityTime.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	return toSerialize, nil
}

type NullableOutgoingAchPatch struct {
	value *OutgoingAchPatch
	isSet bool
}

func (v NullableOutgoingAchPatch) Get() *OutgoingAchPatch {
	return v.value
}

func (v *NullableOutgoingAchPatch) Set(val *OutgoingAchPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableOutgoingAchPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableOutgoingAchPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutgoingAchPatch(val *OutgoingAchPatch) *NullableOutgoingAchPatch {
	return &NullableOutgoingAchPatch{value: val, isSet: true}
}

func (v NullableOutgoingAchPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutgoingAchPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


