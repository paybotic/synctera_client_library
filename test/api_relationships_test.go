/*
Synctera API

Testing RelationshipsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_RelationshipsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test RelationshipsAPIService CreateRelationship", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.RelationshipsAPI.CreateRelationship(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RelationshipsAPIService DeleteRelationship", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var relationshipId string

		resp, httpRes, err := apiClient.RelationshipsAPI.DeleteRelationship(context.Background(), relationshipId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RelationshipsAPIService GetRelationship", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var relationshipId string

		resp, httpRes, err := apiClient.RelationshipsAPI.GetRelationship(context.Background(), relationshipId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RelationshipsAPIService ListRelationships", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.RelationshipsAPI.ListRelationships(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test RelationshipsAPIService UpdateRelationship", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var relationshipId string

		resp, httpRes, err := apiClient.RelationshipsAPI.UpdateRelationship(context.Background(), relationshipId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
