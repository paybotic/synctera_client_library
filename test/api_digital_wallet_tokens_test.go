/*
Synctera API

Testing DigitalWalletTokensAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_synctera_client_DigitalWalletTokensAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DigitalWalletTokensAPIService CreateDigitalWalletApple", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var cardId string

		resp, httpRes, err := apiClient.DigitalWalletTokensAPI.CreateDigitalWalletApple(context.Background(), cardId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DigitalWalletTokensAPIService CreateDigitalWalletGoogle", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var cardId string

		resp, httpRes, err := apiClient.DigitalWalletTokensAPI.CreateDigitalWalletGoogle(context.Background(), cardId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DigitalWalletTokensAPIService GetDigitalWalletToken", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var digitalWalletTokenId string

		resp, httpRes, err := apiClient.DigitalWalletTokensAPI.GetDigitalWalletToken(context.Background(), digitalWalletTokenId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DigitalWalletTokensAPIService ListDigitalWalletTokens", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DigitalWalletTokensAPI.ListDigitalWalletTokens(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DigitalWalletTokensAPIService UpdateDigitalWalletTokenStatus", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var digitalWalletTokenId string

		resp, httpRes, err := apiClient.DigitalWalletTokensAPI.UpdateDigitalWalletTokenStatus(context.Background(), digitalWalletTokenId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
