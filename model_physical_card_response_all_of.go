/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PhysicalCardResponseAllOf struct for PhysicalCardResponseAllOf
type PhysicalCardResponseAllOf struct {
	// The bin number
	Bin *string `json:"bin,omitempty"`
	CardBrand CardBrand `json:"card_brand"`
	PhysicalCardFormat PhysicalCardFormat `json:"physical_card_format"`
}

// NewPhysicalCardResponseAllOf instantiates a new PhysicalCardResponseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhysicalCardResponseAllOf(cardBrand CardBrand, physicalCardFormat PhysicalCardFormat) *PhysicalCardResponseAllOf {
	this := PhysicalCardResponseAllOf{}
	this.CardBrand = cardBrand
	this.PhysicalCardFormat = physicalCardFormat
	return &this
}

// NewPhysicalCardResponseAllOfWithDefaults instantiates a new PhysicalCardResponseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhysicalCardResponseAllOfWithDefaults() *PhysicalCardResponseAllOf {
	this := PhysicalCardResponseAllOf{}
	return &this
}

// GetBin returns the Bin field value if set, zero value otherwise.
func (o *PhysicalCardResponseAllOf) GetBin() string {
	if o == nil || o.Bin == nil {
		var ret string
		return ret
	}
	return *o.Bin
}

// GetBinOk returns a tuple with the Bin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhysicalCardResponseAllOf) GetBinOk() (*string, bool) {
	if o == nil || o.Bin == nil {
		return nil, false
	}
	return o.Bin, true
}

// HasBin returns a boolean if a field has been set.
func (o *PhysicalCardResponseAllOf) HasBin() bool {
	if o != nil && o.Bin != nil {
		return true
	}

	return false
}

// SetBin gets a reference to the given string and assigns it to the Bin field.
func (o *PhysicalCardResponseAllOf) SetBin(v string) {
	o.Bin = &v
}

// GetCardBrand returns the CardBrand field value
func (o *PhysicalCardResponseAllOf) GetCardBrand() CardBrand {
	if o == nil {
		var ret CardBrand
		return ret
	}

	return o.CardBrand
}

// GetCardBrandOk returns a tuple with the CardBrand field value
// and a boolean to check if the value has been set.
func (o *PhysicalCardResponseAllOf) GetCardBrandOk() (*CardBrand, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardBrand, true
}

// SetCardBrand sets field value
func (o *PhysicalCardResponseAllOf) SetCardBrand(v CardBrand) {
	o.CardBrand = v
}

// GetPhysicalCardFormat returns the PhysicalCardFormat field value
func (o *PhysicalCardResponseAllOf) GetPhysicalCardFormat() PhysicalCardFormat {
	if o == nil {
		var ret PhysicalCardFormat
		return ret
	}

	return o.PhysicalCardFormat
}

// GetPhysicalCardFormatOk returns a tuple with the PhysicalCardFormat field value
// and a boolean to check if the value has been set.
func (o *PhysicalCardResponseAllOf) GetPhysicalCardFormatOk() (*PhysicalCardFormat, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PhysicalCardFormat, true
}

// SetPhysicalCardFormat sets field value
func (o *PhysicalCardResponseAllOf) SetPhysicalCardFormat(v PhysicalCardFormat) {
	o.PhysicalCardFormat = v
}

func (o PhysicalCardResponseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bin != nil {
		toSerialize["bin"] = o.Bin
	}
	if true {
		toSerialize["card_brand"] = o.CardBrand
	}
	if true {
		toSerialize["physical_card_format"] = o.PhysicalCardFormat
	}
	return json.Marshal(toSerialize)
}

type NullablePhysicalCardResponseAllOf struct {
	value *PhysicalCardResponseAllOf
	isSet bool
}

func (v NullablePhysicalCardResponseAllOf) Get() *PhysicalCardResponseAllOf {
	return v.value
}

func (v *NullablePhysicalCardResponseAllOf) Set(val *PhysicalCardResponseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePhysicalCardResponseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePhysicalCardResponseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhysicalCardResponseAllOf(val *PhysicalCardResponseAllOf) *NullablePhysicalCardResponseAllOf {
	return &NullablePhysicalCardResponseAllOf{value: val, isSet: true}
}

func (v NullablePhysicalCardResponseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhysicalCardResponseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


