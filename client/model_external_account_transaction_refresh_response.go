/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
	"fmt"
)

// checks if the ExternalAccountTransactionRefreshResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalAccountTransactionRefreshResponse{}

// ExternalAccountTransactionRefreshResponse struct for ExternalAccountTransactionRefreshResponse
type ExternalAccountTransactionRefreshResponse struct {
	// Number of transactions synced for the access token associated with this external account.
	TransactionsSynced   int64 `json:"transactions_synced"`
	AdditionalProperties map[string]interface{}
}

type _ExternalAccountTransactionRefreshResponse ExternalAccountTransactionRefreshResponse

// NewExternalAccountTransactionRefreshResponse instantiates a new ExternalAccountTransactionRefreshResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalAccountTransactionRefreshResponse(transactionsSynced int64) *ExternalAccountTransactionRefreshResponse {
	this := ExternalAccountTransactionRefreshResponse{}
	this.TransactionsSynced = transactionsSynced
	return &this
}

// NewExternalAccountTransactionRefreshResponseWithDefaults instantiates a new ExternalAccountTransactionRefreshResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalAccountTransactionRefreshResponseWithDefaults() *ExternalAccountTransactionRefreshResponse {
	this := ExternalAccountTransactionRefreshResponse{}
	return &this
}

// GetTransactionsSynced returns the TransactionsSynced field value
func (o *ExternalAccountTransactionRefreshResponse) GetTransactionsSynced() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TransactionsSynced
}

// GetTransactionsSyncedOk returns a tuple with the TransactionsSynced field value
// and a boolean to check if the value has been set.
func (o *ExternalAccountTransactionRefreshResponse) GetTransactionsSyncedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionsSynced, true
}

// SetTransactionsSynced sets field value
func (o *ExternalAccountTransactionRefreshResponse) SetTransactionsSynced(v int64) {
	o.TransactionsSynced = v
}

func (o ExternalAccountTransactionRefreshResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalAccountTransactionRefreshResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["transactions_synced"] = o.TransactionsSynced

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExternalAccountTransactionRefreshResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"transactions_synced",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalAccountTransactionRefreshResponse := _ExternalAccountTransactionRefreshResponse{}

	err = json.Unmarshal(data, &varExternalAccountTransactionRefreshResponse)

	if err != nil {
		return err
	}

	*o = ExternalAccountTransactionRefreshResponse(varExternalAccountTransactionRefreshResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "transactions_synced")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExternalAccountTransactionRefreshResponse struct {
	value *ExternalAccountTransactionRefreshResponse
	isSet bool
}

func (v NullableExternalAccountTransactionRefreshResponse) Get() *ExternalAccountTransactionRefreshResponse {
	return v.value
}

func (v *NullableExternalAccountTransactionRefreshResponse) Set(val *ExternalAccountTransactionRefreshResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalAccountTransactionRefreshResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalAccountTransactionRefreshResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalAccountTransactionRefreshResponse(val *ExternalAccountTransactionRefreshResponse) *NullableExternalAccountTransactionRefreshResponse {
	return &NullableExternalAccountTransactionRefreshResponse{value: val, isSet: true}
}

func (v NullableExternalAccountTransactionRefreshResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalAccountTransactionRefreshResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
