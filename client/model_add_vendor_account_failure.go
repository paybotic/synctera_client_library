/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.150.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AddVendorAccountFailure type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddVendorAccountFailure{}

// AddVendorAccountFailure struct for AddVendorAccountFailure
type AddVendorAccountFailure struct {
	Reason AddVendorAccountsErrorReason `json:"reason"`
	// A human-readable message describing the reason for the failure.
	ReasonDescription string `json:"reason_description"`
	// The vendor account ID for the account that failed. For Plaid, this is an `account_id`.
	VendorAccountId string `json:"vendor_account_id"`
	// The display_message returned by the vendor. Only returned if reason is set to `PROVIDER_ERROR`. For Plaid, this is the `display_message`.
	VendorErrorMessage *string `json:"vendor_error_message,omitempty"`
	// A unique identifier for the request from the vendor, which can be used for troubleshooting. Only returned if reason is set to `PROVIDER_ERROR`.
	VendorRequestId *string `json:"vendor_request_id,omitempty"`
}

type _AddVendorAccountFailure AddVendorAccountFailure

// NewAddVendorAccountFailure instantiates a new AddVendorAccountFailure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddVendorAccountFailure(reason AddVendorAccountsErrorReason, reasonDescription string, vendorAccountId string) *AddVendorAccountFailure {
	this := AddVendorAccountFailure{}
	this.Reason = reason
	this.ReasonDescription = reasonDescription
	this.VendorAccountId = vendorAccountId
	return &this
}

// NewAddVendorAccountFailureWithDefaults instantiates a new AddVendorAccountFailure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddVendorAccountFailureWithDefaults() *AddVendorAccountFailure {
	this := AddVendorAccountFailure{}
	return &this
}

// GetReason returns the Reason field value
func (o *AddVendorAccountFailure) GetReason() AddVendorAccountsErrorReason {
	if o == nil {
		var ret AddVendorAccountsErrorReason
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *AddVendorAccountFailure) GetReasonOk() (*AddVendorAccountsErrorReason, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *AddVendorAccountFailure) SetReason(v AddVendorAccountsErrorReason) {
	o.Reason = v
}

// GetReasonDescription returns the ReasonDescription field value
func (o *AddVendorAccountFailure) GetReasonDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReasonDescription
}

// GetReasonDescriptionOk returns a tuple with the ReasonDescription field value
// and a boolean to check if the value has been set.
func (o *AddVendorAccountFailure) GetReasonDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReasonDescription, true
}

// SetReasonDescription sets field value
func (o *AddVendorAccountFailure) SetReasonDescription(v string) {
	o.ReasonDescription = v
}

// GetVendorAccountId returns the VendorAccountId field value
func (o *AddVendorAccountFailure) GetVendorAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VendorAccountId
}

// GetVendorAccountIdOk returns a tuple with the VendorAccountId field value
// and a boolean to check if the value has been set.
func (o *AddVendorAccountFailure) GetVendorAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VendorAccountId, true
}

// SetVendorAccountId sets field value
func (o *AddVendorAccountFailure) SetVendorAccountId(v string) {
	o.VendorAccountId = v
}

// GetVendorErrorMessage returns the VendorErrorMessage field value if set, zero value otherwise.
func (o *AddVendorAccountFailure) GetVendorErrorMessage() string {
	if o == nil || IsNil(o.VendorErrorMessage) {
		var ret string
		return ret
	}
	return *o.VendorErrorMessage
}

// GetVendorErrorMessageOk returns a tuple with the VendorErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVendorAccountFailure) GetVendorErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.VendorErrorMessage) {
		return nil, false
	}
	return o.VendorErrorMessage, true
}

// HasVendorErrorMessage returns a boolean if a field has been set.
func (o *AddVendorAccountFailure) HasVendorErrorMessage() bool {
	if o != nil && !IsNil(o.VendorErrorMessage) {
		return true
	}

	return false
}

// SetVendorErrorMessage gets a reference to the given string and assigns it to the VendorErrorMessage field.
func (o *AddVendorAccountFailure) SetVendorErrorMessage(v string) {
	o.VendorErrorMessage = &v
}

// GetVendorRequestId returns the VendorRequestId field value if set, zero value otherwise.
func (o *AddVendorAccountFailure) GetVendorRequestId() string {
	if o == nil || IsNil(o.VendorRequestId) {
		var ret string
		return ret
	}
	return *o.VendorRequestId
}

// GetVendorRequestIdOk returns a tuple with the VendorRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVendorAccountFailure) GetVendorRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.VendorRequestId) {
		return nil, false
	}
	return o.VendorRequestId, true
}

// HasVendorRequestId returns a boolean if a field has been set.
func (o *AddVendorAccountFailure) HasVendorRequestId() bool {
	if o != nil && !IsNil(o.VendorRequestId) {
		return true
	}

	return false
}

// SetVendorRequestId gets a reference to the given string and assigns it to the VendorRequestId field.
func (o *AddVendorAccountFailure) SetVendorRequestId(v string) {
	o.VendorRequestId = &v
}

func (o AddVendorAccountFailure) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddVendorAccountFailure) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["reason"] = o.Reason
	toSerialize["reason_description"] = o.ReasonDescription
	toSerialize["vendor_account_id"] = o.VendorAccountId
	if !IsNil(o.VendorErrorMessage) {
		toSerialize["vendor_error_message"] = o.VendorErrorMessage
	}
	if !IsNil(o.VendorRequestId) {
		toSerialize["vendor_request_id"] = o.VendorRequestId
	}
	return toSerialize, nil
}

func (o *AddVendorAccountFailure) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"reason",
		"reason_description",
		"vendor_account_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddVendorAccountFailure := _AddVendorAccountFailure{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddVendorAccountFailure)

	if err != nil {
		return err
	}

	*o = AddVendorAccountFailure(varAddVendorAccountFailure)

	return err
}

type NullableAddVendorAccountFailure struct {
	value *AddVendorAccountFailure
	isSet bool
}

func (v NullableAddVendorAccountFailure) Get() *AddVendorAccountFailure {
	return v.value
}

func (v *NullableAddVendorAccountFailure) Set(val *AddVendorAccountFailure) {
	v.value = val
	v.isSet = true
}

func (v NullableAddVendorAccountFailure) IsSet() bool {
	return v.isSet
}

func (v *NullableAddVendorAccountFailure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddVendorAccountFailure(val *AddVendorAccountFailure) *NullableAddVendorAccountFailure {
	return &NullableAddVendorAccountFailure{value: val, isSet: true}
}

func (v NullableAddVendorAccountFailure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddVendorAccountFailure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
