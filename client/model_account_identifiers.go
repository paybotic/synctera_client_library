/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.150.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AccountIdentifiers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountIdentifiers{}

// AccountIdentifiers struct for AccountIdentifiers
type AccountIdentifiers struct {
	// The IBAN of the account. Value may be masked, in which case only the last four digits are returned.
	Iban *string `json:"iban,omitempty"`
	// The account number. Value may be masked, in which case only the last four digits are returned.
	Number string `json:"number"`
}

type _AccountIdentifiers AccountIdentifiers

// NewAccountIdentifiers instantiates a new AccountIdentifiers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountIdentifiers(number string) *AccountIdentifiers {
	this := AccountIdentifiers{}
	this.Number = number
	return &this
}

// NewAccountIdentifiersWithDefaults instantiates a new AccountIdentifiers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountIdentifiersWithDefaults() *AccountIdentifiers {
	this := AccountIdentifiers{}
	return &this
}

// GetIban returns the Iban field value if set, zero value otherwise.
func (o *AccountIdentifiers) GetIban() string {
	if o == nil || IsNil(o.Iban) {
		var ret string
		return ret
	}
	return *o.Iban
}

// GetIbanOk returns a tuple with the Iban field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIdentifiers) GetIbanOk() (*string, bool) {
	if o == nil || IsNil(o.Iban) {
		return nil, false
	}
	return o.Iban, true
}

// HasIban returns a boolean if a field has been set.
func (o *AccountIdentifiers) HasIban() bool {
	if o != nil && !IsNil(o.Iban) {
		return true
	}

	return false
}

// SetIban gets a reference to the given string and assigns it to the Iban field.
func (o *AccountIdentifiers) SetIban(v string) {
	o.Iban = &v
}

// GetNumber returns the Number field value
func (o *AccountIdentifiers) GetNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *AccountIdentifiers) GetNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *AccountIdentifiers) SetNumber(v string) {
	o.Number = v
}

func (o AccountIdentifiers) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountIdentifiers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Iban) {
		toSerialize["iban"] = o.Iban
	}
	toSerialize["number"] = o.Number
	return toSerialize, nil
}

func (o *AccountIdentifiers) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"number",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountIdentifiers := _AccountIdentifiers{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountIdentifiers)

	if err != nil {
		return err
	}

	*o = AccountIdentifiers(varAccountIdentifiers)

	return err
}

type NullableAccountIdentifiers struct {
	value *AccountIdentifiers
	isSet bool
}

func (v NullableAccountIdentifiers) Get() *AccountIdentifiers {
	return v.value
}

func (v *NullableAccountIdentifiers) Set(val *AccountIdentifiers) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountIdentifiers) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountIdentifiers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountIdentifiers(val *AccountIdentifiers) *NullableAccountIdentifiers {
	return &NullableAccountIdentifiers{value: val, isSet: true}
}

func (v NullableAccountIdentifiers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountIdentifiers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
