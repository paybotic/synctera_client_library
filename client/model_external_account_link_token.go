/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ExternalAccountLinkToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalAccountLinkToken{}

// ExternalAccountLinkToken struct for ExternalAccountLinkToken
type ExternalAccountLinkToken struct {
	// The identifier for the business customer associated with this external account. Exactly one of `business_id` or `customer_id` must be specified.
	BusinessId *string `json:"business_id,omitempty"`
	// The name of your application, as it should be displayed in Link. Maximum length of 30 characters.
	ClientName string `json:"client_name"`
	// Country codes in the ISO-3166-1 alpha-2 country code standard.
	CountryCodes []string `json:"country_codes"`
	// The identifier for the personal customer associated with this external account. Exactly one of `customer_id` or `business_id` must be specified.
	CustomerId *string `json:"customer_id,omitempty"`
	// The expiration date for the link_token. Expires in 4 hours.
	Expiration *time.Time              `json:"expiration,omitempty"`
	Language   ExternalAccountLanguage `json:"language"`
	// The name of the Link customization from the Plaid Dashboard to be applied to Link. If not specified, the default customization will be used. When using a Link customization, the language in the customization must match the language selected via the language parameter, and the countries in the customization should match the country codes selected via country_codes.
	LinkCustomizationName *string `json:"link_customization_name,omitempty"`
	// A link_token, which can be supplied to Link in order to initialize it and receive a public_token, which can be exchanged for an access_token.
	LinkToken *string `json:"link_token,omitempty"`
	// A URI indicating the destination where a user should be forwarded after completing the Link flow; used to support OAuth authentication flows when launching Link in the browser or via a webview.
	RedirectUri *string `json:"redirect_uri,omitempty"`
	// A unique identifier for the request, which can be used for troubleshooting.
	RequestId *string `json:"request_id,omitempty"`
	// Describes the environment of the client code running a vendor-supplied SDK
	SdkType *string `json:"sdk_type,omitempty"`
	// The type of the link token. DEPOSITORY for checking and savings accounts, CREDIT for credit card type accounts, INVESTMENT for investment accounts, and MICRO_DEPOSIT for depository accounts with support for micro-deposits verification.
	Type string `json:"type"`
	// The access token associated with the Item data is being requested for.
	VendorAccessToken *string `json:"vendor_access_token,omitempty"`
	// The ID of the institution the access token is requested for. If present the link token will be created in an update mode.
	VendorInstitutionId *string `json:"vendor_institution_id,omitempty"`
	// If true, Synctera will attempt to verify that the external account owner is the same as the customer by comparing external account data to customer data. At least 2 of the following fields must match: name, phone number, email, address. Verification is disabled by default.
	VerifyOwner *bool `json:"verify_owner,omitempty"`
}

type _ExternalAccountLinkToken ExternalAccountLinkToken

// NewExternalAccountLinkToken instantiates a new ExternalAccountLinkToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalAccountLinkToken(clientName string, countryCodes []string, language ExternalAccountLanguage, type_ string) *ExternalAccountLinkToken {
	this := ExternalAccountLinkToken{}
	this.ClientName = clientName
	this.CountryCodes = countryCodes
	this.Language = language
	var sdkType string = "WEB"
	this.SdkType = &sdkType
	this.Type = type_
	var verifyOwner bool = false
	this.VerifyOwner = &verifyOwner
	return &this
}

// NewExternalAccountLinkTokenWithDefaults instantiates a new ExternalAccountLinkToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalAccountLinkTokenWithDefaults() *ExternalAccountLinkToken {
	this := ExternalAccountLinkToken{}
	var sdkType string = "WEB"
	this.SdkType = &sdkType
	var verifyOwner bool = false
	this.VerifyOwner = &verifyOwner
	return &this
}

// GetBusinessId returns the BusinessId field value if set, zero value otherwise.
func (o *ExternalAccountLinkToken) GetBusinessId() string {
	if o == nil || IsNil(o.BusinessId) {
		var ret string
		return ret
	}
	return *o.BusinessId
}

// GetBusinessIdOk returns a tuple with the BusinessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetBusinessIdOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessId) {
		return nil, false
	}
	return o.BusinessId, true
}

// HasBusinessId returns a boolean if a field has been set.
func (o *ExternalAccountLinkToken) HasBusinessId() bool {
	if o != nil && !IsNil(o.BusinessId) {
		return true
	}

	return false
}

// SetBusinessId gets a reference to the given string and assigns it to the BusinessId field.
func (o *ExternalAccountLinkToken) SetBusinessId(v string) {
	o.BusinessId = &v
}

// GetClientName returns the ClientName field value
func (o *ExternalAccountLinkToken) GetClientName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientName
}

// GetClientNameOk returns a tuple with the ClientName field value
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetClientNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientName, true
}

// SetClientName sets field value
func (o *ExternalAccountLinkToken) SetClientName(v string) {
	o.ClientName = v
}

// GetCountryCodes returns the CountryCodes field value
func (o *ExternalAccountLinkToken) GetCountryCodes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.CountryCodes
}

// GetCountryCodesOk returns a tuple with the CountryCodes field value
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetCountryCodesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CountryCodes, true
}

// SetCountryCodes sets field value
func (o *ExternalAccountLinkToken) SetCountryCodes(v []string) {
	o.CountryCodes = v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *ExternalAccountLinkToken) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *ExternalAccountLinkToken) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *ExternalAccountLinkToken) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *ExternalAccountLinkToken) GetExpiration() time.Time {
	if o == nil || IsNil(o.Expiration) {
		var ret time.Time
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetExpirationOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *ExternalAccountLinkToken) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given time.Time and assigns it to the Expiration field.
func (o *ExternalAccountLinkToken) SetExpiration(v time.Time) {
	o.Expiration = &v
}

// GetLanguage returns the Language field value
func (o *ExternalAccountLinkToken) GetLanguage() ExternalAccountLanguage {
	if o == nil {
		var ret ExternalAccountLanguage
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetLanguageOk() (*ExternalAccountLanguage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *ExternalAccountLinkToken) SetLanguage(v ExternalAccountLanguage) {
	o.Language = v
}

// GetLinkCustomizationName returns the LinkCustomizationName field value if set, zero value otherwise.
func (o *ExternalAccountLinkToken) GetLinkCustomizationName() string {
	if o == nil || IsNil(o.LinkCustomizationName) {
		var ret string
		return ret
	}
	return *o.LinkCustomizationName
}

// GetLinkCustomizationNameOk returns a tuple with the LinkCustomizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetLinkCustomizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.LinkCustomizationName) {
		return nil, false
	}
	return o.LinkCustomizationName, true
}

// HasLinkCustomizationName returns a boolean if a field has been set.
func (o *ExternalAccountLinkToken) HasLinkCustomizationName() bool {
	if o != nil && !IsNil(o.LinkCustomizationName) {
		return true
	}

	return false
}

// SetLinkCustomizationName gets a reference to the given string and assigns it to the LinkCustomizationName field.
func (o *ExternalAccountLinkToken) SetLinkCustomizationName(v string) {
	o.LinkCustomizationName = &v
}

// GetLinkToken returns the LinkToken field value if set, zero value otherwise.
func (o *ExternalAccountLinkToken) GetLinkToken() string {
	if o == nil || IsNil(o.LinkToken) {
		var ret string
		return ret
	}
	return *o.LinkToken
}

// GetLinkTokenOk returns a tuple with the LinkToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetLinkTokenOk() (*string, bool) {
	if o == nil || IsNil(o.LinkToken) {
		return nil, false
	}
	return o.LinkToken, true
}

// HasLinkToken returns a boolean if a field has been set.
func (o *ExternalAccountLinkToken) HasLinkToken() bool {
	if o != nil && !IsNil(o.LinkToken) {
		return true
	}

	return false
}

// SetLinkToken gets a reference to the given string and assigns it to the LinkToken field.
func (o *ExternalAccountLinkToken) SetLinkToken(v string) {
	o.LinkToken = &v
}

// GetRedirectUri returns the RedirectUri field value if set, zero value otherwise.
func (o *ExternalAccountLinkToken) GetRedirectUri() string {
	if o == nil || IsNil(o.RedirectUri) {
		var ret string
		return ret
	}
	return *o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetRedirectUriOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectUri) {
		return nil, false
	}
	return o.RedirectUri, true
}

// HasRedirectUri returns a boolean if a field has been set.
func (o *ExternalAccountLinkToken) HasRedirectUri() bool {
	if o != nil && !IsNil(o.RedirectUri) {
		return true
	}

	return false
}

// SetRedirectUri gets a reference to the given string and assigns it to the RedirectUri field.
func (o *ExternalAccountLinkToken) SetRedirectUri(v string) {
	o.RedirectUri = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *ExternalAccountLinkToken) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *ExternalAccountLinkToken) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *ExternalAccountLinkToken) SetRequestId(v string) {
	o.RequestId = &v
}

// GetSdkType returns the SdkType field value if set, zero value otherwise.
func (o *ExternalAccountLinkToken) GetSdkType() string {
	if o == nil || IsNil(o.SdkType) {
		var ret string
		return ret
	}
	return *o.SdkType
}

// GetSdkTypeOk returns a tuple with the SdkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetSdkTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SdkType) {
		return nil, false
	}
	return o.SdkType, true
}

// HasSdkType returns a boolean if a field has been set.
func (o *ExternalAccountLinkToken) HasSdkType() bool {
	if o != nil && !IsNil(o.SdkType) {
		return true
	}

	return false
}

// SetSdkType gets a reference to the given string and assigns it to the SdkType field.
func (o *ExternalAccountLinkToken) SetSdkType(v string) {
	o.SdkType = &v
}

// GetType returns the Type field value
func (o *ExternalAccountLinkToken) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ExternalAccountLinkToken) SetType(v string) {
	o.Type = v
}

// GetVendorAccessToken returns the VendorAccessToken field value if set, zero value otherwise.
func (o *ExternalAccountLinkToken) GetVendorAccessToken() string {
	if o == nil || IsNil(o.VendorAccessToken) {
		var ret string
		return ret
	}
	return *o.VendorAccessToken
}

// GetVendorAccessTokenOk returns a tuple with the VendorAccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetVendorAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.VendorAccessToken) {
		return nil, false
	}
	return o.VendorAccessToken, true
}

// HasVendorAccessToken returns a boolean if a field has been set.
func (o *ExternalAccountLinkToken) HasVendorAccessToken() bool {
	if o != nil && !IsNil(o.VendorAccessToken) {
		return true
	}

	return false
}

// SetVendorAccessToken gets a reference to the given string and assigns it to the VendorAccessToken field.
func (o *ExternalAccountLinkToken) SetVendorAccessToken(v string) {
	o.VendorAccessToken = &v
}

// GetVendorInstitutionId returns the VendorInstitutionId field value if set, zero value otherwise.
func (o *ExternalAccountLinkToken) GetVendorInstitutionId() string {
	if o == nil || IsNil(o.VendorInstitutionId) {
		var ret string
		return ret
	}
	return *o.VendorInstitutionId
}

// GetVendorInstitutionIdOk returns a tuple with the VendorInstitutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetVendorInstitutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.VendorInstitutionId) {
		return nil, false
	}
	return o.VendorInstitutionId, true
}

// HasVendorInstitutionId returns a boolean if a field has been set.
func (o *ExternalAccountLinkToken) HasVendorInstitutionId() bool {
	if o != nil && !IsNil(o.VendorInstitutionId) {
		return true
	}

	return false
}

// SetVendorInstitutionId gets a reference to the given string and assigns it to the VendorInstitutionId field.
func (o *ExternalAccountLinkToken) SetVendorInstitutionId(v string) {
	o.VendorInstitutionId = &v
}

// GetVerifyOwner returns the VerifyOwner field value if set, zero value otherwise.
func (o *ExternalAccountLinkToken) GetVerifyOwner() bool {
	if o == nil || IsNil(o.VerifyOwner) {
		var ret bool
		return ret
	}
	return *o.VerifyOwner
}

// GetVerifyOwnerOk returns a tuple with the VerifyOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountLinkToken) GetVerifyOwnerOk() (*bool, bool) {
	if o == nil || IsNil(o.VerifyOwner) {
		return nil, false
	}
	return o.VerifyOwner, true
}

// HasVerifyOwner returns a boolean if a field has been set.
func (o *ExternalAccountLinkToken) HasVerifyOwner() bool {
	if o != nil && !IsNil(o.VerifyOwner) {
		return true
	}

	return false
}

// SetVerifyOwner gets a reference to the given bool and assigns it to the VerifyOwner field.
func (o *ExternalAccountLinkToken) SetVerifyOwner(v bool) {
	o.VerifyOwner = &v
}

func (o ExternalAccountLinkToken) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalAccountLinkToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BusinessId) {
		toSerialize["business_id"] = o.BusinessId
	}
	toSerialize["client_name"] = o.ClientName
	toSerialize["country_codes"] = o.CountryCodes
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	toSerialize["language"] = o.Language
	if !IsNil(o.LinkCustomizationName) {
		toSerialize["link_customization_name"] = o.LinkCustomizationName
	}
	if !IsNil(o.LinkToken) {
		toSerialize["link_token"] = o.LinkToken
	}
	if !IsNil(o.RedirectUri) {
		toSerialize["redirect_uri"] = o.RedirectUri
	}
	if !IsNil(o.RequestId) {
		toSerialize["request_id"] = o.RequestId
	}
	if !IsNil(o.SdkType) {
		toSerialize["sdk_type"] = o.SdkType
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.VendorAccessToken) {
		toSerialize["vendor_access_token"] = o.VendorAccessToken
	}
	if !IsNil(o.VendorInstitutionId) {
		toSerialize["vendor_institution_id"] = o.VendorInstitutionId
	}
	if !IsNil(o.VerifyOwner) {
		toSerialize["verify_owner"] = o.VerifyOwner
	}
	return toSerialize, nil
}

func (o *ExternalAccountLinkToken) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"client_name",
		"country_codes",
		"language",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalAccountLinkToken := _ExternalAccountLinkToken{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalAccountLinkToken)

	if err != nil {
		return err
	}

	*o = ExternalAccountLinkToken(varExternalAccountLinkToken)

	return err
}

type NullableExternalAccountLinkToken struct {
	value *ExternalAccountLinkToken
	isSet bool
}

func (v NullableExternalAccountLinkToken) Get() *ExternalAccountLinkToken {
	return v.value
}

func (v *NullableExternalAccountLinkToken) Set(val *ExternalAccountLinkToken) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalAccountLinkToken) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalAccountLinkToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalAccountLinkToken(val *ExternalAccountLinkToken) *NullableExternalAccountLinkToken {
	return &NullableExternalAccountLinkToken{value: val, isSet: true}
}

func (v NullableExternalAccountLinkToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalAccountLinkToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
