/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
	"time"
)

// checks if the AccountGenericResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountGenericResponse{}

// AccountGenericResponse struct for AccountGenericResponse
type AccountGenericResponse struct {
	AccessStatus *AccountAccessStatus `json:"access_status,omitempty"`
	// Timestamp of the last modification of the access_status. RFC3339 format.
	AccessStatusLastUpdatedTime *time.Time      `json:"access_status_last_updated_time,omitempty"`
	AccountClosure              *AccountClosure `json:"account_closure,omitempty"`
	// Account number
	AccountNumber *string `json:"account_number,omitempty"`
	// The response will contain the bank fintech ID (3 or 6 digits) plus the last 4 digits, with the digits in between replaced with * characters. Shadow mode account numbers will not be masked.
	AccountNumberMasked *string `json:"account_number_masked,omitempty"`
	// Purpose of the account
	AccountPurpose *string `json:"account_purpose,omitempty"`
	// The account template used to create this account (if any). On creation, if not specified:     * `account_type` is *required*.     * If there is a single account template of the correct type,       that account template is automatically used.     * Otherwise, the request is an error.
	AccountTemplateId *string      `json:"account_template_id,omitempty"`
	AccountType       *AccountType `json:"account_type,omitempty"`
	// The application ID for this account.
	ApplicationId *string `json:"application_id,omitempty"`
	// The number of days past the billing period to initiate an auto payment. Only applicable for accounts with type `CHARGE_SECURED`, where the account holder has opted in for auto payment functionality. This value must be lower than or equal the `grace_period` setting on the account. If this value is 0, the auto payment will happen on the same day as the statement is generated. Auto payment only occurs if regular payments are not received on time.
	AutoPaymentPeriod *int32          `json:"auto_payment_period,omitempty"`
	BalanceCeiling    *BalanceCeiling `json:"balance_ceiling,omitempty"`
	BalanceFloor      *BalanceFloor   `json:"balance_floor,omitempty"`
	// A list of balances for account based on different type
	Balances []Balance `json:"balances,omitempty"`
	// Identifier of the bank side account that this account is a part of
	BankAccountId *string `json:"bank_account_id,omitempty"`
	// Bank routing number
	BankRouting   *string        `json:"bank_routing,omitempty"`
	BillingPeriod *BillingPeriod `json:"billing_period,omitempty"`
	// A list of the business IDs of the account holders.
	BusinessIds []string `json:"business_ids,omitempty"`
	// The account close date. This is the bank's posting date when the account resource's status was changed to CLOSED or CHARGED_OFF.
	CloseDate *string `json:"close_date,omitempty"`
	// Account creation timestamp in RFC3339 format
	CreationTime *time.Time `json:"creation_time,omitempty"`
	// The credit limit for this line of credit account in cents. Minimum is 0.
	CreditLimit *int64 `json:"credit_limit,omitempty"`
	// Account currency or account settlement currency. ISO 4217 alphabetic currency code. Default USD
	Currency *string `json:"currency,omitempty" validate:"regexp=^[A-Z]{3}$"`
	// A list of the customer IDs of the account holders.
	CustomerIds  []string      `json:"customer_ids,omitempty"`
	CustomerType *CustomerType `json:"customer_type,omitempty"`
	// The number of days since the account went past due on their minimum payments.
	DaysPastDue *int32 `json:"days_past_due,omitempty"`
	// Exchange rate type
	ExchangeRateType *string `json:"exchange_rate_type,omitempty"`
	// A list of fee account products that the current account associates with.
	FeeProductIds         []string               `json:"fee_product_ids,omitempty"`
	FundsOwnership        *FundsOwnership        `json:"funds_ownership,omitempty"`
	GeneralLedgerCategory *GeneralLedgerCategory `json:"general_ledger_category,omitempty"`
	GeneralLedgerType     *GeneralLedgerType     `json:"general_ledger_type,omitempty"`
	// The number of days past the billing period to allow for payment before it is considered due. This directly infers the due date for a payment. The default will be set to 21 days.
	GracePeriod *int32 `json:"grace_period,omitempty"`
	// International bank account number
	Iban *string `json:"iban,omitempty"`
	// Account ID
	Id *string `json:"id,omitempty"`
	// An interest account product that the current account associates with.
	InterestProductId *string `json:"interest_product_id,omitempty"`
	// Account is investment (variable balance) account or a multi-balance account pool. Default false
	IsAccountPool *bool `json:"is_account_pool,omitempty"`
	// A flag to indicate whether ACH transactions are enabled.
	IsAchEnabled *bool `json:"is_ach_enabled,omitempty"`
	// A flag to indicate whether card transactions are enabled.
	IsCardEnabled *bool `json:"is_card_enabled,omitempty"`
	// A flag to indicate whether EFT Canada transactions are enabled.
	IsEftCaEnabled *bool `json:"is_eft_ca_enabled,omitempty"`
	// A flag to indicate whether external card transactions are enabled.
	IsExternalCardEnabled *bool `json:"is_external_card_enabled,omitempty"`
	// A flag to indicate whether P2P transactions are enabled.
	IsP2pEnabled *bool `json:"is_p2p_enabled,omitempty"`
	// A flag to indicate whether SAR generation is enabled.
	IsSarEnabled *bool `json:"is_sar_enabled,omitempty"`
	// A flag to indicate whether this account is being used as security for another account.
	IsSecurity *bool `json:"is_security,omitempty"`
	// A flag to indicate whether Synctera Pay transactions are enabled.
	IsSyncteraPayEnabled *bool `json:"is_synctera_pay_enabled,omitempty"`
	// A flag to indicate whether auto pay feature is enabled.
	IsSystemAutoPayEnabled *bool `json:"is_system_auto_pay_enabled,omitempty"`
	// A flag to indicate whether wire transactions are enabled.
	IsWireEnabled *bool `json:"is_wire_enabled,omitempty"`
	// Timestamp of the last account modification in RFC3339 format
	LastUpdatedTime *time.Time `json:"last_updated_time,omitempty"`
	// User provided account metadata
	Metadata       map[string]interface{} `json:"metadata,omitempty"`
	MinimumPayment *MinimumPayment        `json:"minimum_payment,omitempty"`
	// User provided account nickname
	Nickname *string `json:"nickname,omitempty"`
	// The account open date. This is the bank's posting date when the account resource was created.
	OpenDate *string `json:"open_date,omitempty"`
	// This field is unused and will be removed in a future API version.
	// Deprecated
	OverdraftLimit *int64               `json:"overdraft_limit,omitempty"`
	Restrictions   *AccountRestrictions `json:"restrictions,omitempty"`
	Security       *Security            `json:"security,omitempty"`
	// List of spend control IDs to control spending for the account
	SpendControlIds []string `json:"spend_control_ids,omitempty"`
	// Deprecated
	SpendingLimits *SpendingLimits `json:"spending_limits,omitempty"`
	Status         *AccountStatus  `json:"status,omitempty"`
	StopPayments   []StopPayment   `json:"stop_payments,omitempty"`
	// SWIFT code
	SwiftCode *string `json:"swift_code,omitempty"`
	// The id of the tenant containing the resource. This is relevant for Fintechs that have multiple workspaces.
	Tenant *string `json:"tenant,omitempty"`
}

// NewAccountGenericResponse instantiates a new AccountGenericResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountGenericResponse() *AccountGenericResponse {
	this := AccountGenericResponse{}
	return &this
}

// NewAccountGenericResponseWithDefaults instantiates a new AccountGenericResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountGenericResponseWithDefaults() *AccountGenericResponse {
	this := AccountGenericResponse{}
	return &this
}

// GetAccessStatus returns the AccessStatus field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetAccessStatus() AccountAccessStatus {
	if o == nil || IsNil(o.AccessStatus) {
		var ret AccountAccessStatus
		return ret
	}
	return *o.AccessStatus
}

// GetAccessStatusOk returns a tuple with the AccessStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetAccessStatusOk() (*AccountAccessStatus, bool) {
	if o == nil || IsNil(o.AccessStatus) {
		return nil, false
	}
	return o.AccessStatus, true
}

// HasAccessStatus returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasAccessStatus() bool {
	if o != nil && !IsNil(o.AccessStatus) {
		return true
	}

	return false
}

// SetAccessStatus gets a reference to the given AccountAccessStatus and assigns it to the AccessStatus field.
func (o *AccountGenericResponse) SetAccessStatus(v AccountAccessStatus) {
	o.AccessStatus = &v
}

// GetAccessStatusLastUpdatedTime returns the AccessStatusLastUpdatedTime field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetAccessStatusLastUpdatedTime() time.Time {
	if o == nil || IsNil(o.AccessStatusLastUpdatedTime) {
		var ret time.Time
		return ret
	}
	return *o.AccessStatusLastUpdatedTime
}

// GetAccessStatusLastUpdatedTimeOk returns a tuple with the AccessStatusLastUpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetAccessStatusLastUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AccessStatusLastUpdatedTime) {
		return nil, false
	}
	return o.AccessStatusLastUpdatedTime, true
}

// HasAccessStatusLastUpdatedTime returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasAccessStatusLastUpdatedTime() bool {
	if o != nil && !IsNil(o.AccessStatusLastUpdatedTime) {
		return true
	}

	return false
}

// SetAccessStatusLastUpdatedTime gets a reference to the given time.Time and assigns it to the AccessStatusLastUpdatedTime field.
func (o *AccountGenericResponse) SetAccessStatusLastUpdatedTime(v time.Time) {
	o.AccessStatusLastUpdatedTime = &v
}

// GetAccountClosure returns the AccountClosure field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetAccountClosure() AccountClosure {
	if o == nil || IsNil(o.AccountClosure) {
		var ret AccountClosure
		return ret
	}
	return *o.AccountClosure
}

// GetAccountClosureOk returns a tuple with the AccountClosure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetAccountClosureOk() (*AccountClosure, bool) {
	if o == nil || IsNil(o.AccountClosure) {
		return nil, false
	}
	return o.AccountClosure, true
}

// HasAccountClosure returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasAccountClosure() bool {
	if o != nil && !IsNil(o.AccountClosure) {
		return true
	}

	return false
}

// SetAccountClosure gets a reference to the given AccountClosure and assigns it to the AccountClosure field.
func (o *AccountGenericResponse) SetAccountClosure(v AccountClosure) {
	o.AccountClosure = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *AccountGenericResponse) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetAccountNumberMasked returns the AccountNumberMasked field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetAccountNumberMasked() string {
	if o == nil || IsNil(o.AccountNumberMasked) {
		var ret string
		return ret
	}
	return *o.AccountNumberMasked
}

// GetAccountNumberMaskedOk returns a tuple with the AccountNumberMasked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetAccountNumberMaskedOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumberMasked) {
		return nil, false
	}
	return o.AccountNumberMasked, true
}

// HasAccountNumberMasked returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasAccountNumberMasked() bool {
	if o != nil && !IsNil(o.AccountNumberMasked) {
		return true
	}

	return false
}

// SetAccountNumberMasked gets a reference to the given string and assigns it to the AccountNumberMasked field.
func (o *AccountGenericResponse) SetAccountNumberMasked(v string) {
	o.AccountNumberMasked = &v
}

// GetAccountPurpose returns the AccountPurpose field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetAccountPurpose() string {
	if o == nil || IsNil(o.AccountPurpose) {
		var ret string
		return ret
	}
	return *o.AccountPurpose
}

// GetAccountPurposeOk returns a tuple with the AccountPurpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetAccountPurposeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountPurpose) {
		return nil, false
	}
	return o.AccountPurpose, true
}

// HasAccountPurpose returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasAccountPurpose() bool {
	if o != nil && !IsNil(o.AccountPurpose) {
		return true
	}

	return false
}

// SetAccountPurpose gets a reference to the given string and assigns it to the AccountPurpose field.
func (o *AccountGenericResponse) SetAccountPurpose(v string) {
	o.AccountPurpose = &v
}

// GetAccountTemplateId returns the AccountTemplateId field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetAccountTemplateId() string {
	if o == nil || IsNil(o.AccountTemplateId) {
		var ret string
		return ret
	}
	return *o.AccountTemplateId
}

// GetAccountTemplateIdOk returns a tuple with the AccountTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetAccountTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountTemplateId) {
		return nil, false
	}
	return o.AccountTemplateId, true
}

// HasAccountTemplateId returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasAccountTemplateId() bool {
	if o != nil && !IsNil(o.AccountTemplateId) {
		return true
	}

	return false
}

// SetAccountTemplateId gets a reference to the given string and assigns it to the AccountTemplateId field.
func (o *AccountGenericResponse) SetAccountTemplateId(v string) {
	o.AccountTemplateId = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetAccountType() AccountType {
	if o == nil || IsNil(o.AccountType) {
		var ret AccountType
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetAccountTypeOk() (*AccountType, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given AccountType and assigns it to the AccountType field.
func (o *AccountGenericResponse) SetAccountType(v AccountType) {
	o.AccountType = &v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetApplicationId() string {
	if o == nil || IsNil(o.ApplicationId) {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetApplicationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationId) {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasApplicationId() bool {
	if o != nil && !IsNil(o.ApplicationId) {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *AccountGenericResponse) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetAutoPaymentPeriod returns the AutoPaymentPeriod field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetAutoPaymentPeriod() int32 {
	if o == nil || IsNil(o.AutoPaymentPeriod) {
		var ret int32
		return ret
	}
	return *o.AutoPaymentPeriod
}

// GetAutoPaymentPeriodOk returns a tuple with the AutoPaymentPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetAutoPaymentPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.AutoPaymentPeriod) {
		return nil, false
	}
	return o.AutoPaymentPeriod, true
}

// HasAutoPaymentPeriod returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasAutoPaymentPeriod() bool {
	if o != nil && !IsNil(o.AutoPaymentPeriod) {
		return true
	}

	return false
}

// SetAutoPaymentPeriod gets a reference to the given int32 and assigns it to the AutoPaymentPeriod field.
func (o *AccountGenericResponse) SetAutoPaymentPeriod(v int32) {
	o.AutoPaymentPeriod = &v
}

// GetBalanceCeiling returns the BalanceCeiling field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetBalanceCeiling() BalanceCeiling {
	if o == nil || IsNil(o.BalanceCeiling) {
		var ret BalanceCeiling
		return ret
	}
	return *o.BalanceCeiling
}

// GetBalanceCeilingOk returns a tuple with the BalanceCeiling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetBalanceCeilingOk() (*BalanceCeiling, bool) {
	if o == nil || IsNil(o.BalanceCeiling) {
		return nil, false
	}
	return o.BalanceCeiling, true
}

// HasBalanceCeiling returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasBalanceCeiling() bool {
	if o != nil && !IsNil(o.BalanceCeiling) {
		return true
	}

	return false
}

// SetBalanceCeiling gets a reference to the given BalanceCeiling and assigns it to the BalanceCeiling field.
func (o *AccountGenericResponse) SetBalanceCeiling(v BalanceCeiling) {
	o.BalanceCeiling = &v
}

// GetBalanceFloor returns the BalanceFloor field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetBalanceFloor() BalanceFloor {
	if o == nil || IsNil(o.BalanceFloor) {
		var ret BalanceFloor
		return ret
	}
	return *o.BalanceFloor
}

// GetBalanceFloorOk returns a tuple with the BalanceFloor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetBalanceFloorOk() (*BalanceFloor, bool) {
	if o == nil || IsNil(o.BalanceFloor) {
		return nil, false
	}
	return o.BalanceFloor, true
}

// HasBalanceFloor returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasBalanceFloor() bool {
	if o != nil && !IsNil(o.BalanceFloor) {
		return true
	}

	return false
}

// SetBalanceFloor gets a reference to the given BalanceFloor and assigns it to the BalanceFloor field.
func (o *AccountGenericResponse) SetBalanceFloor(v BalanceFloor) {
	o.BalanceFloor = &v
}

// GetBalances returns the Balances field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetBalances() []Balance {
	if o == nil || IsNil(o.Balances) {
		var ret []Balance
		return ret
	}
	return o.Balances
}

// GetBalancesOk returns a tuple with the Balances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetBalancesOk() ([]Balance, bool) {
	if o == nil || IsNil(o.Balances) {
		return nil, false
	}
	return o.Balances, true
}

// HasBalances returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasBalances() bool {
	if o != nil && !IsNil(o.Balances) {
		return true
	}

	return false
}

// SetBalances gets a reference to the given []Balance and assigns it to the Balances field.
func (o *AccountGenericResponse) SetBalances(v []Balance) {
	o.Balances = v
}

// GetBankAccountId returns the BankAccountId field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetBankAccountId() string {
	if o == nil || IsNil(o.BankAccountId) {
		var ret string
		return ret
	}
	return *o.BankAccountId
}

// GetBankAccountIdOk returns a tuple with the BankAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetBankAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.BankAccountId) {
		return nil, false
	}
	return o.BankAccountId, true
}

// HasBankAccountId returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasBankAccountId() bool {
	if o != nil && !IsNil(o.BankAccountId) {
		return true
	}

	return false
}

// SetBankAccountId gets a reference to the given string and assigns it to the BankAccountId field.
func (o *AccountGenericResponse) SetBankAccountId(v string) {
	o.BankAccountId = &v
}

// GetBankRouting returns the BankRouting field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetBankRouting() string {
	if o == nil || IsNil(o.BankRouting) {
		var ret string
		return ret
	}
	return *o.BankRouting
}

// GetBankRoutingOk returns a tuple with the BankRouting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetBankRoutingOk() (*string, bool) {
	if o == nil || IsNil(o.BankRouting) {
		return nil, false
	}
	return o.BankRouting, true
}

// HasBankRouting returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasBankRouting() bool {
	if o != nil && !IsNil(o.BankRouting) {
		return true
	}

	return false
}

// SetBankRouting gets a reference to the given string and assigns it to the BankRouting field.
func (o *AccountGenericResponse) SetBankRouting(v string) {
	o.BankRouting = &v
}

// GetBillingPeriod returns the BillingPeriod field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetBillingPeriod() BillingPeriod {
	if o == nil || IsNil(o.BillingPeriod) {
		var ret BillingPeriod
		return ret
	}
	return *o.BillingPeriod
}

// GetBillingPeriodOk returns a tuple with the BillingPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetBillingPeriodOk() (*BillingPeriod, bool) {
	if o == nil || IsNil(o.BillingPeriod) {
		return nil, false
	}
	return o.BillingPeriod, true
}

// HasBillingPeriod returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasBillingPeriod() bool {
	if o != nil && !IsNil(o.BillingPeriod) {
		return true
	}

	return false
}

// SetBillingPeriod gets a reference to the given BillingPeriod and assigns it to the BillingPeriod field.
func (o *AccountGenericResponse) SetBillingPeriod(v BillingPeriod) {
	o.BillingPeriod = &v
}

// GetBusinessIds returns the BusinessIds field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetBusinessIds() []string {
	if o == nil || IsNil(o.BusinessIds) {
		var ret []string
		return ret
	}
	return o.BusinessIds
}

// GetBusinessIdsOk returns a tuple with the BusinessIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetBusinessIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.BusinessIds) {
		return nil, false
	}
	return o.BusinessIds, true
}

// HasBusinessIds returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasBusinessIds() bool {
	if o != nil && !IsNil(o.BusinessIds) {
		return true
	}

	return false
}

// SetBusinessIds gets a reference to the given []string and assigns it to the BusinessIds field.
func (o *AccountGenericResponse) SetBusinessIds(v []string) {
	o.BusinessIds = v
}

// GetCloseDate returns the CloseDate field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetCloseDate() string {
	if o == nil || IsNil(o.CloseDate) {
		var ret string
		return ret
	}
	return *o.CloseDate
}

// GetCloseDateOk returns a tuple with the CloseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetCloseDateOk() (*string, bool) {
	if o == nil || IsNil(o.CloseDate) {
		return nil, false
	}
	return o.CloseDate, true
}

// HasCloseDate returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasCloseDate() bool {
	if o != nil && !IsNil(o.CloseDate) {
		return true
	}

	return false
}

// SetCloseDate gets a reference to the given string and assigns it to the CloseDate field.
func (o *AccountGenericResponse) SetCloseDate(v string) {
	o.CloseDate = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetCreationTime() time.Time {
	if o == nil || IsNil(o.CreationTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *AccountGenericResponse) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetCreditLimit() int64 {
	if o == nil || IsNil(o.CreditLimit) {
		var ret int64
		return ret
	}
	return *o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetCreditLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.CreditLimit) {
		return nil, false
	}
	return o.CreditLimit, true
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasCreditLimit() bool {
	if o != nil && !IsNil(o.CreditLimit) {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given int64 and assigns it to the CreditLimit field.
func (o *AccountGenericResponse) SetCreditLimit(v int64) {
	o.CreditLimit = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *AccountGenericResponse) SetCurrency(v string) {
	o.Currency = &v
}

// GetCustomerIds returns the CustomerIds field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetCustomerIds() []string {
	if o == nil || IsNil(o.CustomerIds) {
		var ret []string
		return ret
	}
	return o.CustomerIds
}

// GetCustomerIdsOk returns a tuple with the CustomerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetCustomerIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CustomerIds) {
		return nil, false
	}
	return o.CustomerIds, true
}

// HasCustomerIds returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasCustomerIds() bool {
	if o != nil && !IsNil(o.CustomerIds) {
		return true
	}

	return false
}

// SetCustomerIds gets a reference to the given []string and assigns it to the CustomerIds field.
func (o *AccountGenericResponse) SetCustomerIds(v []string) {
	o.CustomerIds = v
}

// GetCustomerType returns the CustomerType field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetCustomerType() CustomerType {
	if o == nil || IsNil(o.CustomerType) {
		var ret CustomerType
		return ret
	}
	return *o.CustomerType
}

// GetCustomerTypeOk returns a tuple with the CustomerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetCustomerTypeOk() (*CustomerType, bool) {
	if o == nil || IsNil(o.CustomerType) {
		return nil, false
	}
	return o.CustomerType, true
}

// HasCustomerType returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasCustomerType() bool {
	if o != nil && !IsNil(o.CustomerType) {
		return true
	}

	return false
}

// SetCustomerType gets a reference to the given CustomerType and assigns it to the CustomerType field.
func (o *AccountGenericResponse) SetCustomerType(v CustomerType) {
	o.CustomerType = &v
}

// GetDaysPastDue returns the DaysPastDue field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetDaysPastDue() int32 {
	if o == nil || IsNil(o.DaysPastDue) {
		var ret int32
		return ret
	}
	return *o.DaysPastDue
}

// GetDaysPastDueOk returns a tuple with the DaysPastDue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetDaysPastDueOk() (*int32, bool) {
	if o == nil || IsNil(o.DaysPastDue) {
		return nil, false
	}
	return o.DaysPastDue, true
}

// HasDaysPastDue returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasDaysPastDue() bool {
	if o != nil && !IsNil(o.DaysPastDue) {
		return true
	}

	return false
}

// SetDaysPastDue gets a reference to the given int32 and assigns it to the DaysPastDue field.
func (o *AccountGenericResponse) SetDaysPastDue(v int32) {
	o.DaysPastDue = &v
}

// GetExchangeRateType returns the ExchangeRateType field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetExchangeRateType() string {
	if o == nil || IsNil(o.ExchangeRateType) {
		var ret string
		return ret
	}
	return *o.ExchangeRateType
}

// GetExchangeRateTypeOk returns a tuple with the ExchangeRateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetExchangeRateTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeRateType) {
		return nil, false
	}
	return o.ExchangeRateType, true
}

// HasExchangeRateType returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasExchangeRateType() bool {
	if o != nil && !IsNil(o.ExchangeRateType) {
		return true
	}

	return false
}

// SetExchangeRateType gets a reference to the given string and assigns it to the ExchangeRateType field.
func (o *AccountGenericResponse) SetExchangeRateType(v string) {
	o.ExchangeRateType = &v
}

// GetFeeProductIds returns the FeeProductIds field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetFeeProductIds() []string {
	if o == nil || IsNil(o.FeeProductIds) {
		var ret []string
		return ret
	}
	return o.FeeProductIds
}

// GetFeeProductIdsOk returns a tuple with the FeeProductIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetFeeProductIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.FeeProductIds) {
		return nil, false
	}
	return o.FeeProductIds, true
}

// HasFeeProductIds returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasFeeProductIds() bool {
	if o != nil && !IsNil(o.FeeProductIds) {
		return true
	}

	return false
}

// SetFeeProductIds gets a reference to the given []string and assigns it to the FeeProductIds field.
func (o *AccountGenericResponse) SetFeeProductIds(v []string) {
	o.FeeProductIds = v
}

// GetFundsOwnership returns the FundsOwnership field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetFundsOwnership() FundsOwnership {
	if o == nil || IsNil(o.FundsOwnership) {
		var ret FundsOwnership
		return ret
	}
	return *o.FundsOwnership
}

// GetFundsOwnershipOk returns a tuple with the FundsOwnership field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetFundsOwnershipOk() (*FundsOwnership, bool) {
	if o == nil || IsNil(o.FundsOwnership) {
		return nil, false
	}
	return o.FundsOwnership, true
}

// HasFundsOwnership returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasFundsOwnership() bool {
	if o != nil && !IsNil(o.FundsOwnership) {
		return true
	}

	return false
}

// SetFundsOwnership gets a reference to the given FundsOwnership and assigns it to the FundsOwnership field.
func (o *AccountGenericResponse) SetFundsOwnership(v FundsOwnership) {
	o.FundsOwnership = &v
}

// GetGeneralLedgerCategory returns the GeneralLedgerCategory field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetGeneralLedgerCategory() GeneralLedgerCategory {
	if o == nil || IsNil(o.GeneralLedgerCategory) {
		var ret GeneralLedgerCategory
		return ret
	}
	return *o.GeneralLedgerCategory
}

// GetGeneralLedgerCategoryOk returns a tuple with the GeneralLedgerCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetGeneralLedgerCategoryOk() (*GeneralLedgerCategory, bool) {
	if o == nil || IsNil(o.GeneralLedgerCategory) {
		return nil, false
	}
	return o.GeneralLedgerCategory, true
}

// HasGeneralLedgerCategory returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasGeneralLedgerCategory() bool {
	if o != nil && !IsNil(o.GeneralLedgerCategory) {
		return true
	}

	return false
}

// SetGeneralLedgerCategory gets a reference to the given GeneralLedgerCategory and assigns it to the GeneralLedgerCategory field.
func (o *AccountGenericResponse) SetGeneralLedgerCategory(v GeneralLedgerCategory) {
	o.GeneralLedgerCategory = &v
}

// GetGeneralLedgerType returns the GeneralLedgerType field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetGeneralLedgerType() GeneralLedgerType {
	if o == nil || IsNil(o.GeneralLedgerType) {
		var ret GeneralLedgerType
		return ret
	}
	return *o.GeneralLedgerType
}

// GetGeneralLedgerTypeOk returns a tuple with the GeneralLedgerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetGeneralLedgerTypeOk() (*GeneralLedgerType, bool) {
	if o == nil || IsNil(o.GeneralLedgerType) {
		return nil, false
	}
	return o.GeneralLedgerType, true
}

// HasGeneralLedgerType returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasGeneralLedgerType() bool {
	if o != nil && !IsNil(o.GeneralLedgerType) {
		return true
	}

	return false
}

// SetGeneralLedgerType gets a reference to the given GeneralLedgerType and assigns it to the GeneralLedgerType field.
func (o *AccountGenericResponse) SetGeneralLedgerType(v GeneralLedgerType) {
	o.GeneralLedgerType = &v
}

// GetGracePeriod returns the GracePeriod field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetGracePeriod() int32 {
	if o == nil || IsNil(o.GracePeriod) {
		var ret int32
		return ret
	}
	return *o.GracePeriod
}

// GetGracePeriodOk returns a tuple with the GracePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetGracePeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.GracePeriod) {
		return nil, false
	}
	return o.GracePeriod, true
}

// HasGracePeriod returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasGracePeriod() bool {
	if o != nil && !IsNil(o.GracePeriod) {
		return true
	}

	return false
}

// SetGracePeriod gets a reference to the given int32 and assigns it to the GracePeriod field.
func (o *AccountGenericResponse) SetGracePeriod(v int32) {
	o.GracePeriod = &v
}

// GetIban returns the Iban field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetIban() string {
	if o == nil || IsNil(o.Iban) {
		var ret string
		return ret
	}
	return *o.Iban
}

// GetIbanOk returns a tuple with the Iban field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetIbanOk() (*string, bool) {
	if o == nil || IsNil(o.Iban) {
		return nil, false
	}
	return o.Iban, true
}

// HasIban returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasIban() bool {
	if o != nil && !IsNil(o.Iban) {
		return true
	}

	return false
}

// SetIban gets a reference to the given string and assigns it to the Iban field.
func (o *AccountGenericResponse) SetIban(v string) {
	o.Iban = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AccountGenericResponse) SetId(v string) {
	o.Id = &v
}

// GetInterestProductId returns the InterestProductId field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetInterestProductId() string {
	if o == nil || IsNil(o.InterestProductId) {
		var ret string
		return ret
	}
	return *o.InterestProductId
}

// GetInterestProductIdOk returns a tuple with the InterestProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetInterestProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.InterestProductId) {
		return nil, false
	}
	return o.InterestProductId, true
}

// HasInterestProductId returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasInterestProductId() bool {
	if o != nil && !IsNil(o.InterestProductId) {
		return true
	}

	return false
}

// SetInterestProductId gets a reference to the given string and assigns it to the InterestProductId field.
func (o *AccountGenericResponse) SetInterestProductId(v string) {
	o.InterestProductId = &v
}

// GetIsAccountPool returns the IsAccountPool field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetIsAccountPool() bool {
	if o == nil || IsNil(o.IsAccountPool) {
		var ret bool
		return ret
	}
	return *o.IsAccountPool
}

// GetIsAccountPoolOk returns a tuple with the IsAccountPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetIsAccountPoolOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAccountPool) {
		return nil, false
	}
	return o.IsAccountPool, true
}

// HasIsAccountPool returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasIsAccountPool() bool {
	if o != nil && !IsNil(o.IsAccountPool) {
		return true
	}

	return false
}

// SetIsAccountPool gets a reference to the given bool and assigns it to the IsAccountPool field.
func (o *AccountGenericResponse) SetIsAccountPool(v bool) {
	o.IsAccountPool = &v
}

// GetIsAchEnabled returns the IsAchEnabled field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetIsAchEnabled() bool {
	if o == nil || IsNil(o.IsAchEnabled) {
		var ret bool
		return ret
	}
	return *o.IsAchEnabled
}

// GetIsAchEnabledOk returns a tuple with the IsAchEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetIsAchEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAchEnabled) {
		return nil, false
	}
	return o.IsAchEnabled, true
}

// HasIsAchEnabled returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasIsAchEnabled() bool {
	if o != nil && !IsNil(o.IsAchEnabled) {
		return true
	}

	return false
}

// SetIsAchEnabled gets a reference to the given bool and assigns it to the IsAchEnabled field.
func (o *AccountGenericResponse) SetIsAchEnabled(v bool) {
	o.IsAchEnabled = &v
}

// GetIsCardEnabled returns the IsCardEnabled field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetIsCardEnabled() bool {
	if o == nil || IsNil(o.IsCardEnabled) {
		var ret bool
		return ret
	}
	return *o.IsCardEnabled
}

// GetIsCardEnabledOk returns a tuple with the IsCardEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetIsCardEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCardEnabled) {
		return nil, false
	}
	return o.IsCardEnabled, true
}

// HasIsCardEnabled returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasIsCardEnabled() bool {
	if o != nil && !IsNil(o.IsCardEnabled) {
		return true
	}

	return false
}

// SetIsCardEnabled gets a reference to the given bool and assigns it to the IsCardEnabled field.
func (o *AccountGenericResponse) SetIsCardEnabled(v bool) {
	o.IsCardEnabled = &v
}

// GetIsEftCaEnabled returns the IsEftCaEnabled field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetIsEftCaEnabled() bool {
	if o == nil || IsNil(o.IsEftCaEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEftCaEnabled
}

// GetIsEftCaEnabledOk returns a tuple with the IsEftCaEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetIsEftCaEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEftCaEnabled) {
		return nil, false
	}
	return o.IsEftCaEnabled, true
}

// HasIsEftCaEnabled returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasIsEftCaEnabled() bool {
	if o != nil && !IsNil(o.IsEftCaEnabled) {
		return true
	}

	return false
}

// SetIsEftCaEnabled gets a reference to the given bool and assigns it to the IsEftCaEnabled field.
func (o *AccountGenericResponse) SetIsEftCaEnabled(v bool) {
	o.IsEftCaEnabled = &v
}

// GetIsExternalCardEnabled returns the IsExternalCardEnabled field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetIsExternalCardEnabled() bool {
	if o == nil || IsNil(o.IsExternalCardEnabled) {
		var ret bool
		return ret
	}
	return *o.IsExternalCardEnabled
}

// GetIsExternalCardEnabledOk returns a tuple with the IsExternalCardEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetIsExternalCardEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExternalCardEnabled) {
		return nil, false
	}
	return o.IsExternalCardEnabled, true
}

// HasIsExternalCardEnabled returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasIsExternalCardEnabled() bool {
	if o != nil && !IsNil(o.IsExternalCardEnabled) {
		return true
	}

	return false
}

// SetIsExternalCardEnabled gets a reference to the given bool and assigns it to the IsExternalCardEnabled field.
func (o *AccountGenericResponse) SetIsExternalCardEnabled(v bool) {
	o.IsExternalCardEnabled = &v
}

// GetIsP2pEnabled returns the IsP2pEnabled field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetIsP2pEnabled() bool {
	if o == nil || IsNil(o.IsP2pEnabled) {
		var ret bool
		return ret
	}
	return *o.IsP2pEnabled
}

// GetIsP2pEnabledOk returns a tuple with the IsP2pEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetIsP2pEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsP2pEnabled) {
		return nil, false
	}
	return o.IsP2pEnabled, true
}

// HasIsP2pEnabled returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasIsP2pEnabled() bool {
	if o != nil && !IsNil(o.IsP2pEnabled) {
		return true
	}

	return false
}

// SetIsP2pEnabled gets a reference to the given bool and assigns it to the IsP2pEnabled field.
func (o *AccountGenericResponse) SetIsP2pEnabled(v bool) {
	o.IsP2pEnabled = &v
}

// GetIsSarEnabled returns the IsSarEnabled field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetIsSarEnabled() bool {
	if o == nil || IsNil(o.IsSarEnabled) {
		var ret bool
		return ret
	}
	return *o.IsSarEnabled
}

// GetIsSarEnabledOk returns a tuple with the IsSarEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetIsSarEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSarEnabled) {
		return nil, false
	}
	return o.IsSarEnabled, true
}

// HasIsSarEnabled returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasIsSarEnabled() bool {
	if o != nil && !IsNil(o.IsSarEnabled) {
		return true
	}

	return false
}

// SetIsSarEnabled gets a reference to the given bool and assigns it to the IsSarEnabled field.
func (o *AccountGenericResponse) SetIsSarEnabled(v bool) {
	o.IsSarEnabled = &v
}

// GetIsSecurity returns the IsSecurity field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetIsSecurity() bool {
	if o == nil || IsNil(o.IsSecurity) {
		var ret bool
		return ret
	}
	return *o.IsSecurity
}

// GetIsSecurityOk returns a tuple with the IsSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetIsSecurityOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSecurity) {
		return nil, false
	}
	return o.IsSecurity, true
}

// HasIsSecurity returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasIsSecurity() bool {
	if o != nil && !IsNil(o.IsSecurity) {
		return true
	}

	return false
}

// SetIsSecurity gets a reference to the given bool and assigns it to the IsSecurity field.
func (o *AccountGenericResponse) SetIsSecurity(v bool) {
	o.IsSecurity = &v
}

// GetIsSyncteraPayEnabled returns the IsSyncteraPayEnabled field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetIsSyncteraPayEnabled() bool {
	if o == nil || IsNil(o.IsSyncteraPayEnabled) {
		var ret bool
		return ret
	}
	return *o.IsSyncteraPayEnabled
}

// GetIsSyncteraPayEnabledOk returns a tuple with the IsSyncteraPayEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetIsSyncteraPayEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSyncteraPayEnabled) {
		return nil, false
	}
	return o.IsSyncteraPayEnabled, true
}

// HasIsSyncteraPayEnabled returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasIsSyncteraPayEnabled() bool {
	if o != nil && !IsNil(o.IsSyncteraPayEnabled) {
		return true
	}

	return false
}

// SetIsSyncteraPayEnabled gets a reference to the given bool and assigns it to the IsSyncteraPayEnabled field.
func (o *AccountGenericResponse) SetIsSyncteraPayEnabled(v bool) {
	o.IsSyncteraPayEnabled = &v
}

// GetIsSystemAutoPayEnabled returns the IsSystemAutoPayEnabled field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetIsSystemAutoPayEnabled() bool {
	if o == nil || IsNil(o.IsSystemAutoPayEnabled) {
		var ret bool
		return ret
	}
	return *o.IsSystemAutoPayEnabled
}

// GetIsSystemAutoPayEnabledOk returns a tuple with the IsSystemAutoPayEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetIsSystemAutoPayEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSystemAutoPayEnabled) {
		return nil, false
	}
	return o.IsSystemAutoPayEnabled, true
}

// HasIsSystemAutoPayEnabled returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasIsSystemAutoPayEnabled() bool {
	if o != nil && !IsNil(o.IsSystemAutoPayEnabled) {
		return true
	}

	return false
}

// SetIsSystemAutoPayEnabled gets a reference to the given bool and assigns it to the IsSystemAutoPayEnabled field.
func (o *AccountGenericResponse) SetIsSystemAutoPayEnabled(v bool) {
	o.IsSystemAutoPayEnabled = &v
}

// GetIsWireEnabled returns the IsWireEnabled field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetIsWireEnabled() bool {
	if o == nil || IsNil(o.IsWireEnabled) {
		var ret bool
		return ret
	}
	return *o.IsWireEnabled
}

// GetIsWireEnabledOk returns a tuple with the IsWireEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetIsWireEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWireEnabled) {
		return nil, false
	}
	return o.IsWireEnabled, true
}

// HasIsWireEnabled returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasIsWireEnabled() bool {
	if o != nil && !IsNil(o.IsWireEnabled) {
		return true
	}

	return false
}

// SetIsWireEnabled gets a reference to the given bool and assigns it to the IsWireEnabled field.
func (o *AccountGenericResponse) SetIsWireEnabled(v bool) {
	o.IsWireEnabled = &v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetLastUpdatedTime() time.Time {
	if o == nil || IsNil(o.LastUpdatedTime) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetLastUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdatedTime) {
		return nil, false
	}
	return o.LastUpdatedTime, true
}

// HasLastUpdatedTime returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasLastUpdatedTime() bool {
	if o != nil && !IsNil(o.LastUpdatedTime) {
		return true
	}

	return false
}

// SetLastUpdatedTime gets a reference to the given time.Time and assigns it to the LastUpdatedTime field.
func (o *AccountGenericResponse) SetLastUpdatedTime(v time.Time) {
	o.LastUpdatedTime = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *AccountGenericResponse) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetMinimumPayment returns the MinimumPayment field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetMinimumPayment() MinimumPayment {
	if o == nil || IsNil(o.MinimumPayment) {
		var ret MinimumPayment
		return ret
	}
	return *o.MinimumPayment
}

// GetMinimumPaymentOk returns a tuple with the MinimumPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetMinimumPaymentOk() (*MinimumPayment, bool) {
	if o == nil || IsNil(o.MinimumPayment) {
		return nil, false
	}
	return o.MinimumPayment, true
}

// HasMinimumPayment returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasMinimumPayment() bool {
	if o != nil && !IsNil(o.MinimumPayment) {
		return true
	}

	return false
}

// SetMinimumPayment gets a reference to the given MinimumPayment and assigns it to the MinimumPayment field.
func (o *AccountGenericResponse) SetMinimumPayment(v MinimumPayment) {
	o.MinimumPayment = &v
}

// GetNickname returns the Nickname field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetNickname() string {
	if o == nil || IsNil(o.Nickname) {
		var ret string
		return ret
	}
	return *o.Nickname
}

// GetNicknameOk returns a tuple with the Nickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetNicknameOk() (*string, bool) {
	if o == nil || IsNil(o.Nickname) {
		return nil, false
	}
	return o.Nickname, true
}

// HasNickname returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasNickname() bool {
	if o != nil && !IsNil(o.Nickname) {
		return true
	}

	return false
}

// SetNickname gets a reference to the given string and assigns it to the Nickname field.
func (o *AccountGenericResponse) SetNickname(v string) {
	o.Nickname = &v
}

// GetOpenDate returns the OpenDate field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetOpenDate() string {
	if o == nil || IsNil(o.OpenDate) {
		var ret string
		return ret
	}
	return *o.OpenDate
}

// GetOpenDateOk returns a tuple with the OpenDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetOpenDateOk() (*string, bool) {
	if o == nil || IsNil(o.OpenDate) {
		return nil, false
	}
	return o.OpenDate, true
}

// HasOpenDate returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasOpenDate() bool {
	if o != nil && !IsNil(o.OpenDate) {
		return true
	}

	return false
}

// SetOpenDate gets a reference to the given string and assigns it to the OpenDate field.
func (o *AccountGenericResponse) SetOpenDate(v string) {
	o.OpenDate = &v
}

// GetOverdraftLimit returns the OverdraftLimit field value if set, zero value otherwise.
// Deprecated
func (o *AccountGenericResponse) GetOverdraftLimit() int64 {
	if o == nil || IsNil(o.OverdraftLimit) {
		var ret int64
		return ret
	}
	return *o.OverdraftLimit
}

// GetOverdraftLimitOk returns a tuple with the OverdraftLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AccountGenericResponse) GetOverdraftLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.OverdraftLimit) {
		return nil, false
	}
	return o.OverdraftLimit, true
}

// HasOverdraftLimit returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasOverdraftLimit() bool {
	if o != nil && !IsNil(o.OverdraftLimit) {
		return true
	}

	return false
}

// SetOverdraftLimit gets a reference to the given int64 and assigns it to the OverdraftLimit field.
// Deprecated
func (o *AccountGenericResponse) SetOverdraftLimit(v int64) {
	o.OverdraftLimit = &v
}

// GetRestrictions returns the Restrictions field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetRestrictions() AccountRestrictions {
	if o == nil || IsNil(o.Restrictions) {
		var ret AccountRestrictions
		return ret
	}
	return *o.Restrictions
}

// GetRestrictionsOk returns a tuple with the Restrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetRestrictionsOk() (*AccountRestrictions, bool) {
	if o == nil || IsNil(o.Restrictions) {
		return nil, false
	}
	return o.Restrictions, true
}

// HasRestrictions returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasRestrictions() bool {
	if o != nil && !IsNil(o.Restrictions) {
		return true
	}

	return false
}

// SetRestrictions gets a reference to the given AccountRestrictions and assigns it to the Restrictions field.
func (o *AccountGenericResponse) SetRestrictions(v AccountRestrictions) {
	o.Restrictions = &v
}

// GetSecurity returns the Security field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetSecurity() Security {
	if o == nil || IsNil(o.Security) {
		var ret Security
		return ret
	}
	return *o.Security
}

// GetSecurityOk returns a tuple with the Security field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetSecurityOk() (*Security, bool) {
	if o == nil || IsNil(o.Security) {
		return nil, false
	}
	return o.Security, true
}

// HasSecurity returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasSecurity() bool {
	if o != nil && !IsNil(o.Security) {
		return true
	}

	return false
}

// SetSecurity gets a reference to the given Security and assigns it to the Security field.
func (o *AccountGenericResponse) SetSecurity(v Security) {
	o.Security = &v
}

// GetSpendControlIds returns the SpendControlIds field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetSpendControlIds() []string {
	if o == nil || IsNil(o.SpendControlIds) {
		var ret []string
		return ret
	}
	return o.SpendControlIds
}

// GetSpendControlIdsOk returns a tuple with the SpendControlIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetSpendControlIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SpendControlIds) {
		return nil, false
	}
	return o.SpendControlIds, true
}

// HasSpendControlIds returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasSpendControlIds() bool {
	if o != nil && !IsNil(o.SpendControlIds) {
		return true
	}

	return false
}

// SetSpendControlIds gets a reference to the given []string and assigns it to the SpendControlIds field.
func (o *AccountGenericResponse) SetSpendControlIds(v []string) {
	o.SpendControlIds = v
}

// GetSpendingLimits returns the SpendingLimits field value if set, zero value otherwise.
// Deprecated
func (o *AccountGenericResponse) GetSpendingLimits() SpendingLimits {
	if o == nil || IsNil(o.SpendingLimits) {
		var ret SpendingLimits
		return ret
	}
	return *o.SpendingLimits
}

// GetSpendingLimitsOk returns a tuple with the SpendingLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AccountGenericResponse) GetSpendingLimitsOk() (*SpendingLimits, bool) {
	if o == nil || IsNil(o.SpendingLimits) {
		return nil, false
	}
	return o.SpendingLimits, true
}

// HasSpendingLimits returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasSpendingLimits() bool {
	if o != nil && !IsNil(o.SpendingLimits) {
		return true
	}

	return false
}

// SetSpendingLimits gets a reference to the given SpendingLimits and assigns it to the SpendingLimits field.
// Deprecated
func (o *AccountGenericResponse) SetSpendingLimits(v SpendingLimits) {
	o.SpendingLimits = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetStatus() AccountStatus {
	if o == nil || IsNil(o.Status) {
		var ret AccountStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetStatusOk() (*AccountStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AccountStatus and assigns it to the Status field.
func (o *AccountGenericResponse) SetStatus(v AccountStatus) {
	o.Status = &v
}

// GetStopPayments returns the StopPayments field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetStopPayments() []StopPayment {
	if o == nil || IsNil(o.StopPayments) {
		var ret []StopPayment
		return ret
	}
	return o.StopPayments
}

// GetStopPaymentsOk returns a tuple with the StopPayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetStopPaymentsOk() ([]StopPayment, bool) {
	if o == nil || IsNil(o.StopPayments) {
		return nil, false
	}
	return o.StopPayments, true
}

// HasStopPayments returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasStopPayments() bool {
	if o != nil && !IsNil(o.StopPayments) {
		return true
	}

	return false
}

// SetStopPayments gets a reference to the given []StopPayment and assigns it to the StopPayments field.
func (o *AccountGenericResponse) SetStopPayments(v []StopPayment) {
	o.StopPayments = v
}

// GetSwiftCode returns the SwiftCode field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetSwiftCode() string {
	if o == nil || IsNil(o.SwiftCode) {
		var ret string
		return ret
	}
	return *o.SwiftCode
}

// GetSwiftCodeOk returns a tuple with the SwiftCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetSwiftCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SwiftCode) {
		return nil, false
	}
	return o.SwiftCode, true
}

// HasSwiftCode returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasSwiftCode() bool {
	if o != nil && !IsNil(o.SwiftCode) {
		return true
	}

	return false
}

// SetSwiftCode gets a reference to the given string and assigns it to the SwiftCode field.
func (o *AccountGenericResponse) SetSwiftCode(v string) {
	o.SwiftCode = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *AccountGenericResponse) GetTenant() string {
	if o == nil || IsNil(o.Tenant) {
		var ret string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountGenericResponse) GetTenantOk() (*string, bool) {
	if o == nil || IsNil(o.Tenant) {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *AccountGenericResponse) HasTenant() bool {
	if o != nil && !IsNil(o.Tenant) {
		return true
	}

	return false
}

// SetTenant gets a reference to the given string and assigns it to the Tenant field.
func (o *AccountGenericResponse) SetTenant(v string) {
	o.Tenant = &v
}

func (o AccountGenericResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountGenericResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessStatus) {
		toSerialize["access_status"] = o.AccessStatus
	}
	if !IsNil(o.AccessStatusLastUpdatedTime) {
		toSerialize["access_status_last_updated_time"] = o.AccessStatusLastUpdatedTime
	}
	if !IsNil(o.AccountClosure) {
		toSerialize["account_closure"] = o.AccountClosure
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["account_number"] = o.AccountNumber
	}
	if !IsNil(o.AccountNumberMasked) {
		toSerialize["account_number_masked"] = o.AccountNumberMasked
	}
	if !IsNil(o.AccountPurpose) {
		toSerialize["account_purpose"] = o.AccountPurpose
	}
	if !IsNil(o.AccountTemplateId) {
		toSerialize["account_template_id"] = o.AccountTemplateId
	}
	if !IsNil(o.AccountType) {
		toSerialize["account_type"] = o.AccountType
	}
	if !IsNil(o.ApplicationId) {
		toSerialize["application_id"] = o.ApplicationId
	}
	if !IsNil(o.AutoPaymentPeriod) {
		toSerialize["auto_payment_period"] = o.AutoPaymentPeriod
	}
	if !IsNil(o.BalanceCeiling) {
		toSerialize["balance_ceiling"] = o.BalanceCeiling
	}
	if !IsNil(o.BalanceFloor) {
		toSerialize["balance_floor"] = o.BalanceFloor
	}
	if !IsNil(o.Balances) {
		toSerialize["balances"] = o.Balances
	}
	if !IsNil(o.BankAccountId) {
		toSerialize["bank_account_id"] = o.BankAccountId
	}
	if !IsNil(o.BankRouting) {
		toSerialize["bank_routing"] = o.BankRouting
	}
	if !IsNil(o.BillingPeriod) {
		toSerialize["billing_period"] = o.BillingPeriod
	}
	if !IsNil(o.BusinessIds) {
		toSerialize["business_ids"] = o.BusinessIds
	}
	if !IsNil(o.CloseDate) {
		toSerialize["close_date"] = o.CloseDate
	}
	if !IsNil(o.CreationTime) {
		toSerialize["creation_time"] = o.CreationTime
	}
	if !IsNil(o.CreditLimit) {
		toSerialize["credit_limit"] = o.CreditLimit
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.CustomerIds) {
		toSerialize["customer_ids"] = o.CustomerIds
	}
	if !IsNil(o.CustomerType) {
		toSerialize["customer_type"] = o.CustomerType
	}
	if !IsNil(o.DaysPastDue) {
		toSerialize["days_past_due"] = o.DaysPastDue
	}
	if !IsNil(o.ExchangeRateType) {
		toSerialize["exchange_rate_type"] = o.ExchangeRateType
	}
	if !IsNil(o.FeeProductIds) {
		toSerialize["fee_product_ids"] = o.FeeProductIds
	}
	if !IsNil(o.FundsOwnership) {
		toSerialize["funds_ownership"] = o.FundsOwnership
	}
	if !IsNil(o.GeneralLedgerCategory) {
		toSerialize["general_ledger_category"] = o.GeneralLedgerCategory
	}
	if !IsNil(o.GeneralLedgerType) {
		toSerialize["general_ledger_type"] = o.GeneralLedgerType
	}
	if !IsNil(o.GracePeriod) {
		toSerialize["grace_period"] = o.GracePeriod
	}
	if !IsNil(o.Iban) {
		toSerialize["iban"] = o.Iban
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InterestProductId) {
		toSerialize["interest_product_id"] = o.InterestProductId
	}
	if !IsNil(o.IsAccountPool) {
		toSerialize["is_account_pool"] = o.IsAccountPool
	}
	if !IsNil(o.IsAchEnabled) {
		toSerialize["is_ach_enabled"] = o.IsAchEnabled
	}
	if !IsNil(o.IsCardEnabled) {
		toSerialize["is_card_enabled"] = o.IsCardEnabled
	}
	if !IsNil(o.IsEftCaEnabled) {
		toSerialize["is_eft_ca_enabled"] = o.IsEftCaEnabled
	}
	if !IsNil(o.IsExternalCardEnabled) {
		toSerialize["is_external_card_enabled"] = o.IsExternalCardEnabled
	}
	if !IsNil(o.IsP2pEnabled) {
		toSerialize["is_p2p_enabled"] = o.IsP2pEnabled
	}
	if !IsNil(o.IsSarEnabled) {
		toSerialize["is_sar_enabled"] = o.IsSarEnabled
	}
	if !IsNil(o.IsSecurity) {
		toSerialize["is_security"] = o.IsSecurity
	}
	if !IsNil(o.IsSyncteraPayEnabled) {
		toSerialize["is_synctera_pay_enabled"] = o.IsSyncteraPayEnabled
	}
	if !IsNil(o.IsSystemAutoPayEnabled) {
		toSerialize["is_system_auto_pay_enabled"] = o.IsSystemAutoPayEnabled
	}
	if !IsNil(o.IsWireEnabled) {
		toSerialize["is_wire_enabled"] = o.IsWireEnabled
	}
	if !IsNil(o.LastUpdatedTime) {
		toSerialize["last_updated_time"] = o.LastUpdatedTime
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.MinimumPayment) {
		toSerialize["minimum_payment"] = o.MinimumPayment
	}
	if !IsNil(o.Nickname) {
		toSerialize["nickname"] = o.Nickname
	}
	if !IsNil(o.OpenDate) {
		toSerialize["open_date"] = o.OpenDate
	}
	if !IsNil(o.OverdraftLimit) {
		toSerialize["overdraft_limit"] = o.OverdraftLimit
	}
	if !IsNil(o.Restrictions) {
		toSerialize["restrictions"] = o.Restrictions
	}
	if !IsNil(o.Security) {
		toSerialize["security"] = o.Security
	}
	if !IsNil(o.SpendControlIds) {
		toSerialize["spend_control_ids"] = o.SpendControlIds
	}
	if !IsNil(o.SpendingLimits) {
		toSerialize["spending_limits"] = o.SpendingLimits
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StopPayments) {
		toSerialize["stop_payments"] = o.StopPayments
	}
	if !IsNil(o.SwiftCode) {
		toSerialize["swift_code"] = o.SwiftCode
	}
	if !IsNil(o.Tenant) {
		toSerialize["tenant"] = o.Tenant
	}
	return toSerialize, nil
}

type NullableAccountGenericResponse struct {
	value *AccountGenericResponse
	isSet bool
}

func (v NullableAccountGenericResponse) Get() *AccountGenericResponse {
	return v.value
}

func (v *NullableAccountGenericResponse) Set(val *AccountGenericResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountGenericResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountGenericResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountGenericResponse(val *AccountGenericResponse) *NullableAccountGenericResponse {
	return &NullableAccountGenericResponse{value: val, isSet: true}
}

func (v NullableAccountGenericResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountGenericResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
