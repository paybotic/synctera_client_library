/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.150.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ResponsePersonalIdWCust type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsePersonalIdWCust{}

// ResponsePersonalIdWCust struct for ResponsePersonalIdWCust
type ResponsePersonalIdWCust struct {
	// Id of the customer having this personal identifier
	CustomerId string `json:"customer_id"`
	// The ISO 3166 Alpha-2 country code for the country that issued the personal identifier.
	CountryCode string `json:"country_code"`
	// UUID for the personal identifier for subsequent changes and deletion
	Id     string         `json:"id"`
	IdType PersonalIdType `json:"id_type"`
	// The personal identifier. Format varies by personal identifier type.
	Identifier string `json:"identifier"`
	// True if the identifier was provided by the system, e.g. via SSN Prefill.
	SystemProvided bool `json:"system_provided"`
	// The id of the tenant containing the resource. This is relevant for Fintechs that have multiple workspaces.
	Tenant string `json:"tenant"`
}

type _ResponsePersonalIdWCust ResponsePersonalIdWCust

// NewResponsePersonalIdWCust instantiates a new ResponsePersonalIdWCust object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsePersonalIdWCust(customerId string, countryCode string, id string, idType PersonalIdType, identifier string, systemProvided bool, tenant string) *ResponsePersonalIdWCust {
	this := ResponsePersonalIdWCust{}
	this.CustomerId = customerId
	this.CountryCode = countryCode
	this.Id = id
	this.IdType = idType
	this.Identifier = identifier
	this.SystemProvided = systemProvided
	this.Tenant = tenant
	return &this
}

// NewResponsePersonalIdWCustWithDefaults instantiates a new ResponsePersonalIdWCust object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsePersonalIdWCustWithDefaults() *ResponsePersonalIdWCust {
	this := ResponsePersonalIdWCust{}
	return &this
}

// GetCustomerId returns the CustomerId field value
func (o *ResponsePersonalIdWCust) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *ResponsePersonalIdWCust) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *ResponsePersonalIdWCust) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetCountryCode returns the CountryCode field value
func (o *ResponsePersonalIdWCust) GetCountryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
func (o *ResponsePersonalIdWCust) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryCode, true
}

// SetCountryCode sets field value
func (o *ResponsePersonalIdWCust) SetCountryCode(v string) {
	o.CountryCode = v
}

// GetId returns the Id field value
func (o *ResponsePersonalIdWCust) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ResponsePersonalIdWCust) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ResponsePersonalIdWCust) SetId(v string) {
	o.Id = v
}

// GetIdType returns the IdType field value
func (o *ResponsePersonalIdWCust) GetIdType() PersonalIdType {
	if o == nil {
		var ret PersonalIdType
		return ret
	}

	return o.IdType
}

// GetIdTypeOk returns a tuple with the IdType field value
// and a boolean to check if the value has been set.
func (o *ResponsePersonalIdWCust) GetIdTypeOk() (*PersonalIdType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdType, true
}

// SetIdType sets field value
func (o *ResponsePersonalIdWCust) SetIdType(v PersonalIdType) {
	o.IdType = v
}

// GetIdentifier returns the Identifier field value
func (o *ResponsePersonalIdWCust) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *ResponsePersonalIdWCust) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *ResponsePersonalIdWCust) SetIdentifier(v string) {
	o.Identifier = v
}

// GetSystemProvided returns the SystemProvided field value
func (o *ResponsePersonalIdWCust) GetSystemProvided() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SystemProvided
}

// GetSystemProvidedOk returns a tuple with the SystemProvided field value
// and a boolean to check if the value has been set.
func (o *ResponsePersonalIdWCust) GetSystemProvidedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemProvided, true
}

// SetSystemProvided sets field value
func (o *ResponsePersonalIdWCust) SetSystemProvided(v bool) {
	o.SystemProvided = v
}

// GetTenant returns the Tenant field value
func (o *ResponsePersonalIdWCust) GetTenant() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value
// and a boolean to check if the value has been set.
func (o *ResponsePersonalIdWCust) GetTenantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tenant, true
}

// SetTenant sets field value
func (o *ResponsePersonalIdWCust) SetTenant(v string) {
	o.Tenant = v
}

func (o ResponsePersonalIdWCust) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsePersonalIdWCust) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customer_id"] = o.CustomerId
	toSerialize["country_code"] = o.CountryCode
	toSerialize["id"] = o.Id
	toSerialize["id_type"] = o.IdType
	toSerialize["identifier"] = o.Identifier
	toSerialize["system_provided"] = o.SystemProvided
	toSerialize["tenant"] = o.Tenant
	return toSerialize, nil
}

func (o *ResponsePersonalIdWCust) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customer_id",
		"country_code",
		"id",
		"id_type",
		"identifier",
		"system_provided",
		"tenant",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResponsePersonalIdWCust := _ResponsePersonalIdWCust{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResponsePersonalIdWCust)

	if err != nil {
		return err
	}

	*o = ResponsePersonalIdWCust(varResponsePersonalIdWCust)

	return err
}

type NullableResponsePersonalIdWCust struct {
	value *ResponsePersonalIdWCust
	isSet bool
}

func (v NullableResponsePersonalIdWCust) Get() *ResponsePersonalIdWCust {
	return v.value
}

func (v *NullableResponsePersonalIdWCust) Set(val *ResponsePersonalIdWCust) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsePersonalIdWCust) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsePersonalIdWCust) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsePersonalIdWCust(val *ResponsePersonalIdWCust) *NullableResponsePersonalIdWCust {
	return &NullableResponsePersonalIdWCust{value: val, isSet: true}
}

func (v NullableResponsePersonalIdWCust) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsePersonalIdWCust) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
