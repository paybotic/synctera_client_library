/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
	"fmt"
)

// checks if the SimulateCardFulfillment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SimulateCardFulfillment{}

// SimulateCardFulfillment struct for SimulateCardFulfillment
type SimulateCardFulfillment struct {
	CardFulfillmentStatus CardFulfillmentStatus `json:"card_fulfillment_status"`
	AdditionalProperties  map[string]interface{}
}

type _SimulateCardFulfillment SimulateCardFulfillment

// NewSimulateCardFulfillment instantiates a new SimulateCardFulfillment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimulateCardFulfillment(cardFulfillmentStatus CardFulfillmentStatus) *SimulateCardFulfillment {
	this := SimulateCardFulfillment{}
	this.CardFulfillmentStatus = cardFulfillmentStatus
	return &this
}

// NewSimulateCardFulfillmentWithDefaults instantiates a new SimulateCardFulfillment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimulateCardFulfillmentWithDefaults() *SimulateCardFulfillment {
	this := SimulateCardFulfillment{}
	return &this
}

// GetCardFulfillmentStatus returns the CardFulfillmentStatus field value
func (o *SimulateCardFulfillment) GetCardFulfillmentStatus() CardFulfillmentStatus {
	if o == nil {
		var ret CardFulfillmentStatus
		return ret
	}

	return o.CardFulfillmentStatus
}

// GetCardFulfillmentStatusOk returns a tuple with the CardFulfillmentStatus field value
// and a boolean to check if the value has been set.
func (o *SimulateCardFulfillment) GetCardFulfillmentStatusOk() (*CardFulfillmentStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardFulfillmentStatus, true
}

// SetCardFulfillmentStatus sets field value
func (o *SimulateCardFulfillment) SetCardFulfillmentStatus(v CardFulfillmentStatus) {
	o.CardFulfillmentStatus = v
}

func (o SimulateCardFulfillment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SimulateCardFulfillment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["card_fulfillment_status"] = o.CardFulfillmentStatus

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SimulateCardFulfillment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"card_fulfillment_status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSimulateCardFulfillment := _SimulateCardFulfillment{}

	err = json.Unmarshal(data, &varSimulateCardFulfillment)

	if err != nil {
		return err
	}

	*o = SimulateCardFulfillment(varSimulateCardFulfillment)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "card_fulfillment_status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSimulateCardFulfillment struct {
	value *SimulateCardFulfillment
	isSet bool
}

func (v NullableSimulateCardFulfillment) Get() *SimulateCardFulfillment {
	return v.value
}

func (v *NullableSimulateCardFulfillment) Set(val *SimulateCardFulfillment) {
	v.value = val
	v.isSet = true
}

func (v NullableSimulateCardFulfillment) IsSet() bool {
	return v.isSet
}

func (v *NullableSimulateCardFulfillment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimulateCardFulfillment(val *SimulateCardFulfillment) *NullableSimulateCardFulfillment {
	return &NullableSimulateCardFulfillment{value: val, isSet: true}
}

func (v NullableSimulateCardFulfillment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimulateCardFulfillment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
