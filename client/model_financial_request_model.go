/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
	"fmt"
)

// checks if the FinancialRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FinancialRequestModel{}

// FinancialRequestModel struct for FinancialRequestModel
type FinancialRequestModel struct {
	// The amount of the transaction in the smallest whole denomination of the applicable currency (eg. For USD use cents)
	Amount       int32             `json:"amount"`
	CardAcceptor CardAcceptorModel `json:"card_acceptor"`
	CardId       string            `json:"card_id"`
	// Cash back amount in the smallest whole denomination of the applicable currency (eg. For USD use cents)
	CashBackAmount       *int32              `json:"cash_back_amount,omitempty"`
	IsPreAuth            *bool               `json:"is_pre_auth,omitempty"`
	Mid                  string              `json:"mid"`
	Pin                  *string             `json:"pin,omitempty"`
	TransactionOptions   *TransactionOptions `json:"transaction_options,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FinancialRequestModel FinancialRequestModel

// NewFinancialRequestModel instantiates a new FinancialRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinancialRequestModel(amount int32, cardAcceptor CardAcceptorModel, cardId string, mid string) *FinancialRequestModel {
	this := FinancialRequestModel{}
	this.Amount = amount
	this.CardAcceptor = cardAcceptor
	this.CardId = cardId
	var isPreAuth bool = false
	this.IsPreAuth = &isPreAuth
	this.Mid = mid
	return &this
}

// NewFinancialRequestModelWithDefaults instantiates a new FinancialRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinancialRequestModelWithDefaults() *FinancialRequestModel {
	this := FinancialRequestModel{}
	var isPreAuth bool = false
	this.IsPreAuth = &isPreAuth
	return &this
}

// GetAmount returns the Amount field value
func (o *FinancialRequestModel) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *FinancialRequestModel) GetAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *FinancialRequestModel) SetAmount(v int32) {
	o.Amount = v
}

// GetCardAcceptor returns the CardAcceptor field value
func (o *FinancialRequestModel) GetCardAcceptor() CardAcceptorModel {
	if o == nil {
		var ret CardAcceptorModel
		return ret
	}

	return o.CardAcceptor
}

// GetCardAcceptorOk returns a tuple with the CardAcceptor field value
// and a boolean to check if the value has been set.
func (o *FinancialRequestModel) GetCardAcceptorOk() (*CardAcceptorModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardAcceptor, true
}

// SetCardAcceptor sets field value
func (o *FinancialRequestModel) SetCardAcceptor(v CardAcceptorModel) {
	o.CardAcceptor = v
}

// GetCardId returns the CardId field value
func (o *FinancialRequestModel) GetCardId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardId
}

// GetCardIdOk returns a tuple with the CardId field value
// and a boolean to check if the value has been set.
func (o *FinancialRequestModel) GetCardIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardId, true
}

// SetCardId sets field value
func (o *FinancialRequestModel) SetCardId(v string) {
	o.CardId = v
}

// GetCashBackAmount returns the CashBackAmount field value if set, zero value otherwise.
func (o *FinancialRequestModel) GetCashBackAmount() int32 {
	if o == nil || IsNil(o.CashBackAmount) {
		var ret int32
		return ret
	}
	return *o.CashBackAmount
}

// GetCashBackAmountOk returns a tuple with the CashBackAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialRequestModel) GetCashBackAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.CashBackAmount) {
		return nil, false
	}
	return o.CashBackAmount, true
}

// HasCashBackAmount returns a boolean if a field has been set.
func (o *FinancialRequestModel) HasCashBackAmount() bool {
	if o != nil && !IsNil(o.CashBackAmount) {
		return true
	}

	return false
}

// SetCashBackAmount gets a reference to the given int32 and assigns it to the CashBackAmount field.
func (o *FinancialRequestModel) SetCashBackAmount(v int32) {
	o.CashBackAmount = &v
}

// GetIsPreAuth returns the IsPreAuth field value if set, zero value otherwise.
func (o *FinancialRequestModel) GetIsPreAuth() bool {
	if o == nil || IsNil(o.IsPreAuth) {
		var ret bool
		return ret
	}
	return *o.IsPreAuth
}

// GetIsPreAuthOk returns a tuple with the IsPreAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialRequestModel) GetIsPreAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPreAuth) {
		return nil, false
	}
	return o.IsPreAuth, true
}

// HasIsPreAuth returns a boolean if a field has been set.
func (o *FinancialRequestModel) HasIsPreAuth() bool {
	if o != nil && !IsNil(o.IsPreAuth) {
		return true
	}

	return false
}

// SetIsPreAuth gets a reference to the given bool and assigns it to the IsPreAuth field.
func (o *FinancialRequestModel) SetIsPreAuth(v bool) {
	o.IsPreAuth = &v
}

// GetMid returns the Mid field value
func (o *FinancialRequestModel) GetMid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mid
}

// GetMidOk returns a tuple with the Mid field value
// and a boolean to check if the value has been set.
func (o *FinancialRequestModel) GetMidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mid, true
}

// SetMid sets field value
func (o *FinancialRequestModel) SetMid(v string) {
	o.Mid = v
}

// GetPin returns the Pin field value if set, zero value otherwise.
func (o *FinancialRequestModel) GetPin() string {
	if o == nil || IsNil(o.Pin) {
		var ret string
		return ret
	}
	return *o.Pin
}

// GetPinOk returns a tuple with the Pin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialRequestModel) GetPinOk() (*string, bool) {
	if o == nil || IsNil(o.Pin) {
		return nil, false
	}
	return o.Pin, true
}

// HasPin returns a boolean if a field has been set.
func (o *FinancialRequestModel) HasPin() bool {
	if o != nil && !IsNil(o.Pin) {
		return true
	}

	return false
}

// SetPin gets a reference to the given string and assigns it to the Pin field.
func (o *FinancialRequestModel) SetPin(v string) {
	o.Pin = &v
}

// GetTransactionOptions returns the TransactionOptions field value if set, zero value otherwise.
func (o *FinancialRequestModel) GetTransactionOptions() TransactionOptions {
	if o == nil || IsNil(o.TransactionOptions) {
		var ret TransactionOptions
		return ret
	}
	return *o.TransactionOptions
}

// GetTransactionOptionsOk returns a tuple with the TransactionOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialRequestModel) GetTransactionOptionsOk() (*TransactionOptions, bool) {
	if o == nil || IsNil(o.TransactionOptions) {
		return nil, false
	}
	return o.TransactionOptions, true
}

// HasTransactionOptions returns a boolean if a field has been set.
func (o *FinancialRequestModel) HasTransactionOptions() bool {
	if o != nil && !IsNil(o.TransactionOptions) {
		return true
	}

	return false
}

// SetTransactionOptions gets a reference to the given TransactionOptions and assigns it to the TransactionOptions field.
func (o *FinancialRequestModel) SetTransactionOptions(v TransactionOptions) {
	o.TransactionOptions = &v
}

func (o FinancialRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FinancialRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	toSerialize["card_acceptor"] = o.CardAcceptor
	toSerialize["card_id"] = o.CardId
	if !IsNil(o.CashBackAmount) {
		toSerialize["cash_back_amount"] = o.CashBackAmount
	}
	if !IsNil(o.IsPreAuth) {
		toSerialize["is_pre_auth"] = o.IsPreAuth
	}
	toSerialize["mid"] = o.Mid
	if !IsNil(o.Pin) {
		toSerialize["pin"] = o.Pin
	}
	if !IsNil(o.TransactionOptions) {
		toSerialize["transaction_options"] = o.TransactionOptions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FinancialRequestModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"card_acceptor",
		"card_id",
		"mid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFinancialRequestModel := _FinancialRequestModel{}

	err = json.Unmarshal(data, &varFinancialRequestModel)

	if err != nil {
		return err
	}

	*o = FinancialRequestModel(varFinancialRequestModel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "amount")
		delete(additionalProperties, "card_acceptor")
		delete(additionalProperties, "card_id")
		delete(additionalProperties, "cash_back_amount")
		delete(additionalProperties, "is_pre_auth")
		delete(additionalProperties, "mid")
		delete(additionalProperties, "pin")
		delete(additionalProperties, "transaction_options")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFinancialRequestModel struct {
	value *FinancialRequestModel
	isSet bool
}

func (v NullableFinancialRequestModel) Get() *FinancialRequestModel {
	return v.value
}

func (v *NullableFinancialRequestModel) Set(val *FinancialRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableFinancialRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableFinancialRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinancialRequestModel(val *FinancialRequestModel) *NullableFinancialRequestModel {
	return &NullableFinancialRequestModel{value: val, isSet: true}
}

func (v NullableFinancialRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinancialRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
