/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AchReturnSimulationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AchReturnSimulationRequest{}

// AchReturnSimulationRequest Simulate receiving an ACH return
type AchReturnSimulationRequest struct {
	// ID of an outgoing ACH transfer to be returned.
	AchId string `json:"ach_id"`
}

type _AchReturnSimulationRequest AchReturnSimulationRequest

// NewAchReturnSimulationRequest instantiates a new AchReturnSimulationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAchReturnSimulationRequest(achId string) *AchReturnSimulationRequest {
	this := AchReturnSimulationRequest{}
	this.AchId = achId
	return &this
}

// NewAchReturnSimulationRequestWithDefaults instantiates a new AchReturnSimulationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAchReturnSimulationRequestWithDefaults() *AchReturnSimulationRequest {
	this := AchReturnSimulationRequest{}
	return &this
}

// GetAchId returns the AchId field value
func (o *AchReturnSimulationRequest) GetAchId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AchId
}

// GetAchIdOk returns a tuple with the AchId field value
// and a boolean to check if the value has been set.
func (o *AchReturnSimulationRequest) GetAchIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AchId, true
}

// SetAchId sets field value
func (o *AchReturnSimulationRequest) SetAchId(v string) {
	o.AchId = v
}

func (o AchReturnSimulationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AchReturnSimulationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ach_id"] = o.AchId
	return toSerialize, nil
}

func (o *AchReturnSimulationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ach_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAchReturnSimulationRequest := _AchReturnSimulationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAchReturnSimulationRequest)

	if err != nil {
		return err
	}

	*o = AchReturnSimulationRequest(varAchReturnSimulationRequest)

	return err
}

type NullableAchReturnSimulationRequest struct {
	value *AchReturnSimulationRequest
	isSet bool
}

func (v NullableAchReturnSimulationRequest) Get() *AchReturnSimulationRequest {
	return v.value
}

func (v *NullableAchReturnSimulationRequest) Set(val *AchReturnSimulationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAchReturnSimulationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAchReturnSimulationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAchReturnSimulationRequest(val *AchReturnSimulationRequest) *NullableAchReturnSimulationRequest {
	return &NullableAchReturnSimulationRequest{value: val, isSet: true}
}

func (v NullableAchReturnSimulationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAchReturnSimulationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
