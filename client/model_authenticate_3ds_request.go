/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.150.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the Authenticate3dsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Authenticate3dsRequest{}

// Authenticate3dsRequest Details for an External Card Transfer 3-D Secure Authentication request
type Authenticate3dsRequest struct {
	// The JWT recieved from the 3DS challenge
	ChallengeJwt string `json:"challenge_jwt"`
	// The unique identifier of the 3DS authentication
	Id string `json:"id"`
}

type _Authenticate3dsRequest Authenticate3dsRequest

// NewAuthenticate3dsRequest instantiates a new Authenticate3dsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticate3dsRequest(challengeJwt string, id string) *Authenticate3dsRequest {
	this := Authenticate3dsRequest{}
	this.ChallengeJwt = challengeJwt
	this.Id = id
	return &this
}

// NewAuthenticate3dsRequestWithDefaults instantiates a new Authenticate3dsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticate3dsRequestWithDefaults() *Authenticate3dsRequest {
	this := Authenticate3dsRequest{}
	return &this
}

// GetChallengeJwt returns the ChallengeJwt field value
func (o *Authenticate3dsRequest) GetChallengeJwt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChallengeJwt
}

// GetChallengeJwtOk returns a tuple with the ChallengeJwt field value
// and a boolean to check if the value has been set.
func (o *Authenticate3dsRequest) GetChallengeJwtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChallengeJwt, true
}

// SetChallengeJwt sets field value
func (o *Authenticate3dsRequest) SetChallengeJwt(v string) {
	o.ChallengeJwt = v
}

// GetId returns the Id field value
func (o *Authenticate3dsRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Authenticate3dsRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Authenticate3dsRequest) SetId(v string) {
	o.Id = v
}

func (o Authenticate3dsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Authenticate3dsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["challenge_jwt"] = o.ChallengeJwt
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *Authenticate3dsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"challenge_jwt",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuthenticate3dsRequest := _Authenticate3dsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAuthenticate3dsRequest)

	if err != nil {
		return err
	}

	*o = Authenticate3dsRequest(varAuthenticate3dsRequest)

	return err
}

type NullableAuthenticate3dsRequest struct {
	value *Authenticate3dsRequest
	isSet bool
}

func (v NullableAuthenticate3dsRequest) Get() *Authenticate3dsRequest {
	return v.value
}

func (v *NullableAuthenticate3dsRequest) Set(val *Authenticate3dsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticate3dsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticate3dsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticate3dsRequest(val *Authenticate3dsRequest) *NullableAuthenticate3dsRequest {
	return &NullableAuthenticate3dsRequest{value: val, isSet: true}
}

func (v NullableAuthenticate3dsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticate3dsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
