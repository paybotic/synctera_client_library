/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.150.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the OutgoingAch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutgoingAch{}

// OutgoingAch Represents a sent ACH transaction.
type OutgoingAch struct {
	// Receiving account uuid. This links to the external account resource (represented by 'receiving_account_id' in the request to send outgoing ACH).
	AccountId *string `json:"account_id,omitempty"`
	// Receiving account name
	AccountName *string `json:"account_name,omitempty"`
	// Receiving account number
	AccountNo string `json:"account_no"`
	// Transaction amount in cents
	Amount int32 `json:"amount"`
	BankId int32 `json:"bank_id"`
	// Company Entry Description field in ACH batch header. Originator inserts this field's value to provide the Receiver with a description of the entry's purpose.
	CompanyEntryDescription *string `json:"company_entry_description,omitempty"`
	// Company Name field in ACH batch header.
	CompanyName *string `json:"company_name,omitempty"`
	// Effective date of the transaction
	EffectiveDate string `json:"effective_date"`
	// Transaction ID in the ledger
	ExternalId string    `json:"external_id"`
	Hold       *HoldData `json:"hold,omitempty"`
	Id         string    `json:"id"`
	// ID of the linked incoming ACH entry. This is filled only for outgoing ACH entries that are returns and links to the originally received incoming entry.
	IncomingAchId *string `json:"incoming_ach_id,omitempty"`
	// Was initiated as same-day ACH transaction
	IsSameDay bool   `json:"is_same_day"`
	Memo      string `json:"memo"`
	PartnerId int32  `json:"partner_id"`
	// Transaction reference info
	ReferenceInfo *string     `json:"reference_info,omitempty"`
	ReturnData    *ReturnData `json:"return_data,omitempty"`
	// Originating account uuid. This links to the customer account on Synctera platform (represented by 'originating_account_id' in the request to send outgoing ACH).
	SourceAccountId *string `json:"source_account_id,omitempty"`
	// Originating account name
	SourceAccountName *string `json:"source_account_name,omitempty"`
	// Originating account number
	SourceAccountNo string `json:"source_account_no"`
	Status          string `json:"status"`
	// Trace number of the transaction
	TraceNo string `json:"trace_no"`
}

type _OutgoingAch OutgoingAch

// NewOutgoingAch instantiates a new OutgoingAch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutgoingAch(accountNo string, amount int32, bankId int32, effectiveDate string, externalId string, id string, isSameDay bool, memo string, partnerId int32, sourceAccountNo string, status string, traceNo string) *OutgoingAch {
	this := OutgoingAch{}
	this.AccountNo = accountNo
	this.Amount = amount
	this.BankId = bankId
	this.EffectiveDate = effectiveDate
	this.ExternalId = externalId
	this.Id = id
	this.IsSameDay = isSameDay
	this.Memo = memo
	this.PartnerId = partnerId
	this.SourceAccountNo = sourceAccountNo
	this.Status = status
	this.TraceNo = traceNo
	return &this
}

// NewOutgoingAchWithDefaults instantiates a new OutgoingAch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutgoingAchWithDefaults() *OutgoingAch {
	this := OutgoingAch{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *OutgoingAch) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *OutgoingAch) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *OutgoingAch) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *OutgoingAch) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *OutgoingAch) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *OutgoingAch) SetAccountName(v string) {
	o.AccountName = &v
}

// GetAccountNo returns the AccountNo field value
func (o *OutgoingAch) GetAccountNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNo
}

// GetAccountNoOk returns a tuple with the AccountNo field value
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetAccountNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNo, true
}

// SetAccountNo sets field value
func (o *OutgoingAch) SetAccountNo(v string) {
	o.AccountNo = v
}

// GetAmount returns the Amount field value
func (o *OutgoingAch) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *OutgoingAch) SetAmount(v int32) {
	o.Amount = v
}

// GetBankId returns the BankId field value
func (o *OutgoingAch) GetBankId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BankId
}

// GetBankIdOk returns a tuple with the BankId field value
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetBankIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankId, true
}

// SetBankId sets field value
func (o *OutgoingAch) SetBankId(v int32) {
	o.BankId = v
}

// GetCompanyEntryDescription returns the CompanyEntryDescription field value if set, zero value otherwise.
func (o *OutgoingAch) GetCompanyEntryDescription() string {
	if o == nil || IsNil(o.CompanyEntryDescription) {
		var ret string
		return ret
	}
	return *o.CompanyEntryDescription
}

// GetCompanyEntryDescriptionOk returns a tuple with the CompanyEntryDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetCompanyEntryDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyEntryDescription) {
		return nil, false
	}
	return o.CompanyEntryDescription, true
}

// HasCompanyEntryDescription returns a boolean if a field has been set.
func (o *OutgoingAch) HasCompanyEntryDescription() bool {
	if o != nil && !IsNil(o.CompanyEntryDescription) {
		return true
	}

	return false
}

// SetCompanyEntryDescription gets a reference to the given string and assigns it to the CompanyEntryDescription field.
func (o *OutgoingAch) SetCompanyEntryDescription(v string) {
	o.CompanyEntryDescription = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *OutgoingAch) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *OutgoingAch) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *OutgoingAch) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetEffectiveDate returns the EffectiveDate field value
func (o *OutgoingAch) GetEffectiveDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetEffectiveDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EffectiveDate, true
}

// SetEffectiveDate sets field value
func (o *OutgoingAch) SetEffectiveDate(v string) {
	o.EffectiveDate = v
}

// GetExternalId returns the ExternalId field value
func (o *OutgoingAch) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *OutgoingAch) SetExternalId(v string) {
	o.ExternalId = v
}

// GetHold returns the Hold field value if set, zero value otherwise.
func (o *OutgoingAch) GetHold() HoldData {
	if o == nil || IsNil(o.Hold) {
		var ret HoldData
		return ret
	}
	return *o.Hold
}

// GetHoldOk returns a tuple with the Hold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetHoldOk() (*HoldData, bool) {
	if o == nil || IsNil(o.Hold) {
		return nil, false
	}
	return o.Hold, true
}

// HasHold returns a boolean if a field has been set.
func (o *OutgoingAch) HasHold() bool {
	if o != nil && !IsNil(o.Hold) {
		return true
	}

	return false
}

// SetHold gets a reference to the given HoldData and assigns it to the Hold field.
func (o *OutgoingAch) SetHold(v HoldData) {
	o.Hold = &v
}

// GetId returns the Id field value
func (o *OutgoingAch) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OutgoingAch) SetId(v string) {
	o.Id = v
}

// GetIncomingAchId returns the IncomingAchId field value if set, zero value otherwise.
func (o *OutgoingAch) GetIncomingAchId() string {
	if o == nil || IsNil(o.IncomingAchId) {
		var ret string
		return ret
	}
	return *o.IncomingAchId
}

// GetIncomingAchIdOk returns a tuple with the IncomingAchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetIncomingAchIdOk() (*string, bool) {
	if o == nil || IsNil(o.IncomingAchId) {
		return nil, false
	}
	return o.IncomingAchId, true
}

// HasIncomingAchId returns a boolean if a field has been set.
func (o *OutgoingAch) HasIncomingAchId() bool {
	if o != nil && !IsNil(o.IncomingAchId) {
		return true
	}

	return false
}

// SetIncomingAchId gets a reference to the given string and assigns it to the IncomingAchId field.
func (o *OutgoingAch) SetIncomingAchId(v string) {
	o.IncomingAchId = &v
}

// GetIsSameDay returns the IsSameDay field value
func (o *OutgoingAch) GetIsSameDay() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSameDay
}

// GetIsSameDayOk returns a tuple with the IsSameDay field value
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetIsSameDayOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsSameDay, true
}

// SetIsSameDay sets field value
func (o *OutgoingAch) SetIsSameDay(v bool) {
	o.IsSameDay = v
}

// GetMemo returns the Memo field value
func (o *OutgoingAch) GetMemo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Memo
}

// GetMemoOk returns a tuple with the Memo field value
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetMemoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memo, true
}

// SetMemo sets field value
func (o *OutgoingAch) SetMemo(v string) {
	o.Memo = v
}

// GetPartnerId returns the PartnerId field value
func (o *OutgoingAch) GetPartnerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetPartnerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartnerId, true
}

// SetPartnerId sets field value
func (o *OutgoingAch) SetPartnerId(v int32) {
	o.PartnerId = v
}

// GetReferenceInfo returns the ReferenceInfo field value if set, zero value otherwise.
func (o *OutgoingAch) GetReferenceInfo() string {
	if o == nil || IsNil(o.ReferenceInfo) {
		var ret string
		return ret
	}
	return *o.ReferenceInfo
}

// GetReferenceInfoOk returns a tuple with the ReferenceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetReferenceInfoOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceInfo) {
		return nil, false
	}
	return o.ReferenceInfo, true
}

// HasReferenceInfo returns a boolean if a field has been set.
func (o *OutgoingAch) HasReferenceInfo() bool {
	if o != nil && !IsNil(o.ReferenceInfo) {
		return true
	}

	return false
}

// SetReferenceInfo gets a reference to the given string and assigns it to the ReferenceInfo field.
func (o *OutgoingAch) SetReferenceInfo(v string) {
	o.ReferenceInfo = &v
}

// GetReturnData returns the ReturnData field value if set, zero value otherwise.
func (o *OutgoingAch) GetReturnData() ReturnData {
	if o == nil || IsNil(o.ReturnData) {
		var ret ReturnData
		return ret
	}
	return *o.ReturnData
}

// GetReturnDataOk returns a tuple with the ReturnData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetReturnDataOk() (*ReturnData, bool) {
	if o == nil || IsNil(o.ReturnData) {
		return nil, false
	}
	return o.ReturnData, true
}

// HasReturnData returns a boolean if a field has been set.
func (o *OutgoingAch) HasReturnData() bool {
	if o != nil && !IsNil(o.ReturnData) {
		return true
	}

	return false
}

// SetReturnData gets a reference to the given ReturnData and assigns it to the ReturnData field.
func (o *OutgoingAch) SetReturnData(v ReturnData) {
	o.ReturnData = &v
}

// GetSourceAccountId returns the SourceAccountId field value if set, zero value otherwise.
func (o *OutgoingAch) GetSourceAccountId() string {
	if o == nil || IsNil(o.SourceAccountId) {
		var ret string
		return ret
	}
	return *o.SourceAccountId
}

// GetSourceAccountIdOk returns a tuple with the SourceAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetSourceAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceAccountId) {
		return nil, false
	}
	return o.SourceAccountId, true
}

// HasSourceAccountId returns a boolean if a field has been set.
func (o *OutgoingAch) HasSourceAccountId() bool {
	if o != nil && !IsNil(o.SourceAccountId) {
		return true
	}

	return false
}

// SetSourceAccountId gets a reference to the given string and assigns it to the SourceAccountId field.
func (o *OutgoingAch) SetSourceAccountId(v string) {
	o.SourceAccountId = &v
}

// GetSourceAccountName returns the SourceAccountName field value if set, zero value otherwise.
func (o *OutgoingAch) GetSourceAccountName() string {
	if o == nil || IsNil(o.SourceAccountName) {
		var ret string
		return ret
	}
	return *o.SourceAccountName
}

// GetSourceAccountNameOk returns a tuple with the SourceAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetSourceAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceAccountName) {
		return nil, false
	}
	return o.SourceAccountName, true
}

// HasSourceAccountName returns a boolean if a field has been set.
func (o *OutgoingAch) HasSourceAccountName() bool {
	if o != nil && !IsNil(o.SourceAccountName) {
		return true
	}

	return false
}

// SetSourceAccountName gets a reference to the given string and assigns it to the SourceAccountName field.
func (o *OutgoingAch) SetSourceAccountName(v string) {
	o.SourceAccountName = &v
}

// GetSourceAccountNo returns the SourceAccountNo field value
func (o *OutgoingAch) GetSourceAccountNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceAccountNo
}

// GetSourceAccountNoOk returns a tuple with the SourceAccountNo field value
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetSourceAccountNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceAccountNo, true
}

// SetSourceAccountNo sets field value
func (o *OutgoingAch) SetSourceAccountNo(v string) {
	o.SourceAccountNo = v
}

// GetStatus returns the Status field value
func (o *OutgoingAch) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *OutgoingAch) SetStatus(v string) {
	o.Status = v
}

// GetTraceNo returns the TraceNo field value
func (o *OutgoingAch) GetTraceNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TraceNo
}

// GetTraceNoOk returns a tuple with the TraceNo field value
// and a boolean to check if the value has been set.
func (o *OutgoingAch) GetTraceNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TraceNo, true
}

// SetTraceNo sets field value
func (o *OutgoingAch) SetTraceNo(v string) {
	o.TraceNo = v
}

func (o OutgoingAch) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutgoingAch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.AccountName) {
		toSerialize["account_name"] = o.AccountName
	}
	toSerialize["account_no"] = o.AccountNo
	toSerialize["amount"] = o.Amount
	toSerialize["bank_id"] = o.BankId
	if !IsNil(o.CompanyEntryDescription) {
		toSerialize["company_entry_description"] = o.CompanyEntryDescription
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	toSerialize["effective_date"] = o.EffectiveDate
	toSerialize["external_id"] = o.ExternalId
	if !IsNil(o.Hold) {
		toSerialize["hold"] = o.Hold
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.IncomingAchId) {
		toSerialize["incoming_ach_id"] = o.IncomingAchId
	}
	toSerialize["is_same_day"] = o.IsSameDay
	toSerialize["memo"] = o.Memo
	toSerialize["partner_id"] = o.PartnerId
	if !IsNil(o.ReferenceInfo) {
		toSerialize["reference_info"] = o.ReferenceInfo
	}
	if !IsNil(o.ReturnData) {
		toSerialize["return_data"] = o.ReturnData
	}
	if !IsNil(o.SourceAccountId) {
		toSerialize["source_account_id"] = o.SourceAccountId
	}
	if !IsNil(o.SourceAccountName) {
		toSerialize["source_account_name"] = o.SourceAccountName
	}
	toSerialize["source_account_no"] = o.SourceAccountNo
	toSerialize["status"] = o.Status
	toSerialize["trace_no"] = o.TraceNo
	return toSerialize, nil
}

func (o *OutgoingAch) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"account_no",
		"amount",
		"bank_id",
		"effective_date",
		"external_id",
		"id",
		"is_same_day",
		"memo",
		"partner_id",
		"source_account_no",
		"status",
		"trace_no",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutgoingAch := _OutgoingAch{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOutgoingAch)

	if err != nil {
		return err
	}

	*o = OutgoingAch(varOutgoingAch)

	return err
}

type NullableOutgoingAch struct {
	value *OutgoingAch
	isSet bool
}

func (v NullableOutgoingAch) Get() *OutgoingAch {
	return v.value
}

func (v *NullableOutgoingAch) Set(val *OutgoingAch) {
	v.value = val
	v.isSet = true
}

func (v NullableOutgoingAch) IsSet() bool {
	return v.isSet
}

func (v *NullableOutgoingAch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutgoingAch(val *OutgoingAch) *NullableOutgoingAch {
	return &NullableOutgoingAch{value: val, isSet: true}
}

func (v NullableOutgoingAch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutgoingAch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
