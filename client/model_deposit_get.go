/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the DepositGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DepositGet{}

// DepositGet struct for DepositGet
type DepositGet struct {
	CreationTime *time.Time `json:"creation_time,omitempty"`
	// Date the deposit was captured, in RFC 3339 format
	DateCaptured time.Time `json:"date_captured"`
	// Date the deposit was processed, in RFC 3339 format
	DateProcessed time.Time `json:"date_processed"`
	// Amount deposited in ISO 4217 minor currency units
	DepositAmount int32 `json:"deposit_amount"`
	// Remote Check Deposit ID
	Id              string     `json:"id"`
	LastUpdatedTime *time.Time `json:"last_updated_time,omitempty"`
	// Account number of the issuer of the check, included if OCR is successful
	OcrAccountNumber *string `json:"ocr_account_number,omitempty"`
	// The unique check number for this check in the checkbook, included if OCR is successful and there is a check number on the check
	OcrCheckNumber *string `json:"ocr_check_number,omitempty"`
	// Routing number of the issuing bank, included if OCR is successful
	OcrRoutingNumber *string `json:"ocr_routing_number,omitempty"`
	// The status of the deposit
	Status string `json:"status"`
	// The ID of the transaction associated with this deposit
	TransactionId *string     `json:"transaction_id,omitempty"`
	VendorInfo    *VendorInfo `json:"vendor_info,omitempty"`
	// The ID of the account
	AccountId string `json:"account_id"`
	// ID of the uploaded image of the back of the check
	BackImageId string `json:"back_image_id"`
	// Unique ID for the business. Exactly one of `business_id` or `person_id` must be set.
	BusinessId *string `json:"business_id,omitempty"`
	// Amount on check in ISO 4217 minor currency units
	CheckAmount int32 `json:"check_amount"`
	// ISO 4217 currency code for the deposit amount
	DepositCurrency string `json:"deposit_currency"`
	// ID of the uploaded image of the front of the check
	FrontImageId string `json:"front_image_id"`
	// Optional field to store additional information about the resource. Intended to be used by the integrator to store non-sensitive data.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Unique ID for the person. Exactly one of `person_id` or `business_id` must be set.
	PersonId *string `json:"person_id,omitempty"`
}

type _DepositGet DepositGet

// NewDepositGet instantiates a new DepositGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepositGet(dateCaptured time.Time, dateProcessed time.Time, depositAmount int32, id string, status string, accountId string, backImageId string, checkAmount int32, depositCurrency string, frontImageId string) *DepositGet {
	this := DepositGet{}
	this.DateCaptured = dateCaptured
	this.DateProcessed = dateProcessed
	this.DepositAmount = depositAmount
	this.Id = id
	this.Status = status
	this.AccountId = accountId
	this.BackImageId = backImageId
	this.CheckAmount = checkAmount
	this.DepositCurrency = depositCurrency
	this.FrontImageId = frontImageId
	return &this
}

// NewDepositGetWithDefaults instantiates a new DepositGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepositGetWithDefaults() *DepositGet {
	this := DepositGet{}
	return &this
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *DepositGet) GetCreationTime() time.Time {
	if o == nil || IsNil(o.CreationTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositGet) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *DepositGet) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *DepositGet) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetDateCaptured returns the DateCaptured field value
func (o *DepositGet) GetDateCaptured() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DateCaptured
}

// GetDateCapturedOk returns a tuple with the DateCaptured field value
// and a boolean to check if the value has been set.
func (o *DepositGet) GetDateCapturedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateCaptured, true
}

// SetDateCaptured sets field value
func (o *DepositGet) SetDateCaptured(v time.Time) {
	o.DateCaptured = v
}

// GetDateProcessed returns the DateProcessed field value
func (o *DepositGet) GetDateProcessed() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DateProcessed
}

// GetDateProcessedOk returns a tuple with the DateProcessed field value
// and a boolean to check if the value has been set.
func (o *DepositGet) GetDateProcessedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateProcessed, true
}

// SetDateProcessed sets field value
func (o *DepositGet) SetDateProcessed(v time.Time) {
	o.DateProcessed = v
}

// GetDepositAmount returns the DepositAmount field value
func (o *DepositGet) GetDepositAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DepositAmount
}

// GetDepositAmountOk returns a tuple with the DepositAmount field value
// and a boolean to check if the value has been set.
func (o *DepositGet) GetDepositAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepositAmount, true
}

// SetDepositAmount sets field value
func (o *DepositGet) SetDepositAmount(v int32) {
	o.DepositAmount = v
}

// GetId returns the Id field value
func (o *DepositGet) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DepositGet) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DepositGet) SetId(v string) {
	o.Id = v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value if set, zero value otherwise.
func (o *DepositGet) GetLastUpdatedTime() time.Time {
	if o == nil || IsNil(o.LastUpdatedTime) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositGet) GetLastUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdatedTime) {
		return nil, false
	}
	return o.LastUpdatedTime, true
}

// HasLastUpdatedTime returns a boolean if a field has been set.
func (o *DepositGet) HasLastUpdatedTime() bool {
	if o != nil && !IsNil(o.LastUpdatedTime) {
		return true
	}

	return false
}

// SetLastUpdatedTime gets a reference to the given time.Time and assigns it to the LastUpdatedTime field.
func (o *DepositGet) SetLastUpdatedTime(v time.Time) {
	o.LastUpdatedTime = &v
}

// GetOcrAccountNumber returns the OcrAccountNumber field value if set, zero value otherwise.
func (o *DepositGet) GetOcrAccountNumber() string {
	if o == nil || IsNil(o.OcrAccountNumber) {
		var ret string
		return ret
	}
	return *o.OcrAccountNumber
}

// GetOcrAccountNumberOk returns a tuple with the OcrAccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositGet) GetOcrAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.OcrAccountNumber) {
		return nil, false
	}
	return o.OcrAccountNumber, true
}

// HasOcrAccountNumber returns a boolean if a field has been set.
func (o *DepositGet) HasOcrAccountNumber() bool {
	if o != nil && !IsNil(o.OcrAccountNumber) {
		return true
	}

	return false
}

// SetOcrAccountNumber gets a reference to the given string and assigns it to the OcrAccountNumber field.
func (o *DepositGet) SetOcrAccountNumber(v string) {
	o.OcrAccountNumber = &v
}

// GetOcrCheckNumber returns the OcrCheckNumber field value if set, zero value otherwise.
func (o *DepositGet) GetOcrCheckNumber() string {
	if o == nil || IsNil(o.OcrCheckNumber) {
		var ret string
		return ret
	}
	return *o.OcrCheckNumber
}

// GetOcrCheckNumberOk returns a tuple with the OcrCheckNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositGet) GetOcrCheckNumberOk() (*string, bool) {
	if o == nil || IsNil(o.OcrCheckNumber) {
		return nil, false
	}
	return o.OcrCheckNumber, true
}

// HasOcrCheckNumber returns a boolean if a field has been set.
func (o *DepositGet) HasOcrCheckNumber() bool {
	if o != nil && !IsNil(o.OcrCheckNumber) {
		return true
	}

	return false
}

// SetOcrCheckNumber gets a reference to the given string and assigns it to the OcrCheckNumber field.
func (o *DepositGet) SetOcrCheckNumber(v string) {
	o.OcrCheckNumber = &v
}

// GetOcrRoutingNumber returns the OcrRoutingNumber field value if set, zero value otherwise.
func (o *DepositGet) GetOcrRoutingNumber() string {
	if o == nil || IsNil(o.OcrRoutingNumber) {
		var ret string
		return ret
	}
	return *o.OcrRoutingNumber
}

// GetOcrRoutingNumberOk returns a tuple with the OcrRoutingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositGet) GetOcrRoutingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.OcrRoutingNumber) {
		return nil, false
	}
	return o.OcrRoutingNumber, true
}

// HasOcrRoutingNumber returns a boolean if a field has been set.
func (o *DepositGet) HasOcrRoutingNumber() bool {
	if o != nil && !IsNil(o.OcrRoutingNumber) {
		return true
	}

	return false
}

// SetOcrRoutingNumber gets a reference to the given string and assigns it to the OcrRoutingNumber field.
func (o *DepositGet) SetOcrRoutingNumber(v string) {
	o.OcrRoutingNumber = &v
}

// GetStatus returns the Status field value
func (o *DepositGet) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DepositGet) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DepositGet) SetStatus(v string) {
	o.Status = v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *DepositGet) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositGet) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *DepositGet) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *DepositGet) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetVendorInfo returns the VendorInfo field value if set, zero value otherwise.
func (o *DepositGet) GetVendorInfo() VendorInfo {
	if o == nil || IsNil(o.VendorInfo) {
		var ret VendorInfo
		return ret
	}
	return *o.VendorInfo
}

// GetVendorInfoOk returns a tuple with the VendorInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositGet) GetVendorInfoOk() (*VendorInfo, bool) {
	if o == nil || IsNil(o.VendorInfo) {
		return nil, false
	}
	return o.VendorInfo, true
}

// HasVendorInfo returns a boolean if a field has been set.
func (o *DepositGet) HasVendorInfo() bool {
	if o != nil && !IsNil(o.VendorInfo) {
		return true
	}

	return false
}

// SetVendorInfo gets a reference to the given VendorInfo and assigns it to the VendorInfo field.
func (o *DepositGet) SetVendorInfo(v VendorInfo) {
	o.VendorInfo = &v
}

// GetAccountId returns the AccountId field value
func (o *DepositGet) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *DepositGet) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *DepositGet) SetAccountId(v string) {
	o.AccountId = v
}

// GetBackImageId returns the BackImageId field value
func (o *DepositGet) GetBackImageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackImageId
}

// GetBackImageIdOk returns a tuple with the BackImageId field value
// and a boolean to check if the value has been set.
func (o *DepositGet) GetBackImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackImageId, true
}

// SetBackImageId sets field value
func (o *DepositGet) SetBackImageId(v string) {
	o.BackImageId = v
}

// GetBusinessId returns the BusinessId field value if set, zero value otherwise.
func (o *DepositGet) GetBusinessId() string {
	if o == nil || IsNil(o.BusinessId) {
		var ret string
		return ret
	}
	return *o.BusinessId
}

// GetBusinessIdOk returns a tuple with the BusinessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositGet) GetBusinessIdOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessId) {
		return nil, false
	}
	return o.BusinessId, true
}

// HasBusinessId returns a boolean if a field has been set.
func (o *DepositGet) HasBusinessId() bool {
	if o != nil && !IsNil(o.BusinessId) {
		return true
	}

	return false
}

// SetBusinessId gets a reference to the given string and assigns it to the BusinessId field.
func (o *DepositGet) SetBusinessId(v string) {
	o.BusinessId = &v
}

// GetCheckAmount returns the CheckAmount field value
func (o *DepositGet) GetCheckAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CheckAmount
}

// GetCheckAmountOk returns a tuple with the CheckAmount field value
// and a boolean to check if the value has been set.
func (o *DepositGet) GetCheckAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CheckAmount, true
}

// SetCheckAmount sets field value
func (o *DepositGet) SetCheckAmount(v int32) {
	o.CheckAmount = v
}

// GetDepositCurrency returns the DepositCurrency field value
func (o *DepositGet) GetDepositCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DepositCurrency
}

// GetDepositCurrencyOk returns a tuple with the DepositCurrency field value
// and a boolean to check if the value has been set.
func (o *DepositGet) GetDepositCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepositCurrency, true
}

// SetDepositCurrency sets field value
func (o *DepositGet) SetDepositCurrency(v string) {
	o.DepositCurrency = v
}

// GetFrontImageId returns the FrontImageId field value
func (o *DepositGet) GetFrontImageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FrontImageId
}

// GetFrontImageIdOk returns a tuple with the FrontImageId field value
// and a boolean to check if the value has been set.
func (o *DepositGet) GetFrontImageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FrontImageId, true
}

// SetFrontImageId sets field value
func (o *DepositGet) SetFrontImageId(v string) {
	o.FrontImageId = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DepositGet) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositGet) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DepositGet) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *DepositGet) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *DepositGet) GetPersonId() string {
	if o == nil || IsNil(o.PersonId) {
		var ret string
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositGet) GetPersonIdOk() (*string, bool) {
	if o == nil || IsNil(o.PersonId) {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *DepositGet) HasPersonId() bool {
	if o != nil && !IsNil(o.PersonId) {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given string and assigns it to the PersonId field.
func (o *DepositGet) SetPersonId(v string) {
	o.PersonId = &v
}

func (o DepositGet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepositGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreationTime) {
		toSerialize["creation_time"] = o.CreationTime
	}
	toSerialize["date_captured"] = o.DateCaptured
	toSerialize["date_processed"] = o.DateProcessed
	toSerialize["deposit_amount"] = o.DepositAmount
	toSerialize["id"] = o.Id
	if !IsNil(o.LastUpdatedTime) {
		toSerialize["last_updated_time"] = o.LastUpdatedTime
	}
	if !IsNil(o.OcrAccountNumber) {
		toSerialize["ocr_account_number"] = o.OcrAccountNumber
	}
	if !IsNil(o.OcrCheckNumber) {
		toSerialize["ocr_check_number"] = o.OcrCheckNumber
	}
	if !IsNil(o.OcrRoutingNumber) {
		toSerialize["ocr_routing_number"] = o.OcrRoutingNumber
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.TransactionId) {
		toSerialize["transaction_id"] = o.TransactionId
	}
	if !IsNil(o.VendorInfo) {
		toSerialize["vendor_info"] = o.VendorInfo
	}
	toSerialize["account_id"] = o.AccountId
	toSerialize["back_image_id"] = o.BackImageId
	if !IsNil(o.BusinessId) {
		toSerialize["business_id"] = o.BusinessId
	}
	toSerialize["check_amount"] = o.CheckAmount
	toSerialize["deposit_currency"] = o.DepositCurrency
	toSerialize["front_image_id"] = o.FrontImageId
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.PersonId) {
		toSerialize["person_id"] = o.PersonId
	}
	return toSerialize, nil
}

func (o *DepositGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"date_captured",
		"date_processed",
		"deposit_amount",
		"id",
		"status",
		"account_id",
		"back_image_id",
		"check_amount",
		"deposit_currency",
		"front_image_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDepositGet := _DepositGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDepositGet)

	if err != nil {
		return err
	}

	*o = DepositGet(varDepositGet)

	return err
}

type NullableDepositGet struct {
	value *DepositGet
	isSet bool
}

func (v NullableDepositGet) Get() *DepositGet {
	return v.value
}

func (v *NullableDepositGet) Set(val *DepositGet) {
	v.value = val
	v.isSet = true
}

func (v NullableDepositGet) IsSet() bool {
	return v.isSet
}

func (v *NullableDepositGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepositGet(val *DepositGet) *NullableDepositGet {
	return &NullableDepositGet{value: val, isSet: true}
}

func (v NullableDepositGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepositGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
