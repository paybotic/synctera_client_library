/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WatchlistSubscriptionList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WatchlistSubscriptionList{}

// WatchlistSubscriptionList struct for WatchlistSubscriptionList
type WatchlistSubscriptionList struct {
	// If returned, use the next_page_token to query for the next page of results. Not returned if there are no more rows.
	NextPageToken *string                 `json:"next_page_token,omitempty"`
	Subscriptions []WatchlistSubscription `json:"subscriptions"`
}

type _WatchlistSubscriptionList WatchlistSubscriptionList

// NewWatchlistSubscriptionList instantiates a new WatchlistSubscriptionList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchlistSubscriptionList(subscriptions []WatchlistSubscription) *WatchlistSubscriptionList {
	this := WatchlistSubscriptionList{}
	this.Subscriptions = subscriptions
	return &this
}

// NewWatchlistSubscriptionListWithDefaults instantiates a new WatchlistSubscriptionList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchlistSubscriptionListWithDefaults() *WatchlistSubscriptionList {
	this := WatchlistSubscriptionList{}
	return &this
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *WatchlistSubscriptionList) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchlistSubscriptionList) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *WatchlistSubscriptionList) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *WatchlistSubscriptionList) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetSubscriptions returns the Subscriptions field value
func (o *WatchlistSubscriptionList) GetSubscriptions() []WatchlistSubscription {
	if o == nil {
		var ret []WatchlistSubscription
		return ret
	}

	return o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value
// and a boolean to check if the value has been set.
func (o *WatchlistSubscriptionList) GetSubscriptionsOk() ([]WatchlistSubscription, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subscriptions, true
}

// SetSubscriptions sets field value
func (o *WatchlistSubscriptionList) SetSubscriptions(v []WatchlistSubscription) {
	o.Subscriptions = v
}

func (o WatchlistSubscriptionList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WatchlistSubscriptionList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NextPageToken) {
		toSerialize["next_page_token"] = o.NextPageToken
	}
	toSerialize["subscriptions"] = o.Subscriptions
	return toSerialize, nil
}

func (o *WatchlistSubscriptionList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subscriptions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWatchlistSubscriptionList := _WatchlistSubscriptionList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWatchlistSubscriptionList)

	if err != nil {
		return err
	}

	*o = WatchlistSubscriptionList(varWatchlistSubscriptionList)

	return err
}

type NullableWatchlistSubscriptionList struct {
	value *WatchlistSubscriptionList
	isSet bool
}

func (v NullableWatchlistSubscriptionList) Get() *WatchlistSubscriptionList {
	return v.value
}

func (v *NullableWatchlistSubscriptionList) Set(val *WatchlistSubscriptionList) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchlistSubscriptionList) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchlistSubscriptionList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchlistSubscriptionList(val *WatchlistSubscriptionList) *NullableWatchlistSubscriptionList {
	return &NullableWatchlistSubscriptionList{value: val, isSet: true}
}

func (v NullableWatchlistSubscriptionList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchlistSubscriptionList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
