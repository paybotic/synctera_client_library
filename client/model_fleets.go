/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.150.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// checks if the Fleets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Fleets{}

// Fleets struct for Fleets
type Fleets struct {
	DriverId                  *string              `json:"driver_id,omitempty"`
	ExpandedFuelType          *string              `json:"expanded_fuel_type,omitempty"`
	FleetNumber               *string              `json:"fleet_number,omitempty"`
	FuelGrossAmount           *int64               `json:"fuel_gross_amount,omitempty"`
	FuelNetAmount             *int64               `json:"fuel_net_amount,omitempty"`
	FuelProductQualifier      *string              `json:"fuel_product_qualifier,omitempty"`
	FuelPurchaseType          *string              `json:"fuel_purchase_type,omitempty"`
	FuelQuantity              *float32             `json:"fuel_quantity,omitempty"`
	FuelServiceType           *string              `json:"fuel_service_type,omitempty"`
	FuelTaxAmount             *int64               `json:"fuel_tax_amount,omitempty"`
	FuelTaxExemptionStatus    *string              `json:"fuel_tax_exemption_status,omitempty"`
	FuelType                  *string              `json:"fuel_type,omitempty"`
	FuelUnitOfMeasure         *string              `json:"fuel_unit_of_measure,omitempty"`
	FuelUnitPrice             *float32             `json:"fuel_unit_price,omitempty"`
	JobNumber                 *string              `json:"job_number,omitempty"`
	NonFuelGrossAmount        *int64               `json:"non_fuel_gross_amount,omitempty"`
	NonFuelItemDetails        []NonFuelItemDetails `json:"non_fuel_item_details,omitempty"`
	NonFuelNetAmount          *int64               `json:"non_fuel_net_amount,omitempty"`
	NonFuelTaxAmount          *int64               `json:"non_fuel_tax_amount,omitempty"`
	NonFuelTaxExemptionStatus *string              `json:"non_fuel_tax_exemption_status,omitempty"`
	OdometerReading           *string              `json:"odometer_reading,omitempty"`
	SalesTaxAmount            *int64               `json:"sales_tax_amount,omitempty"`
	ServiceType               *string              `json:"service_type,omitempty"`
	TypeOfPurchase            *string              `json:"type_of_purchase,omitempty"`
	VatTaxRate                *float32             `json:"vat_tax_rate,omitempty"`
	VehicleId                 *string              `json:"vehicle_id,omitempty"`
}

// NewFleets instantiates a new Fleets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFleets() *Fleets {
	this := Fleets{}
	return &this
}

// NewFleetsWithDefaults instantiates a new Fleets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFleetsWithDefaults() *Fleets {
	this := Fleets{}
	return &this
}

// GetDriverId returns the DriverId field value if set, zero value otherwise.
func (o *Fleets) GetDriverId() string {
	if o == nil || IsNil(o.DriverId) {
		var ret string
		return ret
	}
	return *o.DriverId
}

// GetDriverIdOk returns a tuple with the DriverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetDriverIdOk() (*string, bool) {
	if o == nil || IsNil(o.DriverId) {
		return nil, false
	}
	return o.DriverId, true
}

// HasDriverId returns a boolean if a field has been set.
func (o *Fleets) HasDriverId() bool {
	if o != nil && !IsNil(o.DriverId) {
		return true
	}

	return false
}

// SetDriverId gets a reference to the given string and assigns it to the DriverId field.
func (o *Fleets) SetDriverId(v string) {
	o.DriverId = &v
}

// GetExpandedFuelType returns the ExpandedFuelType field value if set, zero value otherwise.
func (o *Fleets) GetExpandedFuelType() string {
	if o == nil || IsNil(o.ExpandedFuelType) {
		var ret string
		return ret
	}
	return *o.ExpandedFuelType
}

// GetExpandedFuelTypeOk returns a tuple with the ExpandedFuelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetExpandedFuelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpandedFuelType) {
		return nil, false
	}
	return o.ExpandedFuelType, true
}

// HasExpandedFuelType returns a boolean if a field has been set.
func (o *Fleets) HasExpandedFuelType() bool {
	if o != nil && !IsNil(o.ExpandedFuelType) {
		return true
	}

	return false
}

// SetExpandedFuelType gets a reference to the given string and assigns it to the ExpandedFuelType field.
func (o *Fleets) SetExpandedFuelType(v string) {
	o.ExpandedFuelType = &v
}

// GetFleetNumber returns the FleetNumber field value if set, zero value otherwise.
func (o *Fleets) GetFleetNumber() string {
	if o == nil || IsNil(o.FleetNumber) {
		var ret string
		return ret
	}
	return *o.FleetNumber
}

// GetFleetNumberOk returns a tuple with the FleetNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetFleetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.FleetNumber) {
		return nil, false
	}
	return o.FleetNumber, true
}

// HasFleetNumber returns a boolean if a field has been set.
func (o *Fleets) HasFleetNumber() bool {
	if o != nil && !IsNil(o.FleetNumber) {
		return true
	}

	return false
}

// SetFleetNumber gets a reference to the given string and assigns it to the FleetNumber field.
func (o *Fleets) SetFleetNumber(v string) {
	o.FleetNumber = &v
}

// GetFuelGrossAmount returns the FuelGrossAmount field value if set, zero value otherwise.
func (o *Fleets) GetFuelGrossAmount() int64 {
	if o == nil || IsNil(o.FuelGrossAmount) {
		var ret int64
		return ret
	}
	return *o.FuelGrossAmount
}

// GetFuelGrossAmountOk returns a tuple with the FuelGrossAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetFuelGrossAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.FuelGrossAmount) {
		return nil, false
	}
	return o.FuelGrossAmount, true
}

// HasFuelGrossAmount returns a boolean if a field has been set.
func (o *Fleets) HasFuelGrossAmount() bool {
	if o != nil && !IsNil(o.FuelGrossAmount) {
		return true
	}

	return false
}

// SetFuelGrossAmount gets a reference to the given int64 and assigns it to the FuelGrossAmount field.
func (o *Fleets) SetFuelGrossAmount(v int64) {
	o.FuelGrossAmount = &v
}

// GetFuelNetAmount returns the FuelNetAmount field value if set, zero value otherwise.
func (o *Fleets) GetFuelNetAmount() int64 {
	if o == nil || IsNil(o.FuelNetAmount) {
		var ret int64
		return ret
	}
	return *o.FuelNetAmount
}

// GetFuelNetAmountOk returns a tuple with the FuelNetAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetFuelNetAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.FuelNetAmount) {
		return nil, false
	}
	return o.FuelNetAmount, true
}

// HasFuelNetAmount returns a boolean if a field has been set.
func (o *Fleets) HasFuelNetAmount() bool {
	if o != nil && !IsNil(o.FuelNetAmount) {
		return true
	}

	return false
}

// SetFuelNetAmount gets a reference to the given int64 and assigns it to the FuelNetAmount field.
func (o *Fleets) SetFuelNetAmount(v int64) {
	o.FuelNetAmount = &v
}

// GetFuelProductQualifier returns the FuelProductQualifier field value if set, zero value otherwise.
func (o *Fleets) GetFuelProductQualifier() string {
	if o == nil || IsNil(o.FuelProductQualifier) {
		var ret string
		return ret
	}
	return *o.FuelProductQualifier
}

// GetFuelProductQualifierOk returns a tuple with the FuelProductQualifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetFuelProductQualifierOk() (*string, bool) {
	if o == nil || IsNil(o.FuelProductQualifier) {
		return nil, false
	}
	return o.FuelProductQualifier, true
}

// HasFuelProductQualifier returns a boolean if a field has been set.
func (o *Fleets) HasFuelProductQualifier() bool {
	if o != nil && !IsNil(o.FuelProductQualifier) {
		return true
	}

	return false
}

// SetFuelProductQualifier gets a reference to the given string and assigns it to the FuelProductQualifier field.
func (o *Fleets) SetFuelProductQualifier(v string) {
	o.FuelProductQualifier = &v
}

// GetFuelPurchaseType returns the FuelPurchaseType field value if set, zero value otherwise.
func (o *Fleets) GetFuelPurchaseType() string {
	if o == nil || IsNil(o.FuelPurchaseType) {
		var ret string
		return ret
	}
	return *o.FuelPurchaseType
}

// GetFuelPurchaseTypeOk returns a tuple with the FuelPurchaseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetFuelPurchaseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FuelPurchaseType) {
		return nil, false
	}
	return o.FuelPurchaseType, true
}

// HasFuelPurchaseType returns a boolean if a field has been set.
func (o *Fleets) HasFuelPurchaseType() bool {
	if o != nil && !IsNil(o.FuelPurchaseType) {
		return true
	}

	return false
}

// SetFuelPurchaseType gets a reference to the given string and assigns it to the FuelPurchaseType field.
func (o *Fleets) SetFuelPurchaseType(v string) {
	o.FuelPurchaseType = &v
}

// GetFuelQuantity returns the FuelQuantity field value if set, zero value otherwise.
func (o *Fleets) GetFuelQuantity() float32 {
	if o == nil || IsNil(o.FuelQuantity) {
		var ret float32
		return ret
	}
	return *o.FuelQuantity
}

// GetFuelQuantityOk returns a tuple with the FuelQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetFuelQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.FuelQuantity) {
		return nil, false
	}
	return o.FuelQuantity, true
}

// HasFuelQuantity returns a boolean if a field has been set.
func (o *Fleets) HasFuelQuantity() bool {
	if o != nil && !IsNil(o.FuelQuantity) {
		return true
	}

	return false
}

// SetFuelQuantity gets a reference to the given float32 and assigns it to the FuelQuantity field.
func (o *Fleets) SetFuelQuantity(v float32) {
	o.FuelQuantity = &v
}

// GetFuelServiceType returns the FuelServiceType field value if set, zero value otherwise.
func (o *Fleets) GetFuelServiceType() string {
	if o == nil || IsNil(o.FuelServiceType) {
		var ret string
		return ret
	}
	return *o.FuelServiceType
}

// GetFuelServiceTypeOk returns a tuple with the FuelServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetFuelServiceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FuelServiceType) {
		return nil, false
	}
	return o.FuelServiceType, true
}

// HasFuelServiceType returns a boolean if a field has been set.
func (o *Fleets) HasFuelServiceType() bool {
	if o != nil && !IsNil(o.FuelServiceType) {
		return true
	}

	return false
}

// SetFuelServiceType gets a reference to the given string and assigns it to the FuelServiceType field.
func (o *Fleets) SetFuelServiceType(v string) {
	o.FuelServiceType = &v
}

// GetFuelTaxAmount returns the FuelTaxAmount field value if set, zero value otherwise.
func (o *Fleets) GetFuelTaxAmount() int64 {
	if o == nil || IsNil(o.FuelTaxAmount) {
		var ret int64
		return ret
	}
	return *o.FuelTaxAmount
}

// GetFuelTaxAmountOk returns a tuple with the FuelTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetFuelTaxAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.FuelTaxAmount) {
		return nil, false
	}
	return o.FuelTaxAmount, true
}

// HasFuelTaxAmount returns a boolean if a field has been set.
func (o *Fleets) HasFuelTaxAmount() bool {
	if o != nil && !IsNil(o.FuelTaxAmount) {
		return true
	}

	return false
}

// SetFuelTaxAmount gets a reference to the given int64 and assigns it to the FuelTaxAmount field.
func (o *Fleets) SetFuelTaxAmount(v int64) {
	o.FuelTaxAmount = &v
}

// GetFuelTaxExemptionStatus returns the FuelTaxExemptionStatus field value if set, zero value otherwise.
func (o *Fleets) GetFuelTaxExemptionStatus() string {
	if o == nil || IsNil(o.FuelTaxExemptionStatus) {
		var ret string
		return ret
	}
	return *o.FuelTaxExemptionStatus
}

// GetFuelTaxExemptionStatusOk returns a tuple with the FuelTaxExemptionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetFuelTaxExemptionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.FuelTaxExemptionStatus) {
		return nil, false
	}
	return o.FuelTaxExemptionStatus, true
}

// HasFuelTaxExemptionStatus returns a boolean if a field has been set.
func (o *Fleets) HasFuelTaxExemptionStatus() bool {
	if o != nil && !IsNil(o.FuelTaxExemptionStatus) {
		return true
	}

	return false
}

// SetFuelTaxExemptionStatus gets a reference to the given string and assigns it to the FuelTaxExemptionStatus field.
func (o *Fleets) SetFuelTaxExemptionStatus(v string) {
	o.FuelTaxExemptionStatus = &v
}

// GetFuelType returns the FuelType field value if set, zero value otherwise.
func (o *Fleets) GetFuelType() string {
	if o == nil || IsNil(o.FuelType) {
		var ret string
		return ret
	}
	return *o.FuelType
}

// GetFuelTypeOk returns a tuple with the FuelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetFuelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FuelType) {
		return nil, false
	}
	return o.FuelType, true
}

// HasFuelType returns a boolean if a field has been set.
func (o *Fleets) HasFuelType() bool {
	if o != nil && !IsNil(o.FuelType) {
		return true
	}

	return false
}

// SetFuelType gets a reference to the given string and assigns it to the FuelType field.
func (o *Fleets) SetFuelType(v string) {
	o.FuelType = &v
}

// GetFuelUnitOfMeasure returns the FuelUnitOfMeasure field value if set, zero value otherwise.
func (o *Fleets) GetFuelUnitOfMeasure() string {
	if o == nil || IsNil(o.FuelUnitOfMeasure) {
		var ret string
		return ret
	}
	return *o.FuelUnitOfMeasure
}

// GetFuelUnitOfMeasureOk returns a tuple with the FuelUnitOfMeasure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetFuelUnitOfMeasureOk() (*string, bool) {
	if o == nil || IsNil(o.FuelUnitOfMeasure) {
		return nil, false
	}
	return o.FuelUnitOfMeasure, true
}

// HasFuelUnitOfMeasure returns a boolean if a field has been set.
func (o *Fleets) HasFuelUnitOfMeasure() bool {
	if o != nil && !IsNil(o.FuelUnitOfMeasure) {
		return true
	}

	return false
}

// SetFuelUnitOfMeasure gets a reference to the given string and assigns it to the FuelUnitOfMeasure field.
func (o *Fleets) SetFuelUnitOfMeasure(v string) {
	o.FuelUnitOfMeasure = &v
}

// GetFuelUnitPrice returns the FuelUnitPrice field value if set, zero value otherwise.
func (o *Fleets) GetFuelUnitPrice() float32 {
	if o == nil || IsNil(o.FuelUnitPrice) {
		var ret float32
		return ret
	}
	return *o.FuelUnitPrice
}

// GetFuelUnitPriceOk returns a tuple with the FuelUnitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetFuelUnitPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.FuelUnitPrice) {
		return nil, false
	}
	return o.FuelUnitPrice, true
}

// HasFuelUnitPrice returns a boolean if a field has been set.
func (o *Fleets) HasFuelUnitPrice() bool {
	if o != nil && !IsNil(o.FuelUnitPrice) {
		return true
	}

	return false
}

// SetFuelUnitPrice gets a reference to the given float32 and assigns it to the FuelUnitPrice field.
func (o *Fleets) SetFuelUnitPrice(v float32) {
	o.FuelUnitPrice = &v
}

// GetJobNumber returns the JobNumber field value if set, zero value otherwise.
func (o *Fleets) GetJobNumber() string {
	if o == nil || IsNil(o.JobNumber) {
		var ret string
		return ret
	}
	return *o.JobNumber
}

// GetJobNumberOk returns a tuple with the JobNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetJobNumberOk() (*string, bool) {
	if o == nil || IsNil(o.JobNumber) {
		return nil, false
	}
	return o.JobNumber, true
}

// HasJobNumber returns a boolean if a field has been set.
func (o *Fleets) HasJobNumber() bool {
	if o != nil && !IsNil(o.JobNumber) {
		return true
	}

	return false
}

// SetJobNumber gets a reference to the given string and assigns it to the JobNumber field.
func (o *Fleets) SetJobNumber(v string) {
	o.JobNumber = &v
}

// GetNonFuelGrossAmount returns the NonFuelGrossAmount field value if set, zero value otherwise.
func (o *Fleets) GetNonFuelGrossAmount() int64 {
	if o == nil || IsNil(o.NonFuelGrossAmount) {
		var ret int64
		return ret
	}
	return *o.NonFuelGrossAmount
}

// GetNonFuelGrossAmountOk returns a tuple with the NonFuelGrossAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetNonFuelGrossAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.NonFuelGrossAmount) {
		return nil, false
	}
	return o.NonFuelGrossAmount, true
}

// HasNonFuelGrossAmount returns a boolean if a field has been set.
func (o *Fleets) HasNonFuelGrossAmount() bool {
	if o != nil && !IsNil(o.NonFuelGrossAmount) {
		return true
	}

	return false
}

// SetNonFuelGrossAmount gets a reference to the given int64 and assigns it to the NonFuelGrossAmount field.
func (o *Fleets) SetNonFuelGrossAmount(v int64) {
	o.NonFuelGrossAmount = &v
}

// GetNonFuelItemDetails returns the NonFuelItemDetails field value if set, zero value otherwise.
func (o *Fleets) GetNonFuelItemDetails() []NonFuelItemDetails {
	if o == nil || IsNil(o.NonFuelItemDetails) {
		var ret []NonFuelItemDetails
		return ret
	}
	return o.NonFuelItemDetails
}

// GetNonFuelItemDetailsOk returns a tuple with the NonFuelItemDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetNonFuelItemDetailsOk() ([]NonFuelItemDetails, bool) {
	if o == nil || IsNil(o.NonFuelItemDetails) {
		return nil, false
	}
	return o.NonFuelItemDetails, true
}

// HasNonFuelItemDetails returns a boolean if a field has been set.
func (o *Fleets) HasNonFuelItemDetails() bool {
	if o != nil && !IsNil(o.NonFuelItemDetails) {
		return true
	}

	return false
}

// SetNonFuelItemDetails gets a reference to the given []NonFuelItemDetails and assigns it to the NonFuelItemDetails field.
func (o *Fleets) SetNonFuelItemDetails(v []NonFuelItemDetails) {
	o.NonFuelItemDetails = v
}

// GetNonFuelNetAmount returns the NonFuelNetAmount field value if set, zero value otherwise.
func (o *Fleets) GetNonFuelNetAmount() int64 {
	if o == nil || IsNil(o.NonFuelNetAmount) {
		var ret int64
		return ret
	}
	return *o.NonFuelNetAmount
}

// GetNonFuelNetAmountOk returns a tuple with the NonFuelNetAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetNonFuelNetAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.NonFuelNetAmount) {
		return nil, false
	}
	return o.NonFuelNetAmount, true
}

// HasNonFuelNetAmount returns a boolean if a field has been set.
func (o *Fleets) HasNonFuelNetAmount() bool {
	if o != nil && !IsNil(o.NonFuelNetAmount) {
		return true
	}

	return false
}

// SetNonFuelNetAmount gets a reference to the given int64 and assigns it to the NonFuelNetAmount field.
func (o *Fleets) SetNonFuelNetAmount(v int64) {
	o.NonFuelNetAmount = &v
}

// GetNonFuelTaxAmount returns the NonFuelTaxAmount field value if set, zero value otherwise.
func (o *Fleets) GetNonFuelTaxAmount() int64 {
	if o == nil || IsNil(o.NonFuelTaxAmount) {
		var ret int64
		return ret
	}
	return *o.NonFuelTaxAmount
}

// GetNonFuelTaxAmountOk returns a tuple with the NonFuelTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetNonFuelTaxAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.NonFuelTaxAmount) {
		return nil, false
	}
	return o.NonFuelTaxAmount, true
}

// HasNonFuelTaxAmount returns a boolean if a field has been set.
func (o *Fleets) HasNonFuelTaxAmount() bool {
	if o != nil && !IsNil(o.NonFuelTaxAmount) {
		return true
	}

	return false
}

// SetNonFuelTaxAmount gets a reference to the given int64 and assigns it to the NonFuelTaxAmount field.
func (o *Fleets) SetNonFuelTaxAmount(v int64) {
	o.NonFuelTaxAmount = &v
}

// GetNonFuelTaxExemptionStatus returns the NonFuelTaxExemptionStatus field value if set, zero value otherwise.
func (o *Fleets) GetNonFuelTaxExemptionStatus() string {
	if o == nil || IsNil(o.NonFuelTaxExemptionStatus) {
		var ret string
		return ret
	}
	return *o.NonFuelTaxExemptionStatus
}

// GetNonFuelTaxExemptionStatusOk returns a tuple with the NonFuelTaxExemptionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetNonFuelTaxExemptionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.NonFuelTaxExemptionStatus) {
		return nil, false
	}
	return o.NonFuelTaxExemptionStatus, true
}

// HasNonFuelTaxExemptionStatus returns a boolean if a field has been set.
func (o *Fleets) HasNonFuelTaxExemptionStatus() bool {
	if o != nil && !IsNil(o.NonFuelTaxExemptionStatus) {
		return true
	}

	return false
}

// SetNonFuelTaxExemptionStatus gets a reference to the given string and assigns it to the NonFuelTaxExemptionStatus field.
func (o *Fleets) SetNonFuelTaxExemptionStatus(v string) {
	o.NonFuelTaxExemptionStatus = &v
}

// GetOdometerReading returns the OdometerReading field value if set, zero value otherwise.
func (o *Fleets) GetOdometerReading() string {
	if o == nil || IsNil(o.OdometerReading) {
		var ret string
		return ret
	}
	return *o.OdometerReading
}

// GetOdometerReadingOk returns a tuple with the OdometerReading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetOdometerReadingOk() (*string, bool) {
	if o == nil || IsNil(o.OdometerReading) {
		return nil, false
	}
	return o.OdometerReading, true
}

// HasOdometerReading returns a boolean if a field has been set.
func (o *Fleets) HasOdometerReading() bool {
	if o != nil && !IsNil(o.OdometerReading) {
		return true
	}

	return false
}

// SetOdometerReading gets a reference to the given string and assigns it to the OdometerReading field.
func (o *Fleets) SetOdometerReading(v string) {
	o.OdometerReading = &v
}

// GetSalesTaxAmount returns the SalesTaxAmount field value if set, zero value otherwise.
func (o *Fleets) GetSalesTaxAmount() int64 {
	if o == nil || IsNil(o.SalesTaxAmount) {
		var ret int64
		return ret
	}
	return *o.SalesTaxAmount
}

// GetSalesTaxAmountOk returns a tuple with the SalesTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetSalesTaxAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.SalesTaxAmount) {
		return nil, false
	}
	return o.SalesTaxAmount, true
}

// HasSalesTaxAmount returns a boolean if a field has been set.
func (o *Fleets) HasSalesTaxAmount() bool {
	if o != nil && !IsNil(o.SalesTaxAmount) {
		return true
	}

	return false
}

// SetSalesTaxAmount gets a reference to the given int64 and assigns it to the SalesTaxAmount field.
func (o *Fleets) SetSalesTaxAmount(v int64) {
	o.SalesTaxAmount = &v
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *Fleets) GetServiceType() string {
	if o == nil || IsNil(o.ServiceType) {
		var ret string
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetServiceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceType) {
		return nil, false
	}
	return o.ServiceType, true
}

// HasServiceType returns a boolean if a field has been set.
func (o *Fleets) HasServiceType() bool {
	if o != nil && !IsNil(o.ServiceType) {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given string and assigns it to the ServiceType field.
func (o *Fleets) SetServiceType(v string) {
	o.ServiceType = &v
}

// GetTypeOfPurchase returns the TypeOfPurchase field value if set, zero value otherwise.
func (o *Fleets) GetTypeOfPurchase() string {
	if o == nil || IsNil(o.TypeOfPurchase) {
		var ret string
		return ret
	}
	return *o.TypeOfPurchase
}

// GetTypeOfPurchaseOk returns a tuple with the TypeOfPurchase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetTypeOfPurchaseOk() (*string, bool) {
	if o == nil || IsNil(o.TypeOfPurchase) {
		return nil, false
	}
	return o.TypeOfPurchase, true
}

// HasTypeOfPurchase returns a boolean if a field has been set.
func (o *Fleets) HasTypeOfPurchase() bool {
	if o != nil && !IsNil(o.TypeOfPurchase) {
		return true
	}

	return false
}

// SetTypeOfPurchase gets a reference to the given string and assigns it to the TypeOfPurchase field.
func (o *Fleets) SetTypeOfPurchase(v string) {
	o.TypeOfPurchase = &v
}

// GetVatTaxRate returns the VatTaxRate field value if set, zero value otherwise.
func (o *Fleets) GetVatTaxRate() float32 {
	if o == nil || IsNil(o.VatTaxRate) {
		var ret float32
		return ret
	}
	return *o.VatTaxRate
}

// GetVatTaxRateOk returns a tuple with the VatTaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetVatTaxRateOk() (*float32, bool) {
	if o == nil || IsNil(o.VatTaxRate) {
		return nil, false
	}
	return o.VatTaxRate, true
}

// HasVatTaxRate returns a boolean if a field has been set.
func (o *Fleets) HasVatTaxRate() bool {
	if o != nil && !IsNil(o.VatTaxRate) {
		return true
	}

	return false
}

// SetVatTaxRate gets a reference to the given float32 and assigns it to the VatTaxRate field.
func (o *Fleets) SetVatTaxRate(v float32) {
	o.VatTaxRate = &v
}

// GetVehicleId returns the VehicleId field value if set, zero value otherwise.
func (o *Fleets) GetVehicleId() string {
	if o == nil || IsNil(o.VehicleId) {
		var ret string
		return ret
	}
	return *o.VehicleId
}

// GetVehicleIdOk returns a tuple with the VehicleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fleets) GetVehicleIdOk() (*string, bool) {
	if o == nil || IsNil(o.VehicleId) {
		return nil, false
	}
	return o.VehicleId, true
}

// HasVehicleId returns a boolean if a field has been set.
func (o *Fleets) HasVehicleId() bool {
	if o != nil && !IsNil(o.VehicleId) {
		return true
	}

	return false
}

// SetVehicleId gets a reference to the given string and assigns it to the VehicleId field.
func (o *Fleets) SetVehicleId(v string) {
	o.VehicleId = &v
}

func (o Fleets) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Fleets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DriverId) {
		toSerialize["driver_id"] = o.DriverId
	}
	if !IsNil(o.ExpandedFuelType) {
		toSerialize["expanded_fuel_type"] = o.ExpandedFuelType
	}
	if !IsNil(o.FleetNumber) {
		toSerialize["fleet_number"] = o.FleetNumber
	}
	if !IsNil(o.FuelGrossAmount) {
		toSerialize["fuel_gross_amount"] = o.FuelGrossAmount
	}
	if !IsNil(o.FuelNetAmount) {
		toSerialize["fuel_net_amount"] = o.FuelNetAmount
	}
	if !IsNil(o.FuelProductQualifier) {
		toSerialize["fuel_product_qualifier"] = o.FuelProductQualifier
	}
	if !IsNil(o.FuelPurchaseType) {
		toSerialize["fuel_purchase_type"] = o.FuelPurchaseType
	}
	if !IsNil(o.FuelQuantity) {
		toSerialize["fuel_quantity"] = o.FuelQuantity
	}
	if !IsNil(o.FuelServiceType) {
		toSerialize["fuel_service_type"] = o.FuelServiceType
	}
	if !IsNil(o.FuelTaxAmount) {
		toSerialize["fuel_tax_amount"] = o.FuelTaxAmount
	}
	if !IsNil(o.FuelTaxExemptionStatus) {
		toSerialize["fuel_tax_exemption_status"] = o.FuelTaxExemptionStatus
	}
	if !IsNil(o.FuelType) {
		toSerialize["fuel_type"] = o.FuelType
	}
	if !IsNil(o.FuelUnitOfMeasure) {
		toSerialize["fuel_unit_of_measure"] = o.FuelUnitOfMeasure
	}
	if !IsNil(o.FuelUnitPrice) {
		toSerialize["fuel_unit_price"] = o.FuelUnitPrice
	}
	if !IsNil(o.JobNumber) {
		toSerialize["job_number"] = o.JobNumber
	}
	if !IsNil(o.NonFuelGrossAmount) {
		toSerialize["non_fuel_gross_amount"] = o.NonFuelGrossAmount
	}
	if !IsNil(o.NonFuelItemDetails) {
		toSerialize["non_fuel_item_details"] = o.NonFuelItemDetails
	}
	if !IsNil(o.NonFuelNetAmount) {
		toSerialize["non_fuel_net_amount"] = o.NonFuelNetAmount
	}
	if !IsNil(o.NonFuelTaxAmount) {
		toSerialize["non_fuel_tax_amount"] = o.NonFuelTaxAmount
	}
	if !IsNil(o.NonFuelTaxExemptionStatus) {
		toSerialize["non_fuel_tax_exemption_status"] = o.NonFuelTaxExemptionStatus
	}
	if !IsNil(o.OdometerReading) {
		toSerialize["odometer_reading"] = o.OdometerReading
	}
	if !IsNil(o.SalesTaxAmount) {
		toSerialize["sales_tax_amount"] = o.SalesTaxAmount
	}
	if !IsNil(o.ServiceType) {
		toSerialize["service_type"] = o.ServiceType
	}
	if !IsNil(o.TypeOfPurchase) {
		toSerialize["type_of_purchase"] = o.TypeOfPurchase
	}
	if !IsNil(o.VatTaxRate) {
		toSerialize["vat_tax_rate"] = o.VatTaxRate
	}
	if !IsNil(o.VehicleId) {
		toSerialize["vehicle_id"] = o.VehicleId
	}
	return toSerialize, nil
}

type NullableFleets struct {
	value *Fleets
	isSet bool
}

func (v NullableFleets) Get() *Fleets {
	return v.value
}

func (v *NullableFleets) Set(val *Fleets) {
	v.value = val
	v.isSet = true
}

func (v NullableFleets) IsSet() bool {
	return v.isSet
}

func (v *NullableFleets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFleets(val *Fleets) *NullableFleets {
	return &NullableFleets{value: val, isSet: true}
}

func (v NullableFleets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFleets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
