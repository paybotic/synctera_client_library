/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PhysicalCardResponseStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PhysicalCardResponseStatus{}

// PhysicalCardResponseStatus struct for PhysicalCardResponseStatus
type PhysicalCardResponseStatus struct {
	CardStatus CardStatus `json:"card_status"`
	// Additional details about the reason for the status change
	Memo                  *string                   `json:"memo,omitempty"`
	PendingReasons        *CardStatusPendingReasons `json:"pending_reasons,omitempty"`
	StatusReason          CardStatusReasonCode      `json:"status_reason"`
	CardFulfillmentStatus CardFulfillmentStatus     `json:"card_fulfillment_status"`
	FulfillmentDetails    *FulfillmentDetails       `json:"fulfillment_details,omitempty"`
	// This contains all shipping details as provided by the card fulfillment provider, including the tracking number. This field is deprecated. Instead, please use the fulfillment_details object, which includes a field for just the tracking number.
	// Deprecated
	TrackingNumber *string `json:"tracking_number,omitempty"`
}

type _PhysicalCardResponseStatus PhysicalCardResponseStatus

// NewPhysicalCardResponseStatus instantiates a new PhysicalCardResponseStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhysicalCardResponseStatus(cardStatus CardStatus, statusReason CardStatusReasonCode, cardFulfillmentStatus CardFulfillmentStatus) *PhysicalCardResponseStatus {
	this := PhysicalCardResponseStatus{}
	this.CardStatus = cardStatus
	this.StatusReason = statusReason
	this.CardFulfillmentStatus = cardFulfillmentStatus
	return &this
}

// NewPhysicalCardResponseStatusWithDefaults instantiates a new PhysicalCardResponseStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhysicalCardResponseStatusWithDefaults() *PhysicalCardResponseStatus {
	this := PhysicalCardResponseStatus{}
	return &this
}

// GetCardStatus returns the CardStatus field value
func (o *PhysicalCardResponseStatus) GetCardStatus() CardStatus {
	if o == nil {
		var ret CardStatus
		return ret
	}

	return o.CardStatus
}

// GetCardStatusOk returns a tuple with the CardStatus field value
// and a boolean to check if the value has been set.
func (o *PhysicalCardResponseStatus) GetCardStatusOk() (*CardStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardStatus, true
}

// SetCardStatus sets field value
func (o *PhysicalCardResponseStatus) SetCardStatus(v CardStatus) {
	o.CardStatus = v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *PhysicalCardResponseStatus) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhysicalCardResponseStatus) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *PhysicalCardResponseStatus) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *PhysicalCardResponseStatus) SetMemo(v string) {
	o.Memo = &v
}

// GetPendingReasons returns the PendingReasons field value if set, zero value otherwise.
func (o *PhysicalCardResponseStatus) GetPendingReasons() CardStatusPendingReasons {
	if o == nil || IsNil(o.PendingReasons) {
		var ret CardStatusPendingReasons
		return ret
	}
	return *o.PendingReasons
}

// GetPendingReasonsOk returns a tuple with the PendingReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhysicalCardResponseStatus) GetPendingReasonsOk() (*CardStatusPendingReasons, bool) {
	if o == nil || IsNil(o.PendingReasons) {
		return nil, false
	}
	return o.PendingReasons, true
}

// HasPendingReasons returns a boolean if a field has been set.
func (o *PhysicalCardResponseStatus) HasPendingReasons() bool {
	if o != nil && !IsNil(o.PendingReasons) {
		return true
	}

	return false
}

// SetPendingReasons gets a reference to the given CardStatusPendingReasons and assigns it to the PendingReasons field.
func (o *PhysicalCardResponseStatus) SetPendingReasons(v CardStatusPendingReasons) {
	o.PendingReasons = &v
}

// GetStatusReason returns the StatusReason field value
func (o *PhysicalCardResponseStatus) GetStatusReason() CardStatusReasonCode {
	if o == nil {
		var ret CardStatusReasonCode
		return ret
	}

	return o.StatusReason
}

// GetStatusReasonOk returns a tuple with the StatusReason field value
// and a boolean to check if the value has been set.
func (o *PhysicalCardResponseStatus) GetStatusReasonOk() (*CardStatusReasonCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusReason, true
}

// SetStatusReason sets field value
func (o *PhysicalCardResponseStatus) SetStatusReason(v CardStatusReasonCode) {
	o.StatusReason = v
}

// GetCardFulfillmentStatus returns the CardFulfillmentStatus field value
func (o *PhysicalCardResponseStatus) GetCardFulfillmentStatus() CardFulfillmentStatus {
	if o == nil {
		var ret CardFulfillmentStatus
		return ret
	}

	return o.CardFulfillmentStatus
}

// GetCardFulfillmentStatusOk returns a tuple with the CardFulfillmentStatus field value
// and a boolean to check if the value has been set.
func (o *PhysicalCardResponseStatus) GetCardFulfillmentStatusOk() (*CardFulfillmentStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardFulfillmentStatus, true
}

// SetCardFulfillmentStatus sets field value
func (o *PhysicalCardResponseStatus) SetCardFulfillmentStatus(v CardFulfillmentStatus) {
	o.CardFulfillmentStatus = v
}

// GetFulfillmentDetails returns the FulfillmentDetails field value if set, zero value otherwise.
func (o *PhysicalCardResponseStatus) GetFulfillmentDetails() FulfillmentDetails {
	if o == nil || IsNil(o.FulfillmentDetails) {
		var ret FulfillmentDetails
		return ret
	}
	return *o.FulfillmentDetails
}

// GetFulfillmentDetailsOk returns a tuple with the FulfillmentDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhysicalCardResponseStatus) GetFulfillmentDetailsOk() (*FulfillmentDetails, bool) {
	if o == nil || IsNil(o.FulfillmentDetails) {
		return nil, false
	}
	return o.FulfillmentDetails, true
}

// HasFulfillmentDetails returns a boolean if a field has been set.
func (o *PhysicalCardResponseStatus) HasFulfillmentDetails() bool {
	if o != nil && !IsNil(o.FulfillmentDetails) {
		return true
	}

	return false
}

// SetFulfillmentDetails gets a reference to the given FulfillmentDetails and assigns it to the FulfillmentDetails field.
func (o *PhysicalCardResponseStatus) SetFulfillmentDetails(v FulfillmentDetails) {
	o.FulfillmentDetails = &v
}

// GetTrackingNumber returns the TrackingNumber field value if set, zero value otherwise.
// Deprecated
func (o *PhysicalCardResponseStatus) GetTrackingNumber() string {
	if o == nil || IsNil(o.TrackingNumber) {
		var ret string
		return ret
	}
	return *o.TrackingNumber
}

// GetTrackingNumberOk returns a tuple with the TrackingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *PhysicalCardResponseStatus) GetTrackingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingNumber) {
		return nil, false
	}
	return o.TrackingNumber, true
}

// HasTrackingNumber returns a boolean if a field has been set.
func (o *PhysicalCardResponseStatus) HasTrackingNumber() bool {
	if o != nil && !IsNil(o.TrackingNumber) {
		return true
	}

	return false
}

// SetTrackingNumber gets a reference to the given string and assigns it to the TrackingNumber field.
// Deprecated
func (o *PhysicalCardResponseStatus) SetTrackingNumber(v string) {
	o.TrackingNumber = &v
}

func (o PhysicalCardResponseStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PhysicalCardResponseStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["card_status"] = o.CardStatus
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.PendingReasons) {
		toSerialize["pending_reasons"] = o.PendingReasons
	}
	toSerialize["status_reason"] = o.StatusReason
	toSerialize["card_fulfillment_status"] = o.CardFulfillmentStatus
	if !IsNil(o.FulfillmentDetails) {
		toSerialize["fulfillment_details"] = o.FulfillmentDetails
	}
	if !IsNil(o.TrackingNumber) {
		toSerialize["tracking_number"] = o.TrackingNumber
	}
	return toSerialize, nil
}

func (o *PhysicalCardResponseStatus) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"card_status",
		"status_reason",
		"card_fulfillment_status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPhysicalCardResponseStatus := _PhysicalCardResponseStatus{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPhysicalCardResponseStatus)

	if err != nil {
		return err
	}

	*o = PhysicalCardResponseStatus(varPhysicalCardResponseStatus)

	return err
}

type NullablePhysicalCardResponseStatus struct {
	value *PhysicalCardResponseStatus
	isSet bool
}

func (v NullablePhysicalCardResponseStatus) Get() *PhysicalCardResponseStatus {
	return v.value
}

func (v *NullablePhysicalCardResponseStatus) Set(val *PhysicalCardResponseStatus) {
	v.value = val
	v.isSet = true
}

func (v NullablePhysicalCardResponseStatus) IsSet() bool {
	return v.isSet
}

func (v *NullablePhysicalCardResponseStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhysicalCardResponseStatus(val *PhysicalCardResponseStatus) *NullablePhysicalCardResponseStatus {
	return &NullablePhysicalCardResponseStatus{value: val, isSet: true}
}

func (v NullablePhysicalCardResponseStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhysicalCardResponseStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
