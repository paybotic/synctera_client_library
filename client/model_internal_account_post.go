/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the InternalAccountPost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternalAccountPost{}

// InternalAccountPost struct for InternalAccountPost
type InternalAccountPost struct {
	// Generated internal account number
	AccountNumber *string              `json:"account_number,omitempty"`
	AccountType   *InternalAccountType `json:"account_type,omitempty"`
	// A list of balances for internal account based on different type
	Balances []Balance `json:"balances,omitempty"`
	// The ID of the bank account associated with this internal account. It will be auto-filled if the account type has only one matching bank account in the system.
	BankAccountId *string `json:"bank_account_id,omitempty"`
	// Bank routing number
	BankRouting *string `json:"bank_routing,omitempty"`
	// The date and time the resource was created.
	CreationTime *time.Time `json:"creation_time,omitempty"`
	// Account currency or account settlement currency. ISO 4217 alphabetic currency code.
	Currency string `json:"currency" validate:"regexp=^[A-Z]{3}$"`
	// A user provided description for the current account
	Description *string `json:"description,omitempty"`
	// What type of general ledger account this internal account represents.
	GlType *string `json:"gl_type,omitempty"`
	// Generated ID for internal account
	Id *string `json:"id,omitempty"`
	// Is a system-controlled internal account. When this field is true, this internal account will be reserved exclusively for internal use by the Synctera platform and any internal transfers to or from this internal account will be declined.
	IsSystemAcc *bool `json:"is_system_acc,omitempty"`
	// The date and time the resource was last updated.
	LastUpdatedTime      *time.Time              `json:"last_updated_time,omitempty"`
	Purpose              *InternalAccountPurpose `json:"purpose,omitempty"`
	Status               string                  `json:"status"`
	AdditionalProperties map[string]interface{}
}

type _InternalAccountPost InternalAccountPost

// NewInternalAccountPost instantiates a new InternalAccountPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalAccountPost(currency string, status string) *InternalAccountPost {
	this := InternalAccountPost{}
	this.Currency = currency
	var isSystemAcc bool = false
	this.IsSystemAcc = &isSystemAcc
	this.Status = status
	return &this
}

// NewInternalAccountPostWithDefaults instantiates a new InternalAccountPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalAccountPostWithDefaults() *InternalAccountPost {
	this := InternalAccountPost{}
	var isSystemAcc bool = false
	this.IsSystemAcc = &isSystemAcc
	return &this
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *InternalAccountPost) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalAccountPost) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *InternalAccountPost) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *InternalAccountPost) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *InternalAccountPost) GetAccountType() InternalAccountType {
	if o == nil || IsNil(o.AccountType) {
		var ret InternalAccountType
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalAccountPost) GetAccountTypeOk() (*InternalAccountType, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *InternalAccountPost) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given InternalAccountType and assigns it to the AccountType field.
func (o *InternalAccountPost) SetAccountType(v InternalAccountType) {
	o.AccountType = &v
}

// GetBalances returns the Balances field value if set, zero value otherwise.
func (o *InternalAccountPost) GetBalances() []Balance {
	if o == nil || IsNil(o.Balances) {
		var ret []Balance
		return ret
	}
	return o.Balances
}

// GetBalancesOk returns a tuple with the Balances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalAccountPost) GetBalancesOk() ([]Balance, bool) {
	if o == nil || IsNil(o.Balances) {
		return nil, false
	}
	return o.Balances, true
}

// HasBalances returns a boolean if a field has been set.
func (o *InternalAccountPost) HasBalances() bool {
	if o != nil && !IsNil(o.Balances) {
		return true
	}

	return false
}

// SetBalances gets a reference to the given []Balance and assigns it to the Balances field.
func (o *InternalAccountPost) SetBalances(v []Balance) {
	o.Balances = v
}

// GetBankAccountId returns the BankAccountId field value if set, zero value otherwise.
func (o *InternalAccountPost) GetBankAccountId() string {
	if o == nil || IsNil(o.BankAccountId) {
		var ret string
		return ret
	}
	return *o.BankAccountId
}

// GetBankAccountIdOk returns a tuple with the BankAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalAccountPost) GetBankAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.BankAccountId) {
		return nil, false
	}
	return o.BankAccountId, true
}

// HasBankAccountId returns a boolean if a field has been set.
func (o *InternalAccountPost) HasBankAccountId() bool {
	if o != nil && !IsNil(o.BankAccountId) {
		return true
	}

	return false
}

// SetBankAccountId gets a reference to the given string and assigns it to the BankAccountId field.
func (o *InternalAccountPost) SetBankAccountId(v string) {
	o.BankAccountId = &v
}

// GetBankRouting returns the BankRouting field value if set, zero value otherwise.
func (o *InternalAccountPost) GetBankRouting() string {
	if o == nil || IsNil(o.BankRouting) {
		var ret string
		return ret
	}
	return *o.BankRouting
}

// GetBankRoutingOk returns a tuple with the BankRouting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalAccountPost) GetBankRoutingOk() (*string, bool) {
	if o == nil || IsNil(o.BankRouting) {
		return nil, false
	}
	return o.BankRouting, true
}

// HasBankRouting returns a boolean if a field has been set.
func (o *InternalAccountPost) HasBankRouting() bool {
	if o != nil && !IsNil(o.BankRouting) {
		return true
	}

	return false
}

// SetBankRouting gets a reference to the given string and assigns it to the BankRouting field.
func (o *InternalAccountPost) SetBankRouting(v string) {
	o.BankRouting = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *InternalAccountPost) GetCreationTime() time.Time {
	if o == nil || IsNil(o.CreationTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalAccountPost) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *InternalAccountPost) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *InternalAccountPost) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetCurrency returns the Currency field value
func (o *InternalAccountPost) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *InternalAccountPost) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *InternalAccountPost) SetCurrency(v string) {
	o.Currency = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InternalAccountPost) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalAccountPost) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InternalAccountPost) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InternalAccountPost) SetDescription(v string) {
	o.Description = &v
}

// GetGlType returns the GlType field value if set, zero value otherwise.
func (o *InternalAccountPost) GetGlType() string {
	if o == nil || IsNil(o.GlType) {
		var ret string
		return ret
	}
	return *o.GlType
}

// GetGlTypeOk returns a tuple with the GlType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalAccountPost) GetGlTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GlType) {
		return nil, false
	}
	return o.GlType, true
}

// HasGlType returns a boolean if a field has been set.
func (o *InternalAccountPost) HasGlType() bool {
	if o != nil && !IsNil(o.GlType) {
		return true
	}

	return false
}

// SetGlType gets a reference to the given string and assigns it to the GlType field.
func (o *InternalAccountPost) SetGlType(v string) {
	o.GlType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InternalAccountPost) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalAccountPost) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InternalAccountPost) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InternalAccountPost) SetId(v string) {
	o.Id = &v
}

// GetIsSystemAcc returns the IsSystemAcc field value if set, zero value otherwise.
func (o *InternalAccountPost) GetIsSystemAcc() bool {
	if o == nil || IsNil(o.IsSystemAcc) {
		var ret bool
		return ret
	}
	return *o.IsSystemAcc
}

// GetIsSystemAccOk returns a tuple with the IsSystemAcc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalAccountPost) GetIsSystemAccOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSystemAcc) {
		return nil, false
	}
	return o.IsSystemAcc, true
}

// HasIsSystemAcc returns a boolean if a field has been set.
func (o *InternalAccountPost) HasIsSystemAcc() bool {
	if o != nil && !IsNil(o.IsSystemAcc) {
		return true
	}

	return false
}

// SetIsSystemAcc gets a reference to the given bool and assigns it to the IsSystemAcc field.
func (o *InternalAccountPost) SetIsSystemAcc(v bool) {
	o.IsSystemAcc = &v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value if set, zero value otherwise.
func (o *InternalAccountPost) GetLastUpdatedTime() time.Time {
	if o == nil || IsNil(o.LastUpdatedTime) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalAccountPost) GetLastUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdatedTime) {
		return nil, false
	}
	return o.LastUpdatedTime, true
}

// HasLastUpdatedTime returns a boolean if a field has been set.
func (o *InternalAccountPost) HasLastUpdatedTime() bool {
	if o != nil && !IsNil(o.LastUpdatedTime) {
		return true
	}

	return false
}

// SetLastUpdatedTime gets a reference to the given time.Time and assigns it to the LastUpdatedTime field.
func (o *InternalAccountPost) SetLastUpdatedTime(v time.Time) {
	o.LastUpdatedTime = &v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *InternalAccountPost) GetPurpose() InternalAccountPurpose {
	if o == nil || IsNil(o.Purpose) {
		var ret InternalAccountPurpose
		return ret
	}
	return *o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalAccountPost) GetPurposeOk() (*InternalAccountPurpose, bool) {
	if o == nil || IsNil(o.Purpose) {
		return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *InternalAccountPost) HasPurpose() bool {
	if o != nil && !IsNil(o.Purpose) {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given InternalAccountPurpose and assigns it to the Purpose field.
func (o *InternalAccountPost) SetPurpose(v InternalAccountPurpose) {
	o.Purpose = &v
}

// GetStatus returns the Status field value
func (o *InternalAccountPost) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InternalAccountPost) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InternalAccountPost) SetStatus(v string) {
	o.Status = v
}

func (o InternalAccountPost) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternalAccountPost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountNumber) {
		toSerialize["account_number"] = o.AccountNumber
	}
	if !IsNil(o.AccountType) {
		toSerialize["account_type"] = o.AccountType
	}
	if !IsNil(o.Balances) {
		toSerialize["balances"] = o.Balances
	}
	if !IsNil(o.BankAccountId) {
		toSerialize["bank_account_id"] = o.BankAccountId
	}
	if !IsNil(o.BankRouting) {
		toSerialize["bank_routing"] = o.BankRouting
	}
	if !IsNil(o.CreationTime) {
		toSerialize["creation_time"] = o.CreationTime
	}
	toSerialize["currency"] = o.Currency
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.GlType) {
		toSerialize["gl_type"] = o.GlType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsSystemAcc) {
		toSerialize["is_system_acc"] = o.IsSystemAcc
	}
	if !IsNil(o.LastUpdatedTime) {
		toSerialize["last_updated_time"] = o.LastUpdatedTime
	}
	if !IsNil(o.Purpose) {
		toSerialize["purpose"] = o.Purpose
	}
	toSerialize["status"] = o.Status

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InternalAccountPost) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"currency",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInternalAccountPost := _InternalAccountPost{}

	err = json.Unmarshal(data, &varInternalAccountPost)

	if err != nil {
		return err
	}

	*o = InternalAccountPost(varInternalAccountPost)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account_number")
		delete(additionalProperties, "account_type")
		delete(additionalProperties, "balances")
		delete(additionalProperties, "bank_account_id")
		delete(additionalProperties, "bank_routing")
		delete(additionalProperties, "creation_time")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "description")
		delete(additionalProperties, "gl_type")
		delete(additionalProperties, "id")
		delete(additionalProperties, "is_system_acc")
		delete(additionalProperties, "last_updated_time")
		delete(additionalProperties, "purpose")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInternalAccountPost struct {
	value *InternalAccountPost
	isSet bool
}

func (v NullableInternalAccountPost) Get() *InternalAccountPost {
	return v.value
}

func (v *NullableInternalAccountPost) Set(val *InternalAccountPost) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalAccountPost) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalAccountPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalAccountPost(val *InternalAccountPost) *NullableInternalAccountPost {
	return &NullableInternalAccountPost{value: val, isSet: true}
}

func (v NullableInternalAccountPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalAccountPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
