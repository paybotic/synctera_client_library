/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.150.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WireRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WireRequest{}

// WireRequest struct for WireRequest
type WireRequest struct {
	// Transfer amount in cents ($100 would be 10000)
	Amount int32 `json:"amount"`
	// Instructions intended for the financial institutions that are processing the wire.
	BankMessage *string `json:"bank_message,omitempty"`
	// 3-character currency code
	Currency string `json:"currency"`
	// The customer UUID representing the person initiating the Wire transfer
	CustomerId string `json:"customer_id"`
	// Additional transfer metadata structured as key-value pairs
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Sender account ID
	OriginatingAccountId string `json:"originating_account_id"`
	// The external account uuid representing the recipient of the wire.
	ReceivingAccountId string `json:"receiving_account_id"`
	// Information from the originator to the beneficiary (recipient).
	RecipientMessage string `json:"recipient_message"`
}

type _WireRequest WireRequest

// NewWireRequest instantiates a new WireRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWireRequest(amount int32, currency string, customerId string, originatingAccountId string, receivingAccountId string, recipientMessage string) *WireRequest {
	this := WireRequest{}
	this.Amount = amount
	this.Currency = currency
	this.CustomerId = customerId
	this.OriginatingAccountId = originatingAccountId
	this.ReceivingAccountId = receivingAccountId
	this.RecipientMessage = recipientMessage
	return &this
}

// NewWireRequestWithDefaults instantiates a new WireRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWireRequestWithDefaults() *WireRequest {
	this := WireRequest{}
	return &this
}

// GetAmount returns the Amount field value
func (o *WireRequest) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *WireRequest) GetAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *WireRequest) SetAmount(v int32) {
	o.Amount = v
}

// GetBankMessage returns the BankMessage field value if set, zero value otherwise.
func (o *WireRequest) GetBankMessage() string {
	if o == nil || IsNil(o.BankMessage) {
		var ret string
		return ret
	}
	return *o.BankMessage
}

// GetBankMessageOk returns a tuple with the BankMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireRequest) GetBankMessageOk() (*string, bool) {
	if o == nil || IsNil(o.BankMessage) {
		return nil, false
	}
	return o.BankMessage, true
}

// HasBankMessage returns a boolean if a field has been set.
func (o *WireRequest) HasBankMessage() bool {
	if o != nil && !IsNil(o.BankMessage) {
		return true
	}

	return false
}

// SetBankMessage gets a reference to the given string and assigns it to the BankMessage field.
func (o *WireRequest) SetBankMessage(v string) {
	o.BankMessage = &v
}

// GetCurrency returns the Currency field value
func (o *WireRequest) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *WireRequest) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *WireRequest) SetCurrency(v string) {
	o.Currency = v
}

// GetCustomerId returns the CustomerId field value
func (o *WireRequest) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *WireRequest) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *WireRequest) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *WireRequest) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *WireRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *WireRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetOriginatingAccountId returns the OriginatingAccountId field value
func (o *WireRequest) GetOriginatingAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginatingAccountId
}

// GetOriginatingAccountIdOk returns a tuple with the OriginatingAccountId field value
// and a boolean to check if the value has been set.
func (o *WireRequest) GetOriginatingAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginatingAccountId, true
}

// SetOriginatingAccountId sets field value
func (o *WireRequest) SetOriginatingAccountId(v string) {
	o.OriginatingAccountId = v
}

// GetReceivingAccountId returns the ReceivingAccountId field value
func (o *WireRequest) GetReceivingAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReceivingAccountId
}

// GetReceivingAccountIdOk returns a tuple with the ReceivingAccountId field value
// and a boolean to check if the value has been set.
func (o *WireRequest) GetReceivingAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceivingAccountId, true
}

// SetReceivingAccountId sets field value
func (o *WireRequest) SetReceivingAccountId(v string) {
	o.ReceivingAccountId = v
}

// GetRecipientMessage returns the RecipientMessage field value
func (o *WireRequest) GetRecipientMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecipientMessage
}

// GetRecipientMessageOk returns a tuple with the RecipientMessage field value
// and a boolean to check if the value has been set.
func (o *WireRequest) GetRecipientMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecipientMessage, true
}

// SetRecipientMessage sets field value
func (o *WireRequest) SetRecipientMessage(v string) {
	o.RecipientMessage = v
}

func (o WireRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WireRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	if !IsNil(o.BankMessage) {
		toSerialize["bank_message"] = o.BankMessage
	}
	toSerialize["currency"] = o.Currency
	toSerialize["customer_id"] = o.CustomerId
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["originating_account_id"] = o.OriginatingAccountId
	toSerialize["receiving_account_id"] = o.ReceivingAccountId
	toSerialize["recipient_message"] = o.RecipientMessage
	return toSerialize, nil
}

func (o *WireRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"currency",
		"customer_id",
		"originating_account_id",
		"receiving_account_id",
		"recipient_message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWireRequest := _WireRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWireRequest)

	if err != nil {
		return err
	}

	*o = WireRequest(varWireRequest)

	return err
}

type NullableWireRequest struct {
	value *WireRequest
	isSet bool
}

func (v NullableWireRequest) Get() *WireRequest {
	return v.value
}

func (v *NullableWireRequest) Set(val *WireRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWireRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWireRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWireRequest(val *WireRequest) *NullableWireRequest {
	return &NullableWireRequest{value: val, isSet: true}
}

func (v NullableWireRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWireRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
