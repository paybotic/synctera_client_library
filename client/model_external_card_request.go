/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
	"fmt"
)

// checks if the ExternalCardRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalCardRequest{}

// ExternalCardRequest struct for ExternalCardRequest
type ExternalCardRequest struct {
	// The unique identifier of a business
	BusinessId *string `json:"business_id,omitempty"`
	// The unique identifier of a customer
	CustomerId string `json:"customer_id"`
	// The cardholder name
	Name string `json:"name"`
	// The token that was returned via tokenization iframe
	Token                string `json:"token"`
	AdditionalProperties map[string]interface{}
}

type _ExternalCardRequest ExternalCardRequest

// NewExternalCardRequest instantiates a new ExternalCardRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalCardRequest(customerId string, name string, token string) *ExternalCardRequest {
	this := ExternalCardRequest{}
	this.CustomerId = customerId
	this.Name = name
	this.Token = token
	return &this
}

// NewExternalCardRequestWithDefaults instantiates a new ExternalCardRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalCardRequestWithDefaults() *ExternalCardRequest {
	this := ExternalCardRequest{}
	return &this
}

// GetBusinessId returns the BusinessId field value if set, zero value otherwise.
func (o *ExternalCardRequest) GetBusinessId() string {
	if o == nil || IsNil(o.BusinessId) {
		var ret string
		return ret
	}
	return *o.BusinessId
}

// GetBusinessIdOk returns a tuple with the BusinessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalCardRequest) GetBusinessIdOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessId) {
		return nil, false
	}
	return o.BusinessId, true
}

// HasBusinessId returns a boolean if a field has been set.
func (o *ExternalCardRequest) HasBusinessId() bool {
	if o != nil && !IsNil(o.BusinessId) {
		return true
	}

	return false
}

// SetBusinessId gets a reference to the given string and assigns it to the BusinessId field.
func (o *ExternalCardRequest) SetBusinessId(v string) {
	o.BusinessId = &v
}

// GetCustomerId returns the CustomerId field value
func (o *ExternalCardRequest) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *ExternalCardRequest) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *ExternalCardRequest) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetName returns the Name field value
func (o *ExternalCardRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ExternalCardRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ExternalCardRequest) SetName(v string) {
	o.Name = v
}

// GetToken returns the Token field value
func (o *ExternalCardRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ExternalCardRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ExternalCardRequest) SetToken(v string) {
	o.Token = v
}

func (o ExternalCardRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalCardRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BusinessId) {
		toSerialize["business_id"] = o.BusinessId
	}
	toSerialize["customer_id"] = o.CustomerId
	toSerialize["name"] = o.Name
	toSerialize["token"] = o.Token

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExternalCardRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customer_id",
		"name",
		"token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalCardRequest := _ExternalCardRequest{}

	err = json.Unmarshal(data, &varExternalCardRequest)

	if err != nil {
		return err
	}

	*o = ExternalCardRequest(varExternalCardRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "business_id")
		delete(additionalProperties, "customer_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExternalCardRequest struct {
	value *ExternalCardRequest
	isSet bool
}

func (v NullableExternalCardRequest) Get() *ExternalCardRequest {
	return v.value
}

func (v *NullableExternalCardRequest) Set(val *ExternalCardRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalCardRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalCardRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalCardRequest(val *ExternalCardRequest) *NullableExternalCardRequest {
	return &NullableExternalCardRequest{value: val, isSet: true}
}

func (v NullableExternalCardRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalCardRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
