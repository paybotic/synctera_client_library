/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// checks if the DepositRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DepositRequest{}

// DepositRequest User provided request to submit an RDC
type DepositRequest struct {
	// The ID of the account
	AccountId *string `json:"account_id,omitempty"`
	// ID of the uploaded image of the back of the check
	BackImageId *string `json:"back_image_id,omitempty"`
	// Unique ID for the business. Exactly one of `business_id` or `person_id` must be set.
	BusinessId *string `json:"business_id,omitempty"`
	// Amount on check in ISO 4217 minor currency units
	CheckAmount *int32 `json:"check_amount,omitempty"`
	// ISO 4217 currency code for the deposit amount
	DepositCurrency *string `json:"deposit_currency,omitempty"`
	// ID of the uploaded image of the front of the check
	FrontImageId *string `json:"front_image_id,omitempty"`
	// Optional field to store additional information about the resource. Intended to be used by the integrator to store non-sensitive data.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Unique ID for the person. Exactly one of `person_id` or `business_id` must be set.
	PersonId             *string `json:"person_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DepositRequest DepositRequest

// NewDepositRequest instantiates a new DepositRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDepositRequest() *DepositRequest {
	this := DepositRequest{}
	return &this
}

// NewDepositRequestWithDefaults instantiates a new DepositRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepositRequestWithDefaults() *DepositRequest {
	this := DepositRequest{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *DepositRequest) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositRequest) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *DepositRequest) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *DepositRequest) SetAccountId(v string) {
	o.AccountId = &v
}

// GetBackImageId returns the BackImageId field value if set, zero value otherwise.
func (o *DepositRequest) GetBackImageId() string {
	if o == nil || IsNil(o.BackImageId) {
		var ret string
		return ret
	}
	return *o.BackImageId
}

// GetBackImageIdOk returns a tuple with the BackImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositRequest) GetBackImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.BackImageId) {
		return nil, false
	}
	return o.BackImageId, true
}

// HasBackImageId returns a boolean if a field has been set.
func (o *DepositRequest) HasBackImageId() bool {
	if o != nil && !IsNil(o.BackImageId) {
		return true
	}

	return false
}

// SetBackImageId gets a reference to the given string and assigns it to the BackImageId field.
func (o *DepositRequest) SetBackImageId(v string) {
	o.BackImageId = &v
}

// GetBusinessId returns the BusinessId field value if set, zero value otherwise.
func (o *DepositRequest) GetBusinessId() string {
	if o == nil || IsNil(o.BusinessId) {
		var ret string
		return ret
	}
	return *o.BusinessId
}

// GetBusinessIdOk returns a tuple with the BusinessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositRequest) GetBusinessIdOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessId) {
		return nil, false
	}
	return o.BusinessId, true
}

// HasBusinessId returns a boolean if a field has been set.
func (o *DepositRequest) HasBusinessId() bool {
	if o != nil && !IsNil(o.BusinessId) {
		return true
	}

	return false
}

// SetBusinessId gets a reference to the given string and assigns it to the BusinessId field.
func (o *DepositRequest) SetBusinessId(v string) {
	o.BusinessId = &v
}

// GetCheckAmount returns the CheckAmount field value if set, zero value otherwise.
func (o *DepositRequest) GetCheckAmount() int32 {
	if o == nil || IsNil(o.CheckAmount) {
		var ret int32
		return ret
	}
	return *o.CheckAmount
}

// GetCheckAmountOk returns a tuple with the CheckAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositRequest) GetCheckAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.CheckAmount) {
		return nil, false
	}
	return o.CheckAmount, true
}

// HasCheckAmount returns a boolean if a field has been set.
func (o *DepositRequest) HasCheckAmount() bool {
	if o != nil && !IsNil(o.CheckAmount) {
		return true
	}

	return false
}

// SetCheckAmount gets a reference to the given int32 and assigns it to the CheckAmount field.
func (o *DepositRequest) SetCheckAmount(v int32) {
	o.CheckAmount = &v
}

// GetDepositCurrency returns the DepositCurrency field value if set, zero value otherwise.
func (o *DepositRequest) GetDepositCurrency() string {
	if o == nil || IsNil(o.DepositCurrency) {
		var ret string
		return ret
	}
	return *o.DepositCurrency
}

// GetDepositCurrencyOk returns a tuple with the DepositCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositRequest) GetDepositCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.DepositCurrency) {
		return nil, false
	}
	return o.DepositCurrency, true
}

// HasDepositCurrency returns a boolean if a field has been set.
func (o *DepositRequest) HasDepositCurrency() bool {
	if o != nil && !IsNil(o.DepositCurrency) {
		return true
	}

	return false
}

// SetDepositCurrency gets a reference to the given string and assigns it to the DepositCurrency field.
func (o *DepositRequest) SetDepositCurrency(v string) {
	o.DepositCurrency = &v
}

// GetFrontImageId returns the FrontImageId field value if set, zero value otherwise.
func (o *DepositRequest) GetFrontImageId() string {
	if o == nil || IsNil(o.FrontImageId) {
		var ret string
		return ret
	}
	return *o.FrontImageId
}

// GetFrontImageIdOk returns a tuple with the FrontImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositRequest) GetFrontImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.FrontImageId) {
		return nil, false
	}
	return o.FrontImageId, true
}

// HasFrontImageId returns a boolean if a field has been set.
func (o *DepositRequest) HasFrontImageId() bool {
	if o != nil && !IsNil(o.FrontImageId) {
		return true
	}

	return false
}

// SetFrontImageId gets a reference to the given string and assigns it to the FrontImageId field.
func (o *DepositRequest) SetFrontImageId(v string) {
	o.FrontImageId = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DepositRequest) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DepositRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *DepositRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetPersonId returns the PersonId field value if set, zero value otherwise.
func (o *DepositRequest) GetPersonId() string {
	if o == nil || IsNil(o.PersonId) {
		var ret string
		return ret
	}
	return *o.PersonId
}

// GetPersonIdOk returns a tuple with the PersonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DepositRequest) GetPersonIdOk() (*string, bool) {
	if o == nil || IsNil(o.PersonId) {
		return nil, false
	}
	return o.PersonId, true
}

// HasPersonId returns a boolean if a field has been set.
func (o *DepositRequest) HasPersonId() bool {
	if o != nil && !IsNil(o.PersonId) {
		return true
	}

	return false
}

// SetPersonId gets a reference to the given string and assigns it to the PersonId field.
func (o *DepositRequest) SetPersonId(v string) {
	o.PersonId = &v
}

func (o DepositRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DepositRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.BackImageId) {
		toSerialize["back_image_id"] = o.BackImageId
	}
	if !IsNil(o.BusinessId) {
		toSerialize["business_id"] = o.BusinessId
	}
	if !IsNil(o.CheckAmount) {
		toSerialize["check_amount"] = o.CheckAmount
	}
	if !IsNil(o.DepositCurrency) {
		toSerialize["deposit_currency"] = o.DepositCurrency
	}
	if !IsNil(o.FrontImageId) {
		toSerialize["front_image_id"] = o.FrontImageId
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.PersonId) {
		toSerialize["person_id"] = o.PersonId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DepositRequest) UnmarshalJSON(data []byte) (err error) {
	varDepositRequest := _DepositRequest{}

	err = json.Unmarshal(data, &varDepositRequest)

	if err != nil {
		return err
	}

	*o = DepositRequest(varDepositRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "back_image_id")
		delete(additionalProperties, "business_id")
		delete(additionalProperties, "check_amount")
		delete(additionalProperties, "deposit_currency")
		delete(additionalProperties, "front_image_id")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "person_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDepositRequest struct {
	value *DepositRequest
	isSet bool
}

func (v NullableDepositRequest) Get() *DepositRequest {
	return v.value
}

func (v *NullableDepositRequest) Set(val *DepositRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDepositRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDepositRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDepositRequest(val *DepositRequest) *NullableDepositRequest {
	return &NullableDepositRequest{value: val, isSet: true}
}

func (v NullableDepositRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDepositRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
