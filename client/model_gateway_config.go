/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the GatewayConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayConfig{}

// GatewayConfig Represents a Gateway Config Object
type GatewayConfig struct {
	// Time when Gateway Config object was created
	Created *time.Time `json:"created,omitempty"`
	// Optional parameter that allows to configure custom http headers for the Auth request to Gateway URL if needed
	CustomHeaders *map[string][]string `json:"custom_headers,omitempty"`
	// Indicates if the Gateway Config is active for Auth Flow for the current Fintech (Tenant)
	Disabled *bool `json:"disabled,omitempty"`
	// Identifier of the Gateway Config object
	Id *string `json:"id,omitempty"`
	// Shows maximum amount of time in milliseconds that we will wait for the response from Gateway URL Auth request
	MaxWaitMs *int32 `json:"max_wait_ms,omitempty"`
	// The id of the tenant containing the resource. This is relevant for Fintechs that have multiple workspaces.
	Tenant string `json:"tenant"`
	// Time when Gateway Config object was updated
	Updated *time.Time `json:"updated,omitempty"`
	// The URL address which will be used for the ACH in Auth Flow requests to get authorization from the fintech to process the transaction
	Url *string `json:"url,omitempty"`
}

type _GatewayConfig GatewayConfig

// NewGatewayConfig instantiates a new GatewayConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayConfig(tenant string) *GatewayConfig {
	this := GatewayConfig{}
	var disabled bool = false
	this.Disabled = &disabled
	var maxWaitMs int32 = 1500
	this.MaxWaitMs = &maxWaitMs
	this.Tenant = tenant
	return &this
}

// NewGatewayConfigWithDefaults instantiates a new GatewayConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayConfigWithDefaults() *GatewayConfig {
	this := GatewayConfig{}
	var disabled bool = false
	this.Disabled = &disabled
	var maxWaitMs int32 = 1500
	this.MaxWaitMs = &maxWaitMs
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *GatewayConfig) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayConfig) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *GatewayConfig) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *GatewayConfig) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCustomHeaders returns the CustomHeaders field value if set, zero value otherwise.
func (o *GatewayConfig) GetCustomHeaders() map[string][]string {
	if o == nil || IsNil(o.CustomHeaders) {
		var ret map[string][]string
		return ret
	}
	return *o.CustomHeaders
}

// GetCustomHeadersOk returns a tuple with the CustomHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayConfig) GetCustomHeadersOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.CustomHeaders) {
		return nil, false
	}
	return o.CustomHeaders, true
}

// HasCustomHeaders returns a boolean if a field has been set.
func (o *GatewayConfig) HasCustomHeaders() bool {
	if o != nil && !IsNil(o.CustomHeaders) {
		return true
	}

	return false
}

// SetCustomHeaders gets a reference to the given map[string][]string and assigns it to the CustomHeaders field.
func (o *GatewayConfig) SetCustomHeaders(v map[string][]string) {
	o.CustomHeaders = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *GatewayConfig) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayConfig) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *GatewayConfig) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *GatewayConfig) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GatewayConfig) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayConfig) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GatewayConfig) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GatewayConfig) SetId(v string) {
	o.Id = &v
}

// GetMaxWaitMs returns the MaxWaitMs field value if set, zero value otherwise.
func (o *GatewayConfig) GetMaxWaitMs() int32 {
	if o == nil || IsNil(o.MaxWaitMs) {
		var ret int32
		return ret
	}
	return *o.MaxWaitMs
}

// GetMaxWaitMsOk returns a tuple with the MaxWaitMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayConfig) GetMaxWaitMsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxWaitMs) {
		return nil, false
	}
	return o.MaxWaitMs, true
}

// HasMaxWaitMs returns a boolean if a field has been set.
func (o *GatewayConfig) HasMaxWaitMs() bool {
	if o != nil && !IsNil(o.MaxWaitMs) {
		return true
	}

	return false
}

// SetMaxWaitMs gets a reference to the given int32 and assigns it to the MaxWaitMs field.
func (o *GatewayConfig) SetMaxWaitMs(v int32) {
	o.MaxWaitMs = &v
}

// GetTenant returns the Tenant field value
func (o *GatewayConfig) GetTenant() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value
// and a boolean to check if the value has been set.
func (o *GatewayConfig) GetTenantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tenant, true
}

// SetTenant sets field value
func (o *GatewayConfig) SetTenant(v string) {
	o.Tenant = v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *GatewayConfig) GetUpdated() time.Time {
	if o == nil || IsNil(o.Updated) {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayConfig) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Updated) {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *GatewayConfig) HasUpdated() bool {
	if o != nil && !IsNil(o.Updated) {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *GatewayConfig) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *GatewayConfig) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayConfig) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *GatewayConfig) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *GatewayConfig) SetUrl(v string) {
	o.Url = &v
}

func (o GatewayConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CustomHeaders) {
		toSerialize["custom_headers"] = o.CustomHeaders
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MaxWaitMs) {
		toSerialize["max_wait_ms"] = o.MaxWaitMs
	}
	toSerialize["tenant"] = o.Tenant
	if !IsNil(o.Updated) {
		toSerialize["updated"] = o.Updated
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

func (o *GatewayConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenant",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGatewayConfig := _GatewayConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGatewayConfig)

	if err != nil {
		return err
	}

	*o = GatewayConfig(varGatewayConfig)

	return err
}

type NullableGatewayConfig struct {
	value *GatewayConfig
	isSet bool
}

func (v NullableGatewayConfig) Get() *GatewayConfig {
	return v.value
}

func (v *NullableGatewayConfig) Set(val *GatewayConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayConfig(val *GatewayConfig) *NullableGatewayConfig {
	return &NullableGatewayConfig{value: val, isSet: true}
}

func (v NullableGatewayConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
