/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.150.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// checks if the IncomingWirePatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncomingWirePatch{}

// IncomingWirePatch Patch object for incoming wire
type IncomingWirePatch struct {
	ReturnData *ReturnData1 `json:"return_data,omitempty"`
}

// NewIncomingWirePatch instantiates a new IncomingWirePatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncomingWirePatch() *IncomingWirePatch {
	this := IncomingWirePatch{}
	return &this
}

// NewIncomingWirePatchWithDefaults instantiates a new IncomingWirePatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncomingWirePatchWithDefaults() *IncomingWirePatch {
	this := IncomingWirePatch{}
	return &this
}

// GetReturnData returns the ReturnData field value if set, zero value otherwise.
func (o *IncomingWirePatch) GetReturnData() ReturnData1 {
	if o == nil || IsNil(o.ReturnData) {
		var ret ReturnData1
		return ret
	}
	return *o.ReturnData
}

// GetReturnDataOk returns a tuple with the ReturnData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingWirePatch) GetReturnDataOk() (*ReturnData1, bool) {
	if o == nil || IsNil(o.ReturnData) {
		return nil, false
	}
	return o.ReturnData, true
}

// HasReturnData returns a boolean if a field has been set.
func (o *IncomingWirePatch) HasReturnData() bool {
	if o != nil && !IsNil(o.ReturnData) {
		return true
	}

	return false
}

// SetReturnData gets a reference to the given ReturnData1 and assigns it to the ReturnData field.
func (o *IncomingWirePatch) SetReturnData(v ReturnData1) {
	o.ReturnData = &v
}

func (o IncomingWirePatch) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncomingWirePatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReturnData) {
		toSerialize["return_data"] = o.ReturnData
	}
	return toSerialize, nil
}

type NullableIncomingWirePatch struct {
	value *IncomingWirePatch
	isSet bool
}

func (v NullableIncomingWirePatch) Get() *IncomingWirePatch {
	return v.value
}

func (v *NullableIncomingWirePatch) Set(val *IncomingWirePatch) {
	v.value = val
	v.isSet = true
}

func (v NullableIncomingWirePatch) IsSet() bool {
	return v.isSet
}

func (v *NullableIncomingWirePatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncomingWirePatch(val *IncomingWirePatch) *NullableIncomingWirePatch {
	return &NullableIncomingWirePatch{value: val, isSet: true}
}

func (v NullableIncomingWirePatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncomingWirePatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
