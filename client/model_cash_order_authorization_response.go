/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
	"fmt"
)

// checks if the CashOrderAuthorizationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CashOrderAuthorizationResponse{}

// CashOrderAuthorizationResponse struct for CashOrderAuthorizationResponse
type CashOrderAuthorizationResponse struct {
	// Transfer amount in cents
	Amount            int64                 `json:"amount"`
	AuthorizationType CashAuthorizationType `json:"authorization_type"`
	// The UUID of the Synctera account resource that is the destination of the transfer.
	DestinationAccountId string `json:"destination_account_id"`
	// The date the cash order was placed with cash distribution provider
	OrderDate string `json:"order_date"`
	// The account number of the client business the cash order is for. Known as \"Location ID\" in the cash order CSV files.
	AccountNumber string `json:"account_number"`
	// The name of the client business the cash order is for.
	ClientName string `json:"client_name"`
	// ID of the hold created for this authorization
	HoldId string `json:"hold_id"`
	// ID of the transfer
	Id string `json:"id"`
	// The UUID of the Synctera account resource originating the transfer.
	OriginatingAccountId string `json:"originating_account_id"`
	Status               string `json:"status"`
	// The id of the tenant containing the resource. This is relevant for Fintechs that have multiple workspaces.
	Tenant               string `json:"tenant"`
	AdditionalProperties map[string]interface{}
}

type _CashOrderAuthorizationResponse CashOrderAuthorizationResponse

// NewCashOrderAuthorizationResponse instantiates a new CashOrderAuthorizationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCashOrderAuthorizationResponse(amount int64, authorizationType CashAuthorizationType, destinationAccountId string, orderDate string, accountNumber string, clientName string, holdId string, id string, originatingAccountId string, status string, tenant string) *CashOrderAuthorizationResponse {
	this := CashOrderAuthorizationResponse{}
	this.Amount = amount
	this.AuthorizationType = authorizationType
	this.DestinationAccountId = destinationAccountId
	this.OrderDate = orderDate
	this.AccountNumber = accountNumber
	this.ClientName = clientName
	this.HoldId = holdId
	this.Id = id
	this.OriginatingAccountId = originatingAccountId
	this.Status = status
	this.Tenant = tenant
	return &this
}

// NewCashOrderAuthorizationResponseWithDefaults instantiates a new CashOrderAuthorizationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCashOrderAuthorizationResponseWithDefaults() *CashOrderAuthorizationResponse {
	this := CashOrderAuthorizationResponse{}
	return &this
}

// GetAmount returns the Amount field value
func (o *CashOrderAuthorizationResponse) GetAmount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CashOrderAuthorizationResponse) GetAmountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CashOrderAuthorizationResponse) SetAmount(v int64) {
	o.Amount = v
}

// GetAuthorizationType returns the AuthorizationType field value
func (o *CashOrderAuthorizationResponse) GetAuthorizationType() CashAuthorizationType {
	if o == nil {
		var ret CashAuthorizationType
		return ret
	}

	return o.AuthorizationType
}

// GetAuthorizationTypeOk returns a tuple with the AuthorizationType field value
// and a boolean to check if the value has been set.
func (o *CashOrderAuthorizationResponse) GetAuthorizationTypeOk() (*CashAuthorizationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthorizationType, true
}

// SetAuthorizationType sets field value
func (o *CashOrderAuthorizationResponse) SetAuthorizationType(v CashAuthorizationType) {
	o.AuthorizationType = v
}

// GetDestinationAccountId returns the DestinationAccountId field value
func (o *CashOrderAuthorizationResponse) GetDestinationAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationAccountId
}

// GetDestinationAccountIdOk returns a tuple with the DestinationAccountId field value
// and a boolean to check if the value has been set.
func (o *CashOrderAuthorizationResponse) GetDestinationAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationAccountId, true
}

// SetDestinationAccountId sets field value
func (o *CashOrderAuthorizationResponse) SetDestinationAccountId(v string) {
	o.DestinationAccountId = v
}

// GetOrderDate returns the OrderDate field value
func (o *CashOrderAuthorizationResponse) GetOrderDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderDate
}

// GetOrderDateOk returns a tuple with the OrderDate field value
// and a boolean to check if the value has been set.
func (o *CashOrderAuthorizationResponse) GetOrderDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderDate, true
}

// SetOrderDate sets field value
func (o *CashOrderAuthorizationResponse) SetOrderDate(v string) {
	o.OrderDate = v
}

// GetAccountNumber returns the AccountNumber field value
func (o *CashOrderAuthorizationResponse) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *CashOrderAuthorizationResponse) GetAccountNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *CashOrderAuthorizationResponse) SetAccountNumber(v string) {
	o.AccountNumber = v
}

// GetClientName returns the ClientName field value
func (o *CashOrderAuthorizationResponse) GetClientName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientName
}

// GetClientNameOk returns a tuple with the ClientName field value
// and a boolean to check if the value has been set.
func (o *CashOrderAuthorizationResponse) GetClientNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientName, true
}

// SetClientName sets field value
func (o *CashOrderAuthorizationResponse) SetClientName(v string) {
	o.ClientName = v
}

// GetHoldId returns the HoldId field value
func (o *CashOrderAuthorizationResponse) GetHoldId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HoldId
}

// GetHoldIdOk returns a tuple with the HoldId field value
// and a boolean to check if the value has been set.
func (o *CashOrderAuthorizationResponse) GetHoldIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HoldId, true
}

// SetHoldId sets field value
func (o *CashOrderAuthorizationResponse) SetHoldId(v string) {
	o.HoldId = v
}

// GetId returns the Id field value
func (o *CashOrderAuthorizationResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CashOrderAuthorizationResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CashOrderAuthorizationResponse) SetId(v string) {
	o.Id = v
}

// GetOriginatingAccountId returns the OriginatingAccountId field value
func (o *CashOrderAuthorizationResponse) GetOriginatingAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginatingAccountId
}

// GetOriginatingAccountIdOk returns a tuple with the OriginatingAccountId field value
// and a boolean to check if the value has been set.
func (o *CashOrderAuthorizationResponse) GetOriginatingAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginatingAccountId, true
}

// SetOriginatingAccountId sets field value
func (o *CashOrderAuthorizationResponse) SetOriginatingAccountId(v string) {
	o.OriginatingAccountId = v
}

// GetStatus returns the Status field value
func (o *CashOrderAuthorizationResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CashOrderAuthorizationResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CashOrderAuthorizationResponse) SetStatus(v string) {
	o.Status = v
}

// GetTenant returns the Tenant field value
func (o *CashOrderAuthorizationResponse) GetTenant() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value
// and a boolean to check if the value has been set.
func (o *CashOrderAuthorizationResponse) GetTenantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tenant, true
}

// SetTenant sets field value
func (o *CashOrderAuthorizationResponse) SetTenant(v string) {
	o.Tenant = v
}

func (o CashOrderAuthorizationResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CashOrderAuthorizationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	toSerialize["authorization_type"] = o.AuthorizationType
	toSerialize["destination_account_id"] = o.DestinationAccountId
	toSerialize["order_date"] = o.OrderDate
	toSerialize["account_number"] = o.AccountNumber
	toSerialize["client_name"] = o.ClientName
	toSerialize["hold_id"] = o.HoldId
	toSerialize["id"] = o.Id
	toSerialize["originating_account_id"] = o.OriginatingAccountId
	toSerialize["status"] = o.Status
	toSerialize["tenant"] = o.Tenant

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CashOrderAuthorizationResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"authorization_type",
		"destination_account_id",
		"order_date",
		"account_number",
		"client_name",
		"hold_id",
		"id",
		"originating_account_id",
		"status",
		"tenant",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCashOrderAuthorizationResponse := _CashOrderAuthorizationResponse{}

	err = json.Unmarshal(data, &varCashOrderAuthorizationResponse)

	if err != nil {
		return err
	}

	*o = CashOrderAuthorizationResponse(varCashOrderAuthorizationResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "amount")
		delete(additionalProperties, "authorization_type")
		delete(additionalProperties, "destination_account_id")
		delete(additionalProperties, "order_date")
		delete(additionalProperties, "account_number")
		delete(additionalProperties, "client_name")
		delete(additionalProperties, "hold_id")
		delete(additionalProperties, "id")
		delete(additionalProperties, "originating_account_id")
		delete(additionalProperties, "status")
		delete(additionalProperties, "tenant")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCashOrderAuthorizationResponse struct {
	value *CashOrderAuthorizationResponse
	isSet bool
}

func (v NullableCashOrderAuthorizationResponse) Get() *CashOrderAuthorizationResponse {
	return v.value
}

func (v *NullableCashOrderAuthorizationResponse) Set(val *CashOrderAuthorizationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCashOrderAuthorizationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCashOrderAuthorizationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCashOrderAuthorizationResponse(val *CashOrderAuthorizationResponse) *NullableCashOrderAuthorizationResponse {
	return &NullableCashOrderAuthorizationResponse{value: val, isSet: true}
}

func (v NullableCashOrderAuthorizationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCashOrderAuthorizationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
