/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// checks if the SpecificInvolvement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpecificInvolvement{}

// SpecificInvolvement Defines if the business is involved in a few high risk industries.
type SpecificInvolvement struct {
	// Defines if the business is in the arms/defense, private security firms, or private military contractors.
	ArmsDefenseOrSecurity *bool `json:"arms_defense_or_security,omitempty"`
	// Defines if the business is in the cannabis industry.
	CannabisIndustry *bool `json:"cannabis_industry,omitempty"`
	// Defines if the business is an embassy or a consulate.
	EmbassiesOrConsulates *bool `json:"embassies_or_consulates,omitempty"`
	// Defines if the business is involved in illegal activities, prostitution, or pirated goods.
	IllegalActivitiesProstitutionOrPiratedGoods *bool `json:"illegal_activities_prostitution_or_pirated_goods,omitempty"`
	// Defines if the business is a law firm or a fiduciary.
	LawFirmOrFiduciary *bool `json:"law_firm_or_fiduciary,omitempty"`
	// Defines if the business is a licensed money service business.
	LicensedMoneyServiceBusiness *bool `json:"licensed_money_service_business,omitempty"`
	// Defines if the business is a provider of online lottery, mail order lotteries and sweepstakes Non-Fiat Currency (including open loop virtual currency), and Unlawful Internet Gambling.
	LotteriesCryptoCurrencyOrIllegalInternetGambling *bool `json:"lotteries_crypto_currency_or_illegal_internet_gambling,omitempty"`
	// Defines if the business is a NGO or a nonprofit.
	NgoOrNonprofit *bool `json:"ngo_or_nonprofit,omitempty"`
	// Defines if the business is in the precious metals, stones, jewellery industry, or rough diamond trade.
	PreciousMetalsStonesOrJewellery *bool `json:"precious_metals_stones_or_jewellery,omitempty"`
	// Defines if the business is a shell bank or a money service business where licensing is required.
	ShellBanksOrUnlicensedMoneyServiceBusiness *bool `json:"shell_banks_or_unlicensed_money_service_business,omitempty"`
	// Defines if the business is a third party processor.
	ThirdPartyProcessor *bool `json:"third_party_processor,omitempty"`
	// Defines if the business is a salon, massage clinic, spa, gift card retailer, or wholesaler.
	WellnessGiftCardsWholesaler *bool `json:"wellness_gift_cards_wholesaler,omitempty"`
}

// NewSpecificInvolvement instantiates a new SpecificInvolvement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecificInvolvement() *SpecificInvolvement {
	this := SpecificInvolvement{}
	return &this
}

// NewSpecificInvolvementWithDefaults instantiates a new SpecificInvolvement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecificInvolvementWithDefaults() *SpecificInvolvement {
	this := SpecificInvolvement{}
	return &this
}

// GetArmsDefenseOrSecurity returns the ArmsDefenseOrSecurity field value if set, zero value otherwise.
func (o *SpecificInvolvement) GetArmsDefenseOrSecurity() bool {
	if o == nil || IsNil(o.ArmsDefenseOrSecurity) {
		var ret bool
		return ret
	}
	return *o.ArmsDefenseOrSecurity
}

// GetArmsDefenseOrSecurityOk returns a tuple with the ArmsDefenseOrSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecificInvolvement) GetArmsDefenseOrSecurityOk() (*bool, bool) {
	if o == nil || IsNil(o.ArmsDefenseOrSecurity) {
		return nil, false
	}
	return o.ArmsDefenseOrSecurity, true
}

// HasArmsDefenseOrSecurity returns a boolean if a field has been set.
func (o *SpecificInvolvement) HasArmsDefenseOrSecurity() bool {
	if o != nil && !IsNil(o.ArmsDefenseOrSecurity) {
		return true
	}

	return false
}

// SetArmsDefenseOrSecurity gets a reference to the given bool and assigns it to the ArmsDefenseOrSecurity field.
func (o *SpecificInvolvement) SetArmsDefenseOrSecurity(v bool) {
	o.ArmsDefenseOrSecurity = &v
}

// GetCannabisIndustry returns the CannabisIndustry field value if set, zero value otherwise.
func (o *SpecificInvolvement) GetCannabisIndustry() bool {
	if o == nil || IsNil(o.CannabisIndustry) {
		var ret bool
		return ret
	}
	return *o.CannabisIndustry
}

// GetCannabisIndustryOk returns a tuple with the CannabisIndustry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecificInvolvement) GetCannabisIndustryOk() (*bool, bool) {
	if o == nil || IsNil(o.CannabisIndustry) {
		return nil, false
	}
	return o.CannabisIndustry, true
}

// HasCannabisIndustry returns a boolean if a field has been set.
func (o *SpecificInvolvement) HasCannabisIndustry() bool {
	if o != nil && !IsNil(o.CannabisIndustry) {
		return true
	}

	return false
}

// SetCannabisIndustry gets a reference to the given bool and assigns it to the CannabisIndustry field.
func (o *SpecificInvolvement) SetCannabisIndustry(v bool) {
	o.CannabisIndustry = &v
}

// GetEmbassiesOrConsulates returns the EmbassiesOrConsulates field value if set, zero value otherwise.
func (o *SpecificInvolvement) GetEmbassiesOrConsulates() bool {
	if o == nil || IsNil(o.EmbassiesOrConsulates) {
		var ret bool
		return ret
	}
	return *o.EmbassiesOrConsulates
}

// GetEmbassiesOrConsulatesOk returns a tuple with the EmbassiesOrConsulates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecificInvolvement) GetEmbassiesOrConsulatesOk() (*bool, bool) {
	if o == nil || IsNil(o.EmbassiesOrConsulates) {
		return nil, false
	}
	return o.EmbassiesOrConsulates, true
}

// HasEmbassiesOrConsulates returns a boolean if a field has been set.
func (o *SpecificInvolvement) HasEmbassiesOrConsulates() bool {
	if o != nil && !IsNil(o.EmbassiesOrConsulates) {
		return true
	}

	return false
}

// SetEmbassiesOrConsulates gets a reference to the given bool and assigns it to the EmbassiesOrConsulates field.
func (o *SpecificInvolvement) SetEmbassiesOrConsulates(v bool) {
	o.EmbassiesOrConsulates = &v
}

// GetIllegalActivitiesProstitutionOrPiratedGoods returns the IllegalActivitiesProstitutionOrPiratedGoods field value if set, zero value otherwise.
func (o *SpecificInvolvement) GetIllegalActivitiesProstitutionOrPiratedGoods() bool {
	if o == nil || IsNil(o.IllegalActivitiesProstitutionOrPiratedGoods) {
		var ret bool
		return ret
	}
	return *o.IllegalActivitiesProstitutionOrPiratedGoods
}

// GetIllegalActivitiesProstitutionOrPiratedGoodsOk returns a tuple with the IllegalActivitiesProstitutionOrPiratedGoods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecificInvolvement) GetIllegalActivitiesProstitutionOrPiratedGoodsOk() (*bool, bool) {
	if o == nil || IsNil(o.IllegalActivitiesProstitutionOrPiratedGoods) {
		return nil, false
	}
	return o.IllegalActivitiesProstitutionOrPiratedGoods, true
}

// HasIllegalActivitiesProstitutionOrPiratedGoods returns a boolean if a field has been set.
func (o *SpecificInvolvement) HasIllegalActivitiesProstitutionOrPiratedGoods() bool {
	if o != nil && !IsNil(o.IllegalActivitiesProstitutionOrPiratedGoods) {
		return true
	}

	return false
}

// SetIllegalActivitiesProstitutionOrPiratedGoods gets a reference to the given bool and assigns it to the IllegalActivitiesProstitutionOrPiratedGoods field.
func (o *SpecificInvolvement) SetIllegalActivitiesProstitutionOrPiratedGoods(v bool) {
	o.IllegalActivitiesProstitutionOrPiratedGoods = &v
}

// GetLawFirmOrFiduciary returns the LawFirmOrFiduciary field value if set, zero value otherwise.
func (o *SpecificInvolvement) GetLawFirmOrFiduciary() bool {
	if o == nil || IsNil(o.LawFirmOrFiduciary) {
		var ret bool
		return ret
	}
	return *o.LawFirmOrFiduciary
}

// GetLawFirmOrFiduciaryOk returns a tuple with the LawFirmOrFiduciary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecificInvolvement) GetLawFirmOrFiduciaryOk() (*bool, bool) {
	if o == nil || IsNil(o.LawFirmOrFiduciary) {
		return nil, false
	}
	return o.LawFirmOrFiduciary, true
}

// HasLawFirmOrFiduciary returns a boolean if a field has been set.
func (o *SpecificInvolvement) HasLawFirmOrFiduciary() bool {
	if o != nil && !IsNil(o.LawFirmOrFiduciary) {
		return true
	}

	return false
}

// SetLawFirmOrFiduciary gets a reference to the given bool and assigns it to the LawFirmOrFiduciary field.
func (o *SpecificInvolvement) SetLawFirmOrFiduciary(v bool) {
	o.LawFirmOrFiduciary = &v
}

// GetLicensedMoneyServiceBusiness returns the LicensedMoneyServiceBusiness field value if set, zero value otherwise.
func (o *SpecificInvolvement) GetLicensedMoneyServiceBusiness() bool {
	if o == nil || IsNil(o.LicensedMoneyServiceBusiness) {
		var ret bool
		return ret
	}
	return *o.LicensedMoneyServiceBusiness
}

// GetLicensedMoneyServiceBusinessOk returns a tuple with the LicensedMoneyServiceBusiness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecificInvolvement) GetLicensedMoneyServiceBusinessOk() (*bool, bool) {
	if o == nil || IsNil(o.LicensedMoneyServiceBusiness) {
		return nil, false
	}
	return o.LicensedMoneyServiceBusiness, true
}

// HasLicensedMoneyServiceBusiness returns a boolean if a field has been set.
func (o *SpecificInvolvement) HasLicensedMoneyServiceBusiness() bool {
	if o != nil && !IsNil(o.LicensedMoneyServiceBusiness) {
		return true
	}

	return false
}

// SetLicensedMoneyServiceBusiness gets a reference to the given bool and assigns it to the LicensedMoneyServiceBusiness field.
func (o *SpecificInvolvement) SetLicensedMoneyServiceBusiness(v bool) {
	o.LicensedMoneyServiceBusiness = &v
}

// GetLotteriesCryptoCurrencyOrIllegalInternetGambling returns the LotteriesCryptoCurrencyOrIllegalInternetGambling field value if set, zero value otherwise.
func (o *SpecificInvolvement) GetLotteriesCryptoCurrencyOrIllegalInternetGambling() bool {
	if o == nil || IsNil(o.LotteriesCryptoCurrencyOrIllegalInternetGambling) {
		var ret bool
		return ret
	}
	return *o.LotteriesCryptoCurrencyOrIllegalInternetGambling
}

// GetLotteriesCryptoCurrencyOrIllegalInternetGamblingOk returns a tuple with the LotteriesCryptoCurrencyOrIllegalInternetGambling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecificInvolvement) GetLotteriesCryptoCurrencyOrIllegalInternetGamblingOk() (*bool, bool) {
	if o == nil || IsNil(o.LotteriesCryptoCurrencyOrIllegalInternetGambling) {
		return nil, false
	}
	return o.LotteriesCryptoCurrencyOrIllegalInternetGambling, true
}

// HasLotteriesCryptoCurrencyOrIllegalInternetGambling returns a boolean if a field has been set.
func (o *SpecificInvolvement) HasLotteriesCryptoCurrencyOrIllegalInternetGambling() bool {
	if o != nil && !IsNil(o.LotteriesCryptoCurrencyOrIllegalInternetGambling) {
		return true
	}

	return false
}

// SetLotteriesCryptoCurrencyOrIllegalInternetGambling gets a reference to the given bool and assigns it to the LotteriesCryptoCurrencyOrIllegalInternetGambling field.
func (o *SpecificInvolvement) SetLotteriesCryptoCurrencyOrIllegalInternetGambling(v bool) {
	o.LotteriesCryptoCurrencyOrIllegalInternetGambling = &v
}

// GetNgoOrNonprofit returns the NgoOrNonprofit field value if set, zero value otherwise.
func (o *SpecificInvolvement) GetNgoOrNonprofit() bool {
	if o == nil || IsNil(o.NgoOrNonprofit) {
		var ret bool
		return ret
	}
	return *o.NgoOrNonprofit
}

// GetNgoOrNonprofitOk returns a tuple with the NgoOrNonprofit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecificInvolvement) GetNgoOrNonprofitOk() (*bool, bool) {
	if o == nil || IsNil(o.NgoOrNonprofit) {
		return nil, false
	}
	return o.NgoOrNonprofit, true
}

// HasNgoOrNonprofit returns a boolean if a field has been set.
func (o *SpecificInvolvement) HasNgoOrNonprofit() bool {
	if o != nil && !IsNil(o.NgoOrNonprofit) {
		return true
	}

	return false
}

// SetNgoOrNonprofit gets a reference to the given bool and assigns it to the NgoOrNonprofit field.
func (o *SpecificInvolvement) SetNgoOrNonprofit(v bool) {
	o.NgoOrNonprofit = &v
}

// GetPreciousMetalsStonesOrJewellery returns the PreciousMetalsStonesOrJewellery field value if set, zero value otherwise.
func (o *SpecificInvolvement) GetPreciousMetalsStonesOrJewellery() bool {
	if o == nil || IsNil(o.PreciousMetalsStonesOrJewellery) {
		var ret bool
		return ret
	}
	return *o.PreciousMetalsStonesOrJewellery
}

// GetPreciousMetalsStonesOrJewelleryOk returns a tuple with the PreciousMetalsStonesOrJewellery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecificInvolvement) GetPreciousMetalsStonesOrJewelleryOk() (*bool, bool) {
	if o == nil || IsNil(o.PreciousMetalsStonesOrJewellery) {
		return nil, false
	}
	return o.PreciousMetalsStonesOrJewellery, true
}

// HasPreciousMetalsStonesOrJewellery returns a boolean if a field has been set.
func (o *SpecificInvolvement) HasPreciousMetalsStonesOrJewellery() bool {
	if o != nil && !IsNil(o.PreciousMetalsStonesOrJewellery) {
		return true
	}

	return false
}

// SetPreciousMetalsStonesOrJewellery gets a reference to the given bool and assigns it to the PreciousMetalsStonesOrJewellery field.
func (o *SpecificInvolvement) SetPreciousMetalsStonesOrJewellery(v bool) {
	o.PreciousMetalsStonesOrJewellery = &v
}

// GetShellBanksOrUnlicensedMoneyServiceBusiness returns the ShellBanksOrUnlicensedMoneyServiceBusiness field value if set, zero value otherwise.
func (o *SpecificInvolvement) GetShellBanksOrUnlicensedMoneyServiceBusiness() bool {
	if o == nil || IsNil(o.ShellBanksOrUnlicensedMoneyServiceBusiness) {
		var ret bool
		return ret
	}
	return *o.ShellBanksOrUnlicensedMoneyServiceBusiness
}

// GetShellBanksOrUnlicensedMoneyServiceBusinessOk returns a tuple with the ShellBanksOrUnlicensedMoneyServiceBusiness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecificInvolvement) GetShellBanksOrUnlicensedMoneyServiceBusinessOk() (*bool, bool) {
	if o == nil || IsNil(o.ShellBanksOrUnlicensedMoneyServiceBusiness) {
		return nil, false
	}
	return o.ShellBanksOrUnlicensedMoneyServiceBusiness, true
}

// HasShellBanksOrUnlicensedMoneyServiceBusiness returns a boolean if a field has been set.
func (o *SpecificInvolvement) HasShellBanksOrUnlicensedMoneyServiceBusiness() bool {
	if o != nil && !IsNil(o.ShellBanksOrUnlicensedMoneyServiceBusiness) {
		return true
	}

	return false
}

// SetShellBanksOrUnlicensedMoneyServiceBusiness gets a reference to the given bool and assigns it to the ShellBanksOrUnlicensedMoneyServiceBusiness field.
func (o *SpecificInvolvement) SetShellBanksOrUnlicensedMoneyServiceBusiness(v bool) {
	o.ShellBanksOrUnlicensedMoneyServiceBusiness = &v
}

// GetThirdPartyProcessor returns the ThirdPartyProcessor field value if set, zero value otherwise.
func (o *SpecificInvolvement) GetThirdPartyProcessor() bool {
	if o == nil || IsNil(o.ThirdPartyProcessor) {
		var ret bool
		return ret
	}
	return *o.ThirdPartyProcessor
}

// GetThirdPartyProcessorOk returns a tuple with the ThirdPartyProcessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecificInvolvement) GetThirdPartyProcessorOk() (*bool, bool) {
	if o == nil || IsNil(o.ThirdPartyProcessor) {
		return nil, false
	}
	return o.ThirdPartyProcessor, true
}

// HasThirdPartyProcessor returns a boolean if a field has been set.
func (o *SpecificInvolvement) HasThirdPartyProcessor() bool {
	if o != nil && !IsNil(o.ThirdPartyProcessor) {
		return true
	}

	return false
}

// SetThirdPartyProcessor gets a reference to the given bool and assigns it to the ThirdPartyProcessor field.
func (o *SpecificInvolvement) SetThirdPartyProcessor(v bool) {
	o.ThirdPartyProcessor = &v
}

// GetWellnessGiftCardsWholesaler returns the WellnessGiftCardsWholesaler field value if set, zero value otherwise.
func (o *SpecificInvolvement) GetWellnessGiftCardsWholesaler() bool {
	if o == nil || IsNil(o.WellnessGiftCardsWholesaler) {
		var ret bool
		return ret
	}
	return *o.WellnessGiftCardsWholesaler
}

// GetWellnessGiftCardsWholesalerOk returns a tuple with the WellnessGiftCardsWholesaler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecificInvolvement) GetWellnessGiftCardsWholesalerOk() (*bool, bool) {
	if o == nil || IsNil(o.WellnessGiftCardsWholesaler) {
		return nil, false
	}
	return o.WellnessGiftCardsWholesaler, true
}

// HasWellnessGiftCardsWholesaler returns a boolean if a field has been set.
func (o *SpecificInvolvement) HasWellnessGiftCardsWholesaler() bool {
	if o != nil && !IsNil(o.WellnessGiftCardsWholesaler) {
		return true
	}

	return false
}

// SetWellnessGiftCardsWholesaler gets a reference to the given bool and assigns it to the WellnessGiftCardsWholesaler field.
func (o *SpecificInvolvement) SetWellnessGiftCardsWholesaler(v bool) {
	o.WellnessGiftCardsWholesaler = &v
}

func (o SpecificInvolvement) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpecificInvolvement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArmsDefenseOrSecurity) {
		toSerialize["arms_defense_or_security"] = o.ArmsDefenseOrSecurity
	}
	if !IsNil(o.CannabisIndustry) {
		toSerialize["cannabis_industry"] = o.CannabisIndustry
	}
	if !IsNil(o.EmbassiesOrConsulates) {
		toSerialize["embassies_or_consulates"] = o.EmbassiesOrConsulates
	}
	if !IsNil(o.IllegalActivitiesProstitutionOrPiratedGoods) {
		toSerialize["illegal_activities_prostitution_or_pirated_goods"] = o.IllegalActivitiesProstitutionOrPiratedGoods
	}
	if !IsNil(o.LawFirmOrFiduciary) {
		toSerialize["law_firm_or_fiduciary"] = o.LawFirmOrFiduciary
	}
	if !IsNil(o.LicensedMoneyServiceBusiness) {
		toSerialize["licensed_money_service_business"] = o.LicensedMoneyServiceBusiness
	}
	if !IsNil(o.LotteriesCryptoCurrencyOrIllegalInternetGambling) {
		toSerialize["lotteries_crypto_currency_or_illegal_internet_gambling"] = o.LotteriesCryptoCurrencyOrIllegalInternetGambling
	}
	if !IsNil(o.NgoOrNonprofit) {
		toSerialize["ngo_or_nonprofit"] = o.NgoOrNonprofit
	}
	if !IsNil(o.PreciousMetalsStonesOrJewellery) {
		toSerialize["precious_metals_stones_or_jewellery"] = o.PreciousMetalsStonesOrJewellery
	}
	if !IsNil(o.ShellBanksOrUnlicensedMoneyServiceBusiness) {
		toSerialize["shell_banks_or_unlicensed_money_service_business"] = o.ShellBanksOrUnlicensedMoneyServiceBusiness
	}
	if !IsNil(o.ThirdPartyProcessor) {
		toSerialize["third_party_processor"] = o.ThirdPartyProcessor
	}
	if !IsNil(o.WellnessGiftCardsWholesaler) {
		toSerialize["wellness_gift_cards_wholesaler"] = o.WellnessGiftCardsWholesaler
	}
	return toSerialize, nil
}

type NullableSpecificInvolvement struct {
	value *SpecificInvolvement
	isSet bool
}

func (v NullableSpecificInvolvement) Get() *SpecificInvolvement {
	return v.value
}

func (v *NullableSpecificInvolvement) Set(val *SpecificInvolvement) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecificInvolvement) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecificInvolvement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecificInvolvement(val *SpecificInvolvement) *NullableSpecificInvolvement {
	return &NullableSpecificInvolvement{value: val, isSet: true}
}

func (v NullableSpecificInvolvement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecificInvolvement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
