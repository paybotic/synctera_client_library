/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.153.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
	"fmt"
)

// checks if the ExternalCardUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalCardUpdateRequest{}

// ExternalCardUpdateRequest struct for ExternalCardUpdateRequest
type ExternalCardUpdateRequest struct {
	Status               ExternalCardStatus `json:"status"`
	AdditionalProperties map[string]interface{}
}

type _ExternalCardUpdateRequest ExternalCardUpdateRequest

// NewExternalCardUpdateRequest instantiates a new ExternalCardUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalCardUpdateRequest(status ExternalCardStatus) *ExternalCardUpdateRequest {
	this := ExternalCardUpdateRequest{}
	this.Status = status
	return &this
}

// NewExternalCardUpdateRequestWithDefaults instantiates a new ExternalCardUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalCardUpdateRequestWithDefaults() *ExternalCardUpdateRequest {
	this := ExternalCardUpdateRequest{}
	return &this
}

// GetStatus returns the Status field value
func (o *ExternalCardUpdateRequest) GetStatus() ExternalCardStatus {
	if o == nil {
		var ret ExternalCardStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ExternalCardUpdateRequest) GetStatusOk() (*ExternalCardStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ExternalCardUpdateRequest) SetStatus(v ExternalCardStatus) {
	o.Status = v
}

func (o ExternalCardUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalCardUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExternalCardUpdateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalCardUpdateRequest := _ExternalCardUpdateRequest{}

	err = json.Unmarshal(data, &varExternalCardUpdateRequest)

	if err != nil {
		return err
	}

	*o = ExternalCardUpdateRequest(varExternalCardUpdateRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExternalCardUpdateRequest struct {
	value *ExternalCardUpdateRequest
	isSet bool
}

func (v NullableExternalCardUpdateRequest) Get() *ExternalCardUpdateRequest {
	return v.value
}

func (v *NullableExternalCardUpdateRequest) Set(val *ExternalCardUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalCardUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalCardUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalCardUpdateRequest(val *ExternalCardUpdateRequest) *NullableExternalCardUpdateRequest {
	return &NullableExternalCardUpdateRequest{value: val, isSet: true}
}

func (v NullableExternalCardUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalCardUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
