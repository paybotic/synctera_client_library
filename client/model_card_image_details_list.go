/*
Synctera API

This is the official reference documentation for Synctera APIs. If you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact-us' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.150.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CardImageDetailsList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardImageDetailsList{}

// CardImageDetailsList struct for CardImageDetailsList
type CardImageDetailsList struct {
	// If returned, use the next_page_token to query for the next page of results. Not returned if there are no more rows.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// Array of image details
	Images []CardImageDetails `json:"images"`
}

type _CardImageDetailsList CardImageDetailsList

// NewCardImageDetailsList instantiates a new CardImageDetailsList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardImageDetailsList(images []CardImageDetails) *CardImageDetailsList {
	this := CardImageDetailsList{}
	this.Images = images
	return &this
}

// NewCardImageDetailsListWithDefaults instantiates a new CardImageDetailsList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardImageDetailsListWithDefaults() *CardImageDetailsList {
	this := CardImageDetailsList{}
	return &this
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *CardImageDetailsList) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardImageDetailsList) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *CardImageDetailsList) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *CardImageDetailsList) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetImages returns the Images field value
func (o *CardImageDetailsList) GetImages() []CardImageDetails {
	if o == nil {
		var ret []CardImageDetails
		return ret
	}

	return o.Images
}

// GetImagesOk returns a tuple with the Images field value
// and a boolean to check if the value has been set.
func (o *CardImageDetailsList) GetImagesOk() ([]CardImageDetails, bool) {
	if o == nil {
		return nil, false
	}
	return o.Images, true
}

// SetImages sets field value
func (o *CardImageDetailsList) SetImages(v []CardImageDetails) {
	o.Images = v
}

func (o CardImageDetailsList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardImageDetailsList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NextPageToken) {
		toSerialize["next_page_token"] = o.NextPageToken
	}
	toSerialize["images"] = o.Images
	return toSerialize, nil
}

func (o *CardImageDetailsList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"images",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCardImageDetailsList := _CardImageDetailsList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCardImageDetailsList)

	if err != nil {
		return err
	}

	*o = CardImageDetailsList(varCardImageDetailsList)

	return err
}

type NullableCardImageDetailsList struct {
	value *CardImageDetailsList
	isSet bool
}

func (v NullableCardImageDetailsList) Get() *CardImageDetailsList {
	return v.value
}

func (v *NullableCardImageDetailsList) Set(val *CardImageDetailsList) {
	v.value = val
	v.isSet = true
}

func (v NullableCardImageDetailsList) IsSet() bool {
	return v.isSet
}

func (v *NullableCardImageDetailsList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardImageDetailsList(val *CardImageDetailsList) *NullableCardImageDetailsList {
	return &NullableCardImageDetailsList{value: val, isSet: true}
}

func (v NullableCardImageDetailsList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardImageDetailsList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
