/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.69.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PostPersonalIdWCust type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostPersonalIdWCust{}

// PostPersonalIdWCust struct for PostPersonalIdWCust
type PostPersonalIdWCust struct {
	// Id of the customer having this personal identifier
	CustomerId string `json:"customer_id"`
	// UUID for the personal identifier for subsequent changes and deletion
	Id *string `json:"id,omitempty"`
	IdType PersonalIdType `json:"id_type"`
	// The personal identifier. Format varies by personal identifier type.
	Identifier string `json:"identifier"`
	// True if the identifier was provided by the system, e.g. via SSN Prefill.
	SystemProvided *bool `json:"system_provided,omitempty"`
	// The ISO 3166 Alpha-2 country code for the country that issued the personal identifier. This is optional for personal identifier types that have an implicit country, e.g. SSN. This is required for other types, e.g. PASSPORT_NUMBER. 
	CountryCode *string `json:"country_code,omitempty"`
	// The id of the tenant containing the resource. This is relevant for Fintechs that have multiple workspaces. 
	Tenant *string `json:"tenant,omitempty"`
}

// NewPostPersonalIdWCust instantiates a new PostPersonalIdWCust object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostPersonalIdWCust(customerId string, idType PersonalIdType, identifier string) *PostPersonalIdWCust {
	this := PostPersonalIdWCust{}
	this.CustomerId = customerId
	this.IdType = idType
	this.Identifier = identifier
	return &this
}

// NewPostPersonalIdWCustWithDefaults instantiates a new PostPersonalIdWCust object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostPersonalIdWCustWithDefaults() *PostPersonalIdWCust {
	this := PostPersonalIdWCust{}
	return &this
}

// GetCustomerId returns the CustomerId field value
func (o *PostPersonalIdWCust) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *PostPersonalIdWCust) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *PostPersonalIdWCust) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PostPersonalIdWCust) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPersonalIdWCust) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PostPersonalIdWCust) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PostPersonalIdWCust) SetId(v string) {
	o.Id = &v
}

// GetIdType returns the IdType field value
func (o *PostPersonalIdWCust) GetIdType() PersonalIdType {
	if o == nil {
		var ret PersonalIdType
		return ret
	}

	return o.IdType
}

// GetIdTypeOk returns a tuple with the IdType field value
// and a boolean to check if the value has been set.
func (o *PostPersonalIdWCust) GetIdTypeOk() (*PersonalIdType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdType, true
}

// SetIdType sets field value
func (o *PostPersonalIdWCust) SetIdType(v PersonalIdType) {
	o.IdType = v
}

// GetIdentifier returns the Identifier field value
func (o *PostPersonalIdWCust) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *PostPersonalIdWCust) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *PostPersonalIdWCust) SetIdentifier(v string) {
	o.Identifier = v
}

// GetSystemProvided returns the SystemProvided field value if set, zero value otherwise.
func (o *PostPersonalIdWCust) GetSystemProvided() bool {
	if o == nil || IsNil(o.SystemProvided) {
		var ret bool
		return ret
	}
	return *o.SystemProvided
}

// GetSystemProvidedOk returns a tuple with the SystemProvided field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPersonalIdWCust) GetSystemProvidedOk() (*bool, bool) {
	if o == nil || IsNil(o.SystemProvided) {
		return nil, false
	}
	return o.SystemProvided, true
}

// HasSystemProvided returns a boolean if a field has been set.
func (o *PostPersonalIdWCust) HasSystemProvided() bool {
	if o != nil && !IsNil(o.SystemProvided) {
		return true
	}

	return false
}

// SetSystemProvided gets a reference to the given bool and assigns it to the SystemProvided field.
func (o *PostPersonalIdWCust) SetSystemProvided(v bool) {
	o.SystemProvided = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *PostPersonalIdWCust) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPersonalIdWCust) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *PostPersonalIdWCust) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *PostPersonalIdWCust) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *PostPersonalIdWCust) GetTenant() string {
	if o == nil || IsNil(o.Tenant) {
		var ret string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPersonalIdWCust) GetTenantOk() (*string, bool) {
	if o == nil || IsNil(o.Tenant) {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *PostPersonalIdWCust) HasTenant() bool {
	if o != nil && !IsNil(o.Tenant) {
		return true
	}

	return false
}

// SetTenant gets a reference to the given string and assigns it to the Tenant field.
func (o *PostPersonalIdWCust) SetTenant(v string) {
	o.Tenant = &v
}

func (o PostPersonalIdWCust) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostPersonalIdWCust) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customer_id"] = o.CustomerId
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["id_type"] = o.IdType
	toSerialize["identifier"] = o.Identifier
	if !IsNil(o.SystemProvided) {
		toSerialize["system_provided"] = o.SystemProvided
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.Tenant) {
		toSerialize["tenant"] = o.Tenant
	}
	return toSerialize, nil
}

type NullablePostPersonalIdWCust struct {
	value *PostPersonalIdWCust
	isSet bool
}

func (v NullablePostPersonalIdWCust) Get() *PostPersonalIdWCust {
	return v.value
}

func (v *NullablePostPersonalIdWCust) Set(val *PostPersonalIdWCust) {
	v.value = val
	v.isSet = true
}

func (v NullablePostPersonalIdWCust) IsSet() bool {
	return v.isSet
}

func (v *NullablePostPersonalIdWCust) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostPersonalIdWCust(val *PostPersonalIdWCust) *NullablePostPersonalIdWCust {
	return &NullablePostPersonalIdWCust{value: val, isSet: true}
}

func (v NullablePostPersonalIdWCust) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostPersonalIdWCust) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


