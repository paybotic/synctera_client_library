/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.69.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccountRouting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountRouting{}

// AccountRouting struct for AccountRouting
type AccountRouting struct {
	// The routing number used for US ACH payments. Only appears if `bank_countries` contains `US`. Value may be masked, in which case only the last four digits are returned. 
	AchRoutingNumber *string `json:"ach_routing_number,omitempty"`
	BankAddress *Address `json:"bank_address,omitempty"`
	// The countries that this bank operates the account in
	BankCountries []string `json:"bank_countries"`
	// The name of the bank managing the account
	BankName string `json:"bank_name"`
	// The details of the correspondent banks for the account. 
	CorrespondentBankDetails []CorrespondentBankDetails `json:"correspondent_bank_details,omitempty"`
	// > ðŸš§ Alpha > This is an Alpha property. Feedback from the community is welcome. We may make breaking changes to this property. The 9 digit routing number used for EFT CA payments, identifying a Canadian bank.  The format is 0xxxyyyyy where xxx is the institution number and yyyyy is the transit number. On write, Synctera will store the entire routing number; on read, we only return the last 4 characters. Value may be masked, in which case only the last four digits are returned. 
	EftCaRoutingNumber *string `json:"eft_ca_routing_number,omitempty"`
	// The routing number used for EFT payments, identifying a Canadian bank, consisting of the institution number and the branch number. Only appears if `bank_countries` contains `CA`. Value may be masked, in which case only the last four digits are returned. This attribute is deprecated and will be removed in a future API version. Use eft_ca_routing_number instead. 
	// Deprecated
	EftRoutingNumber *string `json:"eft_routing_number,omitempty"`
	// The SWIFT code for the bank. Value may be masked, in which case only the last four characters are returned. 
	SwiftCode *string `json:"swift_code,omitempty"`
	// The routing number used for domestic wire payments. Only appears if `bank_countries` contains `US`. Value may be masked, in which case only the last four digits are returned. 
	WireRoutingNumber *string `json:"wire_routing_number,omitempty"`
}

// NewAccountRouting instantiates a new AccountRouting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountRouting(bankCountries []string, bankName string) *AccountRouting {
	this := AccountRouting{}
	this.BankCountries = bankCountries
	this.BankName = bankName
	return &this
}

// NewAccountRoutingWithDefaults instantiates a new AccountRouting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountRoutingWithDefaults() *AccountRouting {
	this := AccountRouting{}
	return &this
}

// GetAchRoutingNumber returns the AchRoutingNumber field value if set, zero value otherwise.
func (o *AccountRouting) GetAchRoutingNumber() string {
	if o == nil || IsNil(o.AchRoutingNumber) {
		var ret string
		return ret
	}
	return *o.AchRoutingNumber
}

// GetAchRoutingNumberOk returns a tuple with the AchRoutingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRouting) GetAchRoutingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AchRoutingNumber) {
		return nil, false
	}
	return o.AchRoutingNumber, true
}

// HasAchRoutingNumber returns a boolean if a field has been set.
func (o *AccountRouting) HasAchRoutingNumber() bool {
	if o != nil && !IsNil(o.AchRoutingNumber) {
		return true
	}

	return false
}

// SetAchRoutingNumber gets a reference to the given string and assigns it to the AchRoutingNumber field.
func (o *AccountRouting) SetAchRoutingNumber(v string) {
	o.AchRoutingNumber = &v
}

// GetBankAddress returns the BankAddress field value if set, zero value otherwise.
func (o *AccountRouting) GetBankAddress() Address {
	if o == nil || IsNil(o.BankAddress) {
		var ret Address
		return ret
	}
	return *o.BankAddress
}

// GetBankAddressOk returns a tuple with the BankAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRouting) GetBankAddressOk() (*Address, bool) {
	if o == nil || IsNil(o.BankAddress) {
		return nil, false
	}
	return o.BankAddress, true
}

// HasBankAddress returns a boolean if a field has been set.
func (o *AccountRouting) HasBankAddress() bool {
	if o != nil && !IsNil(o.BankAddress) {
		return true
	}

	return false
}

// SetBankAddress gets a reference to the given Address and assigns it to the BankAddress field.
func (o *AccountRouting) SetBankAddress(v Address) {
	o.BankAddress = &v
}

// GetBankCountries returns the BankCountries field value
func (o *AccountRouting) GetBankCountries() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.BankCountries
}

// GetBankCountriesOk returns a tuple with the BankCountries field value
// and a boolean to check if the value has been set.
func (o *AccountRouting) GetBankCountriesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankCountries, true
}

// SetBankCountries sets field value
func (o *AccountRouting) SetBankCountries(v []string) {
	o.BankCountries = v
}

// GetBankName returns the BankName field value
func (o *AccountRouting) GetBankName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankName
}

// GetBankNameOk returns a tuple with the BankName field value
// and a boolean to check if the value has been set.
func (o *AccountRouting) GetBankNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankName, true
}

// SetBankName sets field value
func (o *AccountRouting) SetBankName(v string) {
	o.BankName = v
}

// GetCorrespondentBankDetails returns the CorrespondentBankDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountRouting) GetCorrespondentBankDetails() []CorrespondentBankDetails {
	if o == nil {
		var ret []CorrespondentBankDetails
		return ret
	}
	return o.CorrespondentBankDetails
}

// GetCorrespondentBankDetailsOk returns a tuple with the CorrespondentBankDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountRouting) GetCorrespondentBankDetailsOk() ([]CorrespondentBankDetails, bool) {
	if o == nil || IsNil(o.CorrespondentBankDetails) {
		return nil, false
	}
	return o.CorrespondentBankDetails, true
}

// HasCorrespondentBankDetails returns a boolean if a field has been set.
func (o *AccountRouting) HasCorrespondentBankDetails() bool {
	if o != nil && IsNil(o.CorrespondentBankDetails) {
		return true
	}

	return false
}

// SetCorrespondentBankDetails gets a reference to the given []CorrespondentBankDetails and assigns it to the CorrespondentBankDetails field.
func (o *AccountRouting) SetCorrespondentBankDetails(v []CorrespondentBankDetails) {
	o.CorrespondentBankDetails = v
}

// GetEftCaRoutingNumber returns the EftCaRoutingNumber field value if set, zero value otherwise.
func (o *AccountRouting) GetEftCaRoutingNumber() string {
	if o == nil || IsNil(o.EftCaRoutingNumber) {
		var ret string
		return ret
	}
	return *o.EftCaRoutingNumber
}

// GetEftCaRoutingNumberOk returns a tuple with the EftCaRoutingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRouting) GetEftCaRoutingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EftCaRoutingNumber) {
		return nil, false
	}
	return o.EftCaRoutingNumber, true
}

// HasEftCaRoutingNumber returns a boolean if a field has been set.
func (o *AccountRouting) HasEftCaRoutingNumber() bool {
	if o != nil && !IsNil(o.EftCaRoutingNumber) {
		return true
	}

	return false
}

// SetEftCaRoutingNumber gets a reference to the given string and assigns it to the EftCaRoutingNumber field.
func (o *AccountRouting) SetEftCaRoutingNumber(v string) {
	o.EftCaRoutingNumber = &v
}

// GetEftRoutingNumber returns the EftRoutingNumber field value if set, zero value otherwise.
// Deprecated
func (o *AccountRouting) GetEftRoutingNumber() string {
	if o == nil || IsNil(o.EftRoutingNumber) {
		var ret string
		return ret
	}
	return *o.EftRoutingNumber
}

// GetEftRoutingNumberOk returns a tuple with the EftRoutingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AccountRouting) GetEftRoutingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EftRoutingNumber) {
		return nil, false
	}
	return o.EftRoutingNumber, true
}

// HasEftRoutingNumber returns a boolean if a field has been set.
func (o *AccountRouting) HasEftRoutingNumber() bool {
	if o != nil && !IsNil(o.EftRoutingNumber) {
		return true
	}

	return false
}

// SetEftRoutingNumber gets a reference to the given string and assigns it to the EftRoutingNumber field.
// Deprecated
func (o *AccountRouting) SetEftRoutingNumber(v string) {
	o.EftRoutingNumber = &v
}

// GetSwiftCode returns the SwiftCode field value if set, zero value otherwise.
func (o *AccountRouting) GetSwiftCode() string {
	if o == nil || IsNil(o.SwiftCode) {
		var ret string
		return ret
	}
	return *o.SwiftCode
}

// GetSwiftCodeOk returns a tuple with the SwiftCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRouting) GetSwiftCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SwiftCode) {
		return nil, false
	}
	return o.SwiftCode, true
}

// HasSwiftCode returns a boolean if a field has been set.
func (o *AccountRouting) HasSwiftCode() bool {
	if o != nil && !IsNil(o.SwiftCode) {
		return true
	}

	return false
}

// SetSwiftCode gets a reference to the given string and assigns it to the SwiftCode field.
func (o *AccountRouting) SetSwiftCode(v string) {
	o.SwiftCode = &v
}

// GetWireRoutingNumber returns the WireRoutingNumber field value if set, zero value otherwise.
func (o *AccountRouting) GetWireRoutingNumber() string {
	if o == nil || IsNil(o.WireRoutingNumber) {
		var ret string
		return ret
	}
	return *o.WireRoutingNumber
}

// GetWireRoutingNumberOk returns a tuple with the WireRoutingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountRouting) GetWireRoutingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.WireRoutingNumber) {
		return nil, false
	}
	return o.WireRoutingNumber, true
}

// HasWireRoutingNumber returns a boolean if a field has been set.
func (o *AccountRouting) HasWireRoutingNumber() bool {
	if o != nil && !IsNil(o.WireRoutingNumber) {
		return true
	}

	return false
}

// SetWireRoutingNumber gets a reference to the given string and assigns it to the WireRoutingNumber field.
func (o *AccountRouting) SetWireRoutingNumber(v string) {
	o.WireRoutingNumber = &v
}

func (o AccountRouting) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountRouting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AchRoutingNumber) {
		toSerialize["ach_routing_number"] = o.AchRoutingNumber
	}
	if !IsNil(o.BankAddress) {
		toSerialize["bank_address"] = o.BankAddress
	}
	toSerialize["bank_countries"] = o.BankCountries
	toSerialize["bank_name"] = o.BankName
	if o.CorrespondentBankDetails != nil {
		toSerialize["correspondent_bank_details"] = o.CorrespondentBankDetails
	}
	if !IsNil(o.EftCaRoutingNumber) {
		toSerialize["eft_ca_routing_number"] = o.EftCaRoutingNumber
	}
	if !IsNil(o.EftRoutingNumber) {
		toSerialize["eft_routing_number"] = o.EftRoutingNumber
	}
	if !IsNil(o.SwiftCode) {
		toSerialize["swift_code"] = o.SwiftCode
	}
	if !IsNil(o.WireRoutingNumber) {
		toSerialize["wire_routing_number"] = o.WireRoutingNumber
	}
	return toSerialize, nil
}

type NullableAccountRouting struct {
	value *AccountRouting
	isSet bool
}

func (v NullableAccountRouting) Get() *AccountRouting {
	return v.value
}

func (v *NullableAccountRouting) Set(val *AccountRouting) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountRouting) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountRouting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountRouting(val *AccountRouting) *NullableAccountRouting {
	return &NullableAccountRouting{value: val, isSet: true}
}

func (v NullableAccountRouting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountRouting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


