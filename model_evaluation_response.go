/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EvaluationResponse struct for EvaluationResponse
type EvaluationResponse struct {
	EvaluationResult *EvaluationResult `json:"evaluation_result,omitempty"`
}

// NewEvaluationResponse instantiates a new EvaluationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEvaluationResponse() *EvaluationResponse {
	this := EvaluationResponse{}
	return &this
}

// NewEvaluationResponseWithDefaults instantiates a new EvaluationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEvaluationResponseWithDefaults() *EvaluationResponse {
	this := EvaluationResponse{}
	return &this
}

// GetEvaluationResult returns the EvaluationResult field value if set, zero value otherwise.
func (o *EvaluationResponse) GetEvaluationResult() EvaluationResult {
	if o == nil || o.EvaluationResult == nil {
		var ret EvaluationResult
		return ret
	}
	return *o.EvaluationResult
}

// GetEvaluationResultOk returns a tuple with the EvaluationResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvaluationResponse) GetEvaluationResultOk() (*EvaluationResult, bool) {
	if o == nil || o.EvaluationResult == nil {
		return nil, false
	}
	return o.EvaluationResult, true
}

// HasEvaluationResult returns a boolean if a field has been set.
func (o *EvaluationResponse) HasEvaluationResult() bool {
	if o != nil && o.EvaluationResult != nil {
		return true
	}

	return false
}

// SetEvaluationResult gets a reference to the given EvaluationResult and assigns it to the EvaluationResult field.
func (o *EvaluationResponse) SetEvaluationResult(v EvaluationResult) {
	o.EvaluationResult = &v
}

func (o EvaluationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EvaluationResult != nil {
		toSerialize["evaluation_result"] = o.EvaluationResult
	}
	return json.Marshal(toSerialize)
}

type NullableEvaluationResponse struct {
	value *EvaluationResponse
	isSet bool
}

func (v NullableEvaluationResponse) Get() *EvaluationResponse {
	return v.value
}

func (v *NullableEvaluationResponse) Set(val *EvaluationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEvaluationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEvaluationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEvaluationResponse(val *EvaluationResponse) *NullableEvaluationResponse {
	return &NullableEvaluationResponse{value: val, isSet: true}
}

func (v NullableEvaluationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEvaluationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


