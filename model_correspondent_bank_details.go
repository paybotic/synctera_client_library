/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.69.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CorrespondentBankDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorrespondentBankDetails{}

// CorrespondentBankDetails struct for CorrespondentBankDetails
type CorrespondentBankDetails struct {
	BankAddress Address `json:"bank_address"`
	// The name of the correspondent bank. 
	BankName string `json:"bank_name"`
	// The SWIFT code (also known as BIC code) used for international payments. 
	SwiftCode string `json:"swift_code"`
}

// NewCorrespondentBankDetails instantiates a new CorrespondentBankDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorrespondentBankDetails(bankAddress Address, bankName string, swiftCode string) *CorrespondentBankDetails {
	this := CorrespondentBankDetails{}
	this.BankAddress = bankAddress
	this.BankName = bankName
	this.SwiftCode = swiftCode
	return &this
}

// NewCorrespondentBankDetailsWithDefaults instantiates a new CorrespondentBankDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorrespondentBankDetailsWithDefaults() *CorrespondentBankDetails {
	this := CorrespondentBankDetails{}
	return &this
}

// GetBankAddress returns the BankAddress field value
func (o *CorrespondentBankDetails) GetBankAddress() Address {
	if o == nil {
		var ret Address
		return ret
	}

	return o.BankAddress
}

// GetBankAddressOk returns a tuple with the BankAddress field value
// and a boolean to check if the value has been set.
func (o *CorrespondentBankDetails) GetBankAddressOk() (*Address, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankAddress, true
}

// SetBankAddress sets field value
func (o *CorrespondentBankDetails) SetBankAddress(v Address) {
	o.BankAddress = v
}

// GetBankName returns the BankName field value
func (o *CorrespondentBankDetails) GetBankName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankName
}

// GetBankNameOk returns a tuple with the BankName field value
// and a boolean to check if the value has been set.
func (o *CorrespondentBankDetails) GetBankNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankName, true
}

// SetBankName sets field value
func (o *CorrespondentBankDetails) SetBankName(v string) {
	o.BankName = v
}

// GetSwiftCode returns the SwiftCode field value
func (o *CorrespondentBankDetails) GetSwiftCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SwiftCode
}

// GetSwiftCodeOk returns a tuple with the SwiftCode field value
// and a boolean to check if the value has been set.
func (o *CorrespondentBankDetails) GetSwiftCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SwiftCode, true
}

// SetSwiftCode sets field value
func (o *CorrespondentBankDetails) SetSwiftCode(v string) {
	o.SwiftCode = v
}

func (o CorrespondentBankDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorrespondentBankDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bank_address"] = o.BankAddress
	toSerialize["bank_name"] = o.BankName
	toSerialize["swift_code"] = o.SwiftCode
	return toSerialize, nil
}

type NullableCorrespondentBankDetails struct {
	value *CorrespondentBankDetails
	isSet bool
}

func (v NullableCorrespondentBankDetails) Get() *CorrespondentBankDetails {
	return v.value
}

func (v *NullableCorrespondentBankDetails) Set(val *CorrespondentBankDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCorrespondentBankDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCorrespondentBankDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorrespondentBankDetails(val *CorrespondentBankDetails) *NullableCorrespondentBankDetails {
	return &NullableCorrespondentBankDetails{value: val, isSet: true}
}

func (v NullableCorrespondentBankDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorrespondentBankDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


