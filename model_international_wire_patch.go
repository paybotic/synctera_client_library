/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.69.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InternationalWirePatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternationalWirePatch{}

// InternationalWirePatch struct for InternationalWirePatch
type InternationalWirePatch struct {
	// The new status of the wire transfer.
	Status string `json:"status"`
}

// NewInternationalWirePatch instantiates a new InternationalWirePatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternationalWirePatch(status string) *InternationalWirePatch {
	this := InternationalWirePatch{}
	this.Status = status
	return &this
}

// NewInternationalWirePatchWithDefaults instantiates a new InternationalWirePatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternationalWirePatchWithDefaults() *InternationalWirePatch {
	this := InternationalWirePatch{}
	return &this
}

// GetStatus returns the Status field value
func (o *InternationalWirePatch) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InternationalWirePatch) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InternationalWirePatch) SetStatus(v string) {
	o.Status = v
}

func (o InternationalWirePatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternationalWirePatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableInternationalWirePatch struct {
	value *InternationalWirePatch
	isSet bool
}

func (v NullableInternationalWirePatch) Get() *InternationalWirePatch {
	return v.value
}

func (v *NullableInternationalWirePatch) Set(val *InternationalWirePatch) {
	v.value = val
	v.isSet = true
}

func (v NullableInternationalWirePatch) IsSet() bool {
	return v.isSet
}

func (v *NullableInternationalWirePatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternationalWirePatch(val *InternationalWirePatch) *NullableInternationalWirePatch {
	return &NullableInternationalWirePatch{value: val, isSet: true}
}

func (v NullableInternationalWirePatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternationalWirePatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


