/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WireTransactionData Transaction metadata specific to transactions with type `WIRE`
type WireTransactionData struct {
	// The UUID if the customer associated with the wire payment
	CustomerId *string `json:"customer_id,omitempty"`
	// The file name the wire was sent in or received from
	FileName *string `json:"file_name,omitempty"`
	// The Synctera Wire payment UUID
	Id *string `json:"id,omitempty"`
	// The UUID of the account that the wire payment is being sent from
	OriginatingAccountId *string `json:"originating_account_id,omitempty"`
	// The UUID if the account that is receiving the wire
	ReceivingAccountId *string `json:"receiving_account_id,omitempty"`
	// The message to the recipient
	RecipientMessage *string `json:"recipient_message,omitempty"`
	// The wire Sender Reference Number for the transfer
	WireReferenceNumber *string `json:"wire_reference_number,omitempty"`
}

// NewWireTransactionData instantiates a new WireTransactionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWireTransactionData() *WireTransactionData {
	this := WireTransactionData{}
	return &this
}

// NewWireTransactionDataWithDefaults instantiates a new WireTransactionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWireTransactionDataWithDefaults() *WireTransactionData {
	this := WireTransactionData{}
	return &this
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *WireTransactionData) GetCustomerId() string {
	if o == nil || o.CustomerId == nil {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireTransactionData) GetCustomerIdOk() (*string, bool) {
	if o == nil || o.CustomerId == nil {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *WireTransactionData) HasCustomerId() bool {
	if o != nil && o.CustomerId != nil {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *WireTransactionData) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *WireTransactionData) GetFileName() string {
	if o == nil || o.FileName == nil {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireTransactionData) GetFileNameOk() (*string, bool) {
	if o == nil || o.FileName == nil {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *WireTransactionData) HasFileName() bool {
	if o != nil && o.FileName != nil {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *WireTransactionData) SetFileName(v string) {
	o.FileName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WireTransactionData) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireTransactionData) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WireTransactionData) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WireTransactionData) SetId(v string) {
	o.Id = &v
}

// GetOriginatingAccountId returns the OriginatingAccountId field value if set, zero value otherwise.
func (o *WireTransactionData) GetOriginatingAccountId() string {
	if o == nil || o.OriginatingAccountId == nil {
		var ret string
		return ret
	}
	return *o.OriginatingAccountId
}

// GetOriginatingAccountIdOk returns a tuple with the OriginatingAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireTransactionData) GetOriginatingAccountIdOk() (*string, bool) {
	if o == nil || o.OriginatingAccountId == nil {
		return nil, false
	}
	return o.OriginatingAccountId, true
}

// HasOriginatingAccountId returns a boolean if a field has been set.
func (o *WireTransactionData) HasOriginatingAccountId() bool {
	if o != nil && o.OriginatingAccountId != nil {
		return true
	}

	return false
}

// SetOriginatingAccountId gets a reference to the given string and assigns it to the OriginatingAccountId field.
func (o *WireTransactionData) SetOriginatingAccountId(v string) {
	o.OriginatingAccountId = &v
}

// GetReceivingAccountId returns the ReceivingAccountId field value if set, zero value otherwise.
func (o *WireTransactionData) GetReceivingAccountId() string {
	if o == nil || o.ReceivingAccountId == nil {
		var ret string
		return ret
	}
	return *o.ReceivingAccountId
}

// GetReceivingAccountIdOk returns a tuple with the ReceivingAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireTransactionData) GetReceivingAccountIdOk() (*string, bool) {
	if o == nil || o.ReceivingAccountId == nil {
		return nil, false
	}
	return o.ReceivingAccountId, true
}

// HasReceivingAccountId returns a boolean if a field has been set.
func (o *WireTransactionData) HasReceivingAccountId() bool {
	if o != nil && o.ReceivingAccountId != nil {
		return true
	}

	return false
}

// SetReceivingAccountId gets a reference to the given string and assigns it to the ReceivingAccountId field.
func (o *WireTransactionData) SetReceivingAccountId(v string) {
	o.ReceivingAccountId = &v
}

// GetRecipientMessage returns the RecipientMessage field value if set, zero value otherwise.
func (o *WireTransactionData) GetRecipientMessage() string {
	if o == nil || o.RecipientMessage == nil {
		var ret string
		return ret
	}
	return *o.RecipientMessage
}

// GetRecipientMessageOk returns a tuple with the RecipientMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireTransactionData) GetRecipientMessageOk() (*string, bool) {
	if o == nil || o.RecipientMessage == nil {
		return nil, false
	}
	return o.RecipientMessage, true
}

// HasRecipientMessage returns a boolean if a field has been set.
func (o *WireTransactionData) HasRecipientMessage() bool {
	if o != nil && o.RecipientMessage != nil {
		return true
	}

	return false
}

// SetRecipientMessage gets a reference to the given string and assigns it to the RecipientMessage field.
func (o *WireTransactionData) SetRecipientMessage(v string) {
	o.RecipientMessage = &v
}

// GetWireReferenceNumber returns the WireReferenceNumber field value if set, zero value otherwise.
func (o *WireTransactionData) GetWireReferenceNumber() string {
	if o == nil || o.WireReferenceNumber == nil {
		var ret string
		return ret
	}
	return *o.WireReferenceNumber
}

// GetWireReferenceNumberOk returns a tuple with the WireReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WireTransactionData) GetWireReferenceNumberOk() (*string, bool) {
	if o == nil || o.WireReferenceNumber == nil {
		return nil, false
	}
	return o.WireReferenceNumber, true
}

// HasWireReferenceNumber returns a boolean if a field has been set.
func (o *WireTransactionData) HasWireReferenceNumber() bool {
	if o != nil && o.WireReferenceNumber != nil {
		return true
	}

	return false
}

// SetWireReferenceNumber gets a reference to the given string and assigns it to the WireReferenceNumber field.
func (o *WireTransactionData) SetWireReferenceNumber(v string) {
	o.WireReferenceNumber = &v
}

func (o WireTransactionData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomerId != nil {
		toSerialize["customer_id"] = o.CustomerId
	}
	if o.FileName != nil {
		toSerialize["file_name"] = o.FileName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.OriginatingAccountId != nil {
		toSerialize["originating_account_id"] = o.OriginatingAccountId
	}
	if o.ReceivingAccountId != nil {
		toSerialize["receiving_account_id"] = o.ReceivingAccountId
	}
	if o.RecipientMessage != nil {
		toSerialize["recipient_message"] = o.RecipientMessage
	}
	if o.WireReferenceNumber != nil {
		toSerialize["wire_reference_number"] = o.WireReferenceNumber
	}
	return json.Marshal(toSerialize)
}

type NullableWireTransactionData struct {
	value *WireTransactionData
	isSet bool
}

func (v NullableWireTransactionData) Get() *WireTransactionData {
	return v.value
}

func (v *NullableWireTransactionData) Set(val *WireTransactionData) {
	v.value = val
	v.isSet = true
}

func (v NullableWireTransactionData) IsSet() bool {
	return v.isSet
}

func (v *NullableWireTransactionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWireTransactionData(val *WireTransactionData) *NullableWireTransactionData {
	return &NullableWireTransactionData{value: val, isSet: true}
}

func (v NullableWireTransactionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWireTransactionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


