/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.69.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExternalCardUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalCardUpdateRequest{}

// ExternalCardUpdateRequest struct for ExternalCardUpdateRequest
type ExternalCardUpdateRequest struct {
	Status ExternalCardStatus `json:"status"`
}

// NewExternalCardUpdateRequest instantiates a new ExternalCardUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalCardUpdateRequest(status ExternalCardStatus) *ExternalCardUpdateRequest {
	this := ExternalCardUpdateRequest{}
	this.Status = status
	return &this
}

// NewExternalCardUpdateRequestWithDefaults instantiates a new ExternalCardUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalCardUpdateRequestWithDefaults() *ExternalCardUpdateRequest {
	this := ExternalCardUpdateRequest{}
	return &this
}

// GetStatus returns the Status field value
func (o *ExternalCardUpdateRequest) GetStatus() ExternalCardStatus {
	if o == nil {
		var ret ExternalCardStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ExternalCardUpdateRequest) GetStatusOk() (*ExternalCardStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ExternalCardUpdateRequest) SetStatus(v ExternalCardStatus) {
	o.Status = v
}

func (o ExternalCardUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalCardUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableExternalCardUpdateRequest struct {
	value *ExternalCardUpdateRequest
	isSet bool
}

func (v NullableExternalCardUpdateRequest) Get() *ExternalCardUpdateRequest {
	return v.value
}

func (v *NullableExternalCardUpdateRequest) Set(val *ExternalCardUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalCardUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalCardUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalCardUpdateRequest(val *ExternalCardUpdateRequest) *NullableExternalCardUpdateRequest {
	return &NullableExternalCardUpdateRequest{value: val, isSet: true}
}

func (v NullableExternalCardUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalCardUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


