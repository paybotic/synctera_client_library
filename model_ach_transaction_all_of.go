/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AchTransactionAllOf struct for AchTransactionAllOf
type AchTransactionAllOf struct {
	AchTransaction AchTransactionData `json:"ach_transaction"`
	Subtype AchTransactionSubtypes `json:"subtype"`
}

// NewAchTransactionAllOf instantiates a new AchTransactionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAchTransactionAllOf(achTransaction AchTransactionData, subtype AchTransactionSubtypes) *AchTransactionAllOf {
	this := AchTransactionAllOf{}
	this.AchTransaction = achTransaction
	this.Subtype = subtype
	return &this
}

// NewAchTransactionAllOfWithDefaults instantiates a new AchTransactionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAchTransactionAllOfWithDefaults() *AchTransactionAllOf {
	this := AchTransactionAllOf{}
	return &this
}

// GetAchTransaction returns the AchTransaction field value
func (o *AchTransactionAllOf) GetAchTransaction() AchTransactionData {
	if o == nil {
		var ret AchTransactionData
		return ret
	}

	return o.AchTransaction
}

// GetAchTransactionOk returns a tuple with the AchTransaction field value
// and a boolean to check if the value has been set.
func (o *AchTransactionAllOf) GetAchTransactionOk() (*AchTransactionData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AchTransaction, true
}

// SetAchTransaction sets field value
func (o *AchTransactionAllOf) SetAchTransaction(v AchTransactionData) {
	o.AchTransaction = v
}

// GetSubtype returns the Subtype field value
func (o *AchTransactionAllOf) GetSubtype() AchTransactionSubtypes {
	if o == nil {
		var ret AchTransactionSubtypes
		return ret
	}

	return o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value
// and a boolean to check if the value has been set.
func (o *AchTransactionAllOf) GetSubtypeOk() (*AchTransactionSubtypes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subtype, true
}

// SetSubtype sets field value
func (o *AchTransactionAllOf) SetSubtype(v AchTransactionSubtypes) {
	o.Subtype = v
}

func (o AchTransactionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ach_transaction"] = o.AchTransaction
	}
	if true {
		toSerialize["subtype"] = o.Subtype
	}
	return json.Marshal(toSerialize)
}

type NullableAchTransactionAllOf struct {
	value *AchTransactionAllOf
	isSet bool
}

func (v NullableAchTransactionAllOf) Get() *AchTransactionAllOf {
	return v.value
}

func (v *NullableAchTransactionAllOf) Set(val *AchTransactionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAchTransactionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAchTransactionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAchTransactionAllOf(val *AchTransactionAllOf) *NullableAchTransactionAllOf {
	return &NullableAchTransactionAllOf{value: val, isSet: true}
}

func (v NullableAchTransactionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAchTransactionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


