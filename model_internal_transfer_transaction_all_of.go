/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.32.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InternalTransferTransactionAllOf struct for InternalTransferTransactionAllOf
type InternalTransferTransactionAllOf struct {
	InternalTransferTransaction *InternalTransferTransactionData    `json:"internal_transfer_transaction,omitempty"`
	Subtype                     InternalTransferTransactionSubtypes `json:"subtype"`
}

// NewInternalTransferTransactionAllOf instantiates a new InternalTransferTransactionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalTransferTransactionAllOf(subtype InternalTransferTransactionSubtypes) *InternalTransferTransactionAllOf {
	this := InternalTransferTransactionAllOf{}
	this.Subtype = subtype
	return &this
}

// NewInternalTransferTransactionAllOfWithDefaults instantiates a new InternalTransferTransactionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalTransferTransactionAllOfWithDefaults() *InternalTransferTransactionAllOf {
	this := InternalTransferTransactionAllOf{}
	return &this
}

// GetInternalTransferTransaction returns the InternalTransferTransaction field value if set, zero value otherwise.
func (o *InternalTransferTransactionAllOf) GetInternalTransferTransaction() InternalTransferTransactionData {
	if o == nil || o.InternalTransferTransaction == nil {
		var ret InternalTransferTransactionData
		return ret
	}
	return *o.InternalTransferTransaction
}

// GetInternalTransferTransactionOk returns a tuple with the InternalTransferTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalTransferTransactionAllOf) GetInternalTransferTransactionOk() (*InternalTransferTransactionData, bool) {
	if o == nil || o.InternalTransferTransaction == nil {
		return nil, false
	}
	return o.InternalTransferTransaction, true
}

// HasInternalTransferTransaction returns a boolean if a field has been set.
func (o *InternalTransferTransactionAllOf) HasInternalTransferTransaction() bool {
	if o != nil && o.InternalTransferTransaction != nil {
		return true
	}

	return false
}

// SetInternalTransferTransaction gets a reference to the given InternalTransferTransactionData and assigns it to the InternalTransferTransaction field.
func (o *InternalTransferTransactionAllOf) SetInternalTransferTransaction(v InternalTransferTransactionData) {
	o.InternalTransferTransaction = &v
}

// GetSubtype returns the Subtype field value
func (o *InternalTransferTransactionAllOf) GetSubtype() InternalTransferTransactionSubtypes {
	if o == nil {
		var ret InternalTransferTransactionSubtypes
		return ret
	}

	return o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value
// and a boolean to check if the value has been set.
func (o *InternalTransferTransactionAllOf) GetSubtypeOk() (*InternalTransferTransactionSubtypes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subtype, true
}

// SetSubtype sets field value
func (o *InternalTransferTransactionAllOf) SetSubtype(v InternalTransferTransactionSubtypes) {
	o.Subtype = v
}

func (o InternalTransferTransactionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InternalTransferTransaction != nil {
		toSerialize["internal_transfer_transaction"] = o.InternalTransferTransaction
	}
	if true {
		toSerialize["subtype"] = o.Subtype
	}
	return json.Marshal(toSerialize)
}

type NullableInternalTransferTransactionAllOf struct {
	value *InternalTransferTransactionAllOf
	isSet bool
}

func (v NullableInternalTransferTransactionAllOf) Get() *InternalTransferTransactionAllOf {
	return v.value
}

func (v *NullableInternalTransferTransactionAllOf) Set(val *InternalTransferTransactionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalTransferTransactionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalTransferTransactionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalTransferTransactionAllOf(val *InternalTransferTransactionAllOf) *NullableInternalTransferTransactionAllOf {
	return &NullableInternalTransferTransactionAllOf{value: val, isSet: true}
}

func (v NullableInternalTransferTransactionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalTransferTransactionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
