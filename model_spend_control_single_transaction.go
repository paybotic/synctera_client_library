/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.69.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SpendControlSingleTransaction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpendControlSingleTransaction{}

// SpendControlSingleTransaction struct for SpendControlSingleTransaction
type SpendControlSingleTransaction struct {
	TimeRangeType string `json:"time_range_type"`
}

// NewSpendControlSingleTransaction instantiates a new SpendControlSingleTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpendControlSingleTransaction(timeRangeType string) *SpendControlSingleTransaction {
	this := SpendControlSingleTransaction{}
	this.TimeRangeType = timeRangeType
	return &this
}

// NewSpendControlSingleTransactionWithDefaults instantiates a new SpendControlSingleTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpendControlSingleTransactionWithDefaults() *SpendControlSingleTransaction {
	this := SpendControlSingleTransaction{}
	return &this
}

// GetTimeRangeType returns the TimeRangeType field value
func (o *SpendControlSingleTransaction) GetTimeRangeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeRangeType
}

// GetTimeRangeTypeOk returns a tuple with the TimeRangeType field value
// and a boolean to check if the value has been set.
func (o *SpendControlSingleTransaction) GetTimeRangeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeRangeType, true
}

// SetTimeRangeType sets field value
func (o *SpendControlSingleTransaction) SetTimeRangeType(v string) {
	o.TimeRangeType = v
}

func (o SpendControlSingleTransaction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpendControlSingleTransaction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["time_range_type"] = o.TimeRangeType
	return toSerialize, nil
}

type NullableSpendControlSingleTransaction struct {
	value *SpendControlSingleTransaction
	isSet bool
}

func (v NullableSpendControlSingleTransaction) Get() *SpendControlSingleTransaction {
	return v.value
}

func (v *NullableSpendControlSingleTransaction) Set(val *SpendControlSingleTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableSpendControlSingleTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableSpendControlSingleTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpendControlSingleTransaction(val *SpendControlSingleTransaction) *NullableSpendControlSingleTransaction {
	return &NullableSpendControlSingleTransaction{value: val, isSet: true}
}

func (v NullableSpendControlSingleTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpendControlSingleTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


