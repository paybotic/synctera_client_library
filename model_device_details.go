/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.69.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeviceDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeviceDetails{}

// DeviceDetails Optionally provided browser device details, used as a fallback in case there is an issue with Device Data Collection. Note that minimal field validation is performed.
type DeviceDetails struct {
	// The device's color palette bit depth, in bits per pixel
	ColorDepth int32 `json:"color_depth"`
	// The exact contents of the browser's HTTP accept headers
	Header string `json:"header"`
	// The device's IP address (either IPv4 or IPv6 formats are acceptable)
	IpAddress string `json:"ip_address"`
	// If the browser has the ability to execute Java (value returned from `navigator.javaEnabled` property)
	JavaEnabled bool `json:"java_enabled"`
	// If the browser has the ability to execute JavaScript (value returned from `navigator.javaScriptEnabled` property)
	JavascriptEnabled bool `json:"javascript_enabled"`
	// The browser's language as defined in IETF BCP47
	Language string `json:"language"`
	// The total height of the device's screen, in pixels
	ScreenHeight int32 `json:"screen_height"`
	// The total width of the device's screen, in pixels
	ScreenWidth int32 `json:"screen_width"`
	// The offset from UTC of the device's local timezone, in minutes
	Timezone int32 `json:"timezone"`
	// The exact contents of the HTTP user agent header
	UserAgent string `json:"user_agent"`
}

// NewDeviceDetails instantiates a new DeviceDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceDetails(colorDepth int32, header string, ipAddress string, javaEnabled bool, javascriptEnabled bool, language string, screenHeight int32, screenWidth int32, timezone int32, userAgent string) *DeviceDetails {
	this := DeviceDetails{}
	this.ColorDepth = colorDepth
	this.Header = header
	this.IpAddress = ipAddress
	this.JavaEnabled = javaEnabled
	this.JavascriptEnabled = javascriptEnabled
	this.Language = language
	this.ScreenHeight = screenHeight
	this.ScreenWidth = screenWidth
	this.Timezone = timezone
	this.UserAgent = userAgent
	return &this
}

// NewDeviceDetailsWithDefaults instantiates a new DeviceDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceDetailsWithDefaults() *DeviceDetails {
	this := DeviceDetails{}
	return &this
}

// GetColorDepth returns the ColorDepth field value
func (o *DeviceDetails) GetColorDepth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ColorDepth
}

// GetColorDepthOk returns a tuple with the ColorDepth field value
// and a boolean to check if the value has been set.
func (o *DeviceDetails) GetColorDepthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ColorDepth, true
}

// SetColorDepth sets field value
func (o *DeviceDetails) SetColorDepth(v int32) {
	o.ColorDepth = v
}

// GetHeader returns the Header field value
func (o *DeviceDetails) GetHeader() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Header
}

// GetHeaderOk returns a tuple with the Header field value
// and a boolean to check if the value has been set.
func (o *DeviceDetails) GetHeaderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Header, true
}

// SetHeader sets field value
func (o *DeviceDetails) SetHeader(v string) {
	o.Header = v
}

// GetIpAddress returns the IpAddress field value
func (o *DeviceDetails) GetIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
func (o *DeviceDetails) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *DeviceDetails) SetIpAddress(v string) {
	o.IpAddress = v
}

// GetJavaEnabled returns the JavaEnabled field value
func (o *DeviceDetails) GetJavaEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.JavaEnabled
}

// GetJavaEnabledOk returns a tuple with the JavaEnabled field value
// and a boolean to check if the value has been set.
func (o *DeviceDetails) GetJavaEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JavaEnabled, true
}

// SetJavaEnabled sets field value
func (o *DeviceDetails) SetJavaEnabled(v bool) {
	o.JavaEnabled = v
}

// GetJavascriptEnabled returns the JavascriptEnabled field value
func (o *DeviceDetails) GetJavascriptEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.JavascriptEnabled
}

// GetJavascriptEnabledOk returns a tuple with the JavascriptEnabled field value
// and a boolean to check if the value has been set.
func (o *DeviceDetails) GetJavascriptEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JavascriptEnabled, true
}

// SetJavascriptEnabled sets field value
func (o *DeviceDetails) SetJavascriptEnabled(v bool) {
	o.JavascriptEnabled = v
}

// GetLanguage returns the Language field value
func (o *DeviceDetails) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *DeviceDetails) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *DeviceDetails) SetLanguage(v string) {
	o.Language = v
}

// GetScreenHeight returns the ScreenHeight field value
func (o *DeviceDetails) GetScreenHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ScreenHeight
}

// GetScreenHeightOk returns a tuple with the ScreenHeight field value
// and a boolean to check if the value has been set.
func (o *DeviceDetails) GetScreenHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScreenHeight, true
}

// SetScreenHeight sets field value
func (o *DeviceDetails) SetScreenHeight(v int32) {
	o.ScreenHeight = v
}

// GetScreenWidth returns the ScreenWidth field value
func (o *DeviceDetails) GetScreenWidth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ScreenWidth
}

// GetScreenWidthOk returns a tuple with the ScreenWidth field value
// and a boolean to check if the value has been set.
func (o *DeviceDetails) GetScreenWidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScreenWidth, true
}

// SetScreenWidth sets field value
func (o *DeviceDetails) SetScreenWidth(v int32) {
	o.ScreenWidth = v
}

// GetTimezone returns the Timezone field value
func (o *DeviceDetails) GetTimezone() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *DeviceDetails) GetTimezoneOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *DeviceDetails) SetTimezone(v int32) {
	o.Timezone = v
}

// GetUserAgent returns the UserAgent field value
func (o *DeviceDetails) GetUserAgent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value
// and a boolean to check if the value has been set.
func (o *DeviceDetails) GetUserAgentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserAgent, true
}

// SetUserAgent sets field value
func (o *DeviceDetails) SetUserAgent(v string) {
	o.UserAgent = v
}

func (o DeviceDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeviceDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["color_depth"] = o.ColorDepth
	toSerialize["header"] = o.Header
	toSerialize["ip_address"] = o.IpAddress
	toSerialize["java_enabled"] = o.JavaEnabled
	toSerialize["javascript_enabled"] = o.JavascriptEnabled
	toSerialize["language"] = o.Language
	toSerialize["screen_height"] = o.ScreenHeight
	toSerialize["screen_width"] = o.ScreenWidth
	toSerialize["timezone"] = o.Timezone
	toSerialize["user_agent"] = o.UserAgent
	return toSerialize, nil
}

type NullableDeviceDetails struct {
	value *DeviceDetails
	isSet bool
}

func (v NullableDeviceDetails) Get() *DeviceDetails {
	return v.value
}

func (v *NullableDeviceDetails) Set(val *DeviceDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceDetails(val *DeviceDetails) *NullableDeviceDetails {
	return &NullableDeviceDetails{value: val, isSet: true}
}

func (v NullableDeviceDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


