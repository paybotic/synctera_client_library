/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.32.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EnhancedTransactionData Enriched transaction metadata
type EnhancedTransactionData struct {
	Category            *string                                   `json:"category,omitempty"`
	EnhancedDescription *string                                   `json:"enhanced_description,omitempty"`
	EnhancedRaw         []EnhancedTransactionDataEnhancedRawInner `json:"enhanced_raw,omitempty"`
}

// NewEnhancedTransactionData instantiates a new EnhancedTransactionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnhancedTransactionData() *EnhancedTransactionData {
	this := EnhancedTransactionData{}
	return &this
}

// NewEnhancedTransactionDataWithDefaults instantiates a new EnhancedTransactionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnhancedTransactionDataWithDefaults() *EnhancedTransactionData {
	this := EnhancedTransactionData{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *EnhancedTransactionData) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionData) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *EnhancedTransactionData) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *EnhancedTransactionData) SetCategory(v string) {
	o.Category = &v
}

// GetEnhancedDescription returns the EnhancedDescription field value if set, zero value otherwise.
func (o *EnhancedTransactionData) GetEnhancedDescription() string {
	if o == nil || o.EnhancedDescription == nil {
		var ret string
		return ret
	}
	return *o.EnhancedDescription
}

// GetEnhancedDescriptionOk returns a tuple with the EnhancedDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionData) GetEnhancedDescriptionOk() (*string, bool) {
	if o == nil || o.EnhancedDescription == nil {
		return nil, false
	}
	return o.EnhancedDescription, true
}

// HasEnhancedDescription returns a boolean if a field has been set.
func (o *EnhancedTransactionData) HasEnhancedDescription() bool {
	if o != nil && o.EnhancedDescription != nil {
		return true
	}

	return false
}

// SetEnhancedDescription gets a reference to the given string and assigns it to the EnhancedDescription field.
func (o *EnhancedTransactionData) SetEnhancedDescription(v string) {
	o.EnhancedDescription = &v
}

// GetEnhancedRaw returns the EnhancedRaw field value if set, zero value otherwise.
func (o *EnhancedTransactionData) GetEnhancedRaw() []EnhancedTransactionDataEnhancedRawInner {
	if o == nil || o.EnhancedRaw == nil {
		var ret []EnhancedTransactionDataEnhancedRawInner
		return ret
	}
	return o.EnhancedRaw
}

// GetEnhancedRawOk returns a tuple with the EnhancedRaw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnhancedTransactionData) GetEnhancedRawOk() ([]EnhancedTransactionDataEnhancedRawInner, bool) {
	if o == nil || o.EnhancedRaw == nil {
		return nil, false
	}
	return o.EnhancedRaw, true
}

// HasEnhancedRaw returns a boolean if a field has been set.
func (o *EnhancedTransactionData) HasEnhancedRaw() bool {
	if o != nil && o.EnhancedRaw != nil {
		return true
	}

	return false
}

// SetEnhancedRaw gets a reference to the given []EnhancedTransactionDataEnhancedRawInner and assigns it to the EnhancedRaw field.
func (o *EnhancedTransactionData) SetEnhancedRaw(v []EnhancedTransactionDataEnhancedRawInner) {
	o.EnhancedRaw = v
}

func (o EnhancedTransactionData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.EnhancedDescription != nil {
		toSerialize["enhanced_description"] = o.EnhancedDescription
	}
	if o.EnhancedRaw != nil {
		toSerialize["enhanced_raw"] = o.EnhancedRaw
	}
	return json.Marshal(toSerialize)
}

type NullableEnhancedTransactionData struct {
	value *EnhancedTransactionData
	isSet bool
}

func (v NullableEnhancedTransactionData) Get() *EnhancedTransactionData {
	return v.value
}

func (v *NullableEnhancedTransactionData) Set(val *EnhancedTransactionData) {
	v.value = val
	v.isSet = true
}

func (v NullableEnhancedTransactionData) IsSet() bool {
	return v.isSet
}

func (v *NullableEnhancedTransactionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnhancedTransactionData(val *EnhancedTransactionData) *NullableEnhancedTransactionData {
	return &NullableEnhancedTransactionData{value: val, isSet: true}
}

func (v NullableEnhancedTransactionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnhancedTransactionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
