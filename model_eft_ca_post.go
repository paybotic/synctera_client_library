/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.69.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EftCaPost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EftCaPost{}

// EftCaPost Properties for creating a transfer
type EftCaPost struct {
	// Transfer amount in cents
	Amount int64 `json:"amount"`
	// The UUID of the Synctera customer resource that is the originator of the transfer. 
	CustomerId string `json:"customer_id"`
	// Debit or credit sign
	DcSign string `json:"dc_sign"`
	// Additional information to be added to the transfer
	SourceData map[string]interface{} `json:"source_data,omitempty"`
	// The three digit transaction code that identifies the type of transaction. More information can be found here: https://www.payments.ca/sites/default/files/standard007eng.pdf. 
	TransactionCode string `json:"transaction_code"`
	// The UUID of the Synctera external account resource that is the destination of the transfer. This external account represents the account on the destination bank's platform. 
	DestinationAccountId string `json:"destination_account_id"`
	// The official name of the account owner of the destination account. 
	DestinationAccountOwnerName string `json:"destination_account_owner_name"`
	// The effective date of the transaction once it gets posted
	EffectiveDate *string `json:"effective_date,omitempty"`
	// Send the same day (use only is_same_day without specific effective_date).
	IsSameDay *bool `json:"is_same_day,omitempty"`
	// The UUID of the Synctera account resource originating the transfer. 
	OriginatingAccountId string `json:"originating_account_id"`
	// The official name of the account owner of the originating account. 
	OriginatingAccountOwnerName string `json:"originating_account_owner_name"`
}

// NewEftCaPost instantiates a new EftCaPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEftCaPost(amount int64, customerId string, dcSign string, transactionCode string, destinationAccountId string, destinationAccountOwnerName string, originatingAccountId string, originatingAccountOwnerName string) *EftCaPost {
	this := EftCaPost{}
	this.Amount = amount
	this.CustomerId = customerId
	this.DcSign = dcSign
	this.TransactionCode = transactionCode
	this.DestinationAccountId = destinationAccountId
	this.DestinationAccountOwnerName = destinationAccountOwnerName
	this.OriginatingAccountId = originatingAccountId
	this.OriginatingAccountOwnerName = originatingAccountOwnerName
	return &this
}

// NewEftCaPostWithDefaults instantiates a new EftCaPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEftCaPostWithDefaults() *EftCaPost {
	this := EftCaPost{}
	return &this
}

// GetAmount returns the Amount field value
func (o *EftCaPost) GetAmount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *EftCaPost) GetAmountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *EftCaPost) SetAmount(v int64) {
	o.Amount = v
}

// GetCustomerId returns the CustomerId field value
func (o *EftCaPost) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *EftCaPost) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *EftCaPost) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetDcSign returns the DcSign field value
func (o *EftCaPost) GetDcSign() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DcSign
}

// GetDcSignOk returns a tuple with the DcSign field value
// and a boolean to check if the value has been set.
func (o *EftCaPost) GetDcSignOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DcSign, true
}

// SetDcSign sets field value
func (o *EftCaPost) SetDcSign(v string) {
	o.DcSign = v
}

// GetSourceData returns the SourceData field value if set, zero value otherwise.
func (o *EftCaPost) GetSourceData() map[string]interface{} {
	if o == nil || IsNil(o.SourceData) {
		var ret map[string]interface{}
		return ret
	}
	return o.SourceData
}

// GetSourceDataOk returns a tuple with the SourceData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EftCaPost) GetSourceDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.SourceData) {
		return map[string]interface{}{}, false
	}
	return o.SourceData, true
}

// HasSourceData returns a boolean if a field has been set.
func (o *EftCaPost) HasSourceData() bool {
	if o != nil && !IsNil(o.SourceData) {
		return true
	}

	return false
}

// SetSourceData gets a reference to the given map[string]interface{} and assigns it to the SourceData field.
func (o *EftCaPost) SetSourceData(v map[string]interface{}) {
	o.SourceData = v
}

// GetTransactionCode returns the TransactionCode field value
func (o *EftCaPost) GetTransactionCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value
// and a boolean to check if the value has been set.
func (o *EftCaPost) GetTransactionCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionCode, true
}

// SetTransactionCode sets field value
func (o *EftCaPost) SetTransactionCode(v string) {
	o.TransactionCode = v
}

// GetDestinationAccountId returns the DestinationAccountId field value
func (o *EftCaPost) GetDestinationAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationAccountId
}

// GetDestinationAccountIdOk returns a tuple with the DestinationAccountId field value
// and a boolean to check if the value has been set.
func (o *EftCaPost) GetDestinationAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationAccountId, true
}

// SetDestinationAccountId sets field value
func (o *EftCaPost) SetDestinationAccountId(v string) {
	o.DestinationAccountId = v
}

// GetDestinationAccountOwnerName returns the DestinationAccountOwnerName field value
func (o *EftCaPost) GetDestinationAccountOwnerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationAccountOwnerName
}

// GetDestinationAccountOwnerNameOk returns a tuple with the DestinationAccountOwnerName field value
// and a boolean to check if the value has been set.
func (o *EftCaPost) GetDestinationAccountOwnerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationAccountOwnerName, true
}

// SetDestinationAccountOwnerName sets field value
func (o *EftCaPost) SetDestinationAccountOwnerName(v string) {
	o.DestinationAccountOwnerName = v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *EftCaPost) GetEffectiveDate() string {
	if o == nil || IsNil(o.EffectiveDate) {
		var ret string
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EftCaPost) GetEffectiveDateOk() (*string, bool) {
	if o == nil || IsNil(o.EffectiveDate) {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *EftCaPost) HasEffectiveDate() bool {
	if o != nil && !IsNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given string and assigns it to the EffectiveDate field.
func (o *EftCaPost) SetEffectiveDate(v string) {
	o.EffectiveDate = &v
}

// GetIsSameDay returns the IsSameDay field value if set, zero value otherwise.
func (o *EftCaPost) GetIsSameDay() bool {
	if o == nil || IsNil(o.IsSameDay) {
		var ret bool
		return ret
	}
	return *o.IsSameDay
}

// GetIsSameDayOk returns a tuple with the IsSameDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EftCaPost) GetIsSameDayOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSameDay) {
		return nil, false
	}
	return o.IsSameDay, true
}

// HasIsSameDay returns a boolean if a field has been set.
func (o *EftCaPost) HasIsSameDay() bool {
	if o != nil && !IsNil(o.IsSameDay) {
		return true
	}

	return false
}

// SetIsSameDay gets a reference to the given bool and assigns it to the IsSameDay field.
func (o *EftCaPost) SetIsSameDay(v bool) {
	o.IsSameDay = &v
}

// GetOriginatingAccountId returns the OriginatingAccountId field value
func (o *EftCaPost) GetOriginatingAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginatingAccountId
}

// GetOriginatingAccountIdOk returns a tuple with the OriginatingAccountId field value
// and a boolean to check if the value has been set.
func (o *EftCaPost) GetOriginatingAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginatingAccountId, true
}

// SetOriginatingAccountId sets field value
func (o *EftCaPost) SetOriginatingAccountId(v string) {
	o.OriginatingAccountId = v
}

// GetOriginatingAccountOwnerName returns the OriginatingAccountOwnerName field value
func (o *EftCaPost) GetOriginatingAccountOwnerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginatingAccountOwnerName
}

// GetOriginatingAccountOwnerNameOk returns a tuple with the OriginatingAccountOwnerName field value
// and a boolean to check if the value has been set.
func (o *EftCaPost) GetOriginatingAccountOwnerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginatingAccountOwnerName, true
}

// SetOriginatingAccountOwnerName sets field value
func (o *EftCaPost) SetOriginatingAccountOwnerName(v string) {
	o.OriginatingAccountOwnerName = v
}

func (o EftCaPost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EftCaPost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	toSerialize["customer_id"] = o.CustomerId
	toSerialize["dc_sign"] = o.DcSign
	if !IsNil(o.SourceData) {
		toSerialize["source_data"] = o.SourceData
	}
	toSerialize["transaction_code"] = o.TransactionCode
	toSerialize["destination_account_id"] = o.DestinationAccountId
	toSerialize["destination_account_owner_name"] = o.DestinationAccountOwnerName
	if !IsNil(o.EffectiveDate) {
		toSerialize["effective_date"] = o.EffectiveDate
	}
	if !IsNil(o.IsSameDay) {
		toSerialize["is_same_day"] = o.IsSameDay
	}
	toSerialize["originating_account_id"] = o.OriginatingAccountId
	toSerialize["originating_account_owner_name"] = o.OriginatingAccountOwnerName
	return toSerialize, nil
}

type NullableEftCaPost struct {
	value *EftCaPost
	isSet bool
}

func (v NullableEftCaPost) Get() *EftCaPost {
	return v.value
}

func (v *NullableEftCaPost) Set(val *EftCaPost) {
	v.value = val
	v.isSet = true
}

func (v NullableEftCaPost) IsSet() bool {
	return v.isSet
}

func (v *NullableEftCaPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEftCaPost(val *EftCaPost) *NullableEftCaPost {
	return &NullableEftCaPost{value: val, isSet: true}
}

func (v NullableEftCaPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEftCaPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


