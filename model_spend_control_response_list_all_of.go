/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.32.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SpendControlResponseListAllOf struct for SpendControlResponseListAllOf
type SpendControlResponseListAllOf struct {
	// Array of Spend Controls
	SpendControls []SpendControlResponse `json:"spend_controls"`
}

// NewSpendControlResponseListAllOf instantiates a new SpendControlResponseListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpendControlResponseListAllOf(spendControls []SpendControlResponse) *SpendControlResponseListAllOf {
	this := SpendControlResponseListAllOf{}
	this.SpendControls = spendControls
	return &this
}

// NewSpendControlResponseListAllOfWithDefaults instantiates a new SpendControlResponseListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpendControlResponseListAllOfWithDefaults() *SpendControlResponseListAllOf {
	this := SpendControlResponseListAllOf{}
	return &this
}

// GetSpendControls returns the SpendControls field value
func (o *SpendControlResponseListAllOf) GetSpendControls() []SpendControlResponse {
	if o == nil {
		var ret []SpendControlResponse
		return ret
	}

	return o.SpendControls
}

// GetSpendControlsOk returns a tuple with the SpendControls field value
// and a boolean to check if the value has been set.
func (o *SpendControlResponseListAllOf) GetSpendControlsOk() ([]SpendControlResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpendControls, true
}

// SetSpendControls sets field value
func (o *SpendControlResponseListAllOf) SetSpendControls(v []SpendControlResponse) {
	o.SpendControls = v
}

func (o SpendControlResponseListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["spend_controls"] = o.SpendControls
	}
	return json.Marshal(toSerialize)
}

type NullableSpendControlResponseListAllOf struct {
	value *SpendControlResponseListAllOf
	isSet bool
}

func (v NullableSpendControlResponseListAllOf) Get() *SpendControlResponseListAllOf {
	return v.value
}

func (v *NullableSpendControlResponseListAllOf) Set(val *SpendControlResponseListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSpendControlResponseListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSpendControlResponseListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpendControlResponseListAllOf(val *SpendControlResponseListAllOf) *NullableSpendControlResponseListAllOf {
	return &NullableSpendControlResponseListAllOf{value: val, isSet: true}
}

func (v NullableSpendControlResponseListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpendControlResponseListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


