/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.69.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ResponseLicense type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseLicense{}

// ResponseLicense struct for ResponseLicense
type ResponseLicense struct {
	// Unique ID for the business. Exactly one of `business_id` or `person_id` must be set. 
	BusinessId *string `json:"business_id,omitempty"`
	// The date and time the license resource  was created.
	CreationTime time.Time `json:"creation_time"`
	CustomerId *string `json:"customer_id,omitempty"`
	// License record unique id
	Id string `json:"id"`
	// The date and time the license resource was last updated.
	LastUpdatedTime time.Time `json:"last_updated_time"`
	// Timestamp of the last time the license was verified
	LastVerifiedTime *time.Time `json:"last_verified_time,omitempty"`
	// The classification of the license
	LicenseClassification *string `json:"license_classification,omitempty"`
	// The date on which the license will expire
	LicenseExpirationDate *string `json:"license_expiration_date,omitempty"`
	// The date on which the license was issued
	LicenseIssuanceDate *string `json:"license_issuance_date,omitempty"`
	// The entity's license number
	LicenseNumber string `json:"license_number"`
	LicenseType LicenseType `json:"license_type"`
	// Free-form text describing the type of the license
	LicenseTypeDescription *string `json:"license_type_description,omitempty"`
	// The address of the entity that holds the license as reported by the verifying vendor
	LicenseeAddress *string `json:"licensee_address,omitempty"`
	// The name of the entity that holds the license that's reported by the verifying vendor
	LicenseeName *string `json:"licensee_name,omitempty"`
	// The name of the licensing body that granted the license
	LicensingAuthority *string `json:"licensing_authority,omitempty"`
	// The status of the license
	Status string `json:"status"`
	// The id of the tenant containing the resource. This is relevant for Fintechs that have multiple workspaces. 
	Tenant string `json:"tenant"`
}

// NewResponseLicense instantiates a new ResponseLicense object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseLicense(creationTime time.Time, id string, lastUpdatedTime time.Time, licenseNumber string, licenseType LicenseType, status string, tenant string) *ResponseLicense {
	this := ResponseLicense{}
	this.CreationTime = creationTime
	this.Id = id
	this.LastUpdatedTime = lastUpdatedTime
	this.LicenseNumber = licenseNumber
	this.LicenseType = licenseType
	this.Status = status
	this.Tenant = tenant
	return &this
}

// NewResponseLicenseWithDefaults instantiates a new ResponseLicense object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseLicenseWithDefaults() *ResponseLicense {
	this := ResponseLicense{}
	return &this
}

// GetBusinessId returns the BusinessId field value if set, zero value otherwise.
func (o *ResponseLicense) GetBusinessId() string {
	if o == nil || IsNil(o.BusinessId) {
		var ret string
		return ret
	}
	return *o.BusinessId
}

// GetBusinessIdOk returns a tuple with the BusinessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetBusinessIdOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessId) {
		return nil, false
	}
	return o.BusinessId, true
}

// HasBusinessId returns a boolean if a field has been set.
func (o *ResponseLicense) HasBusinessId() bool {
	if o != nil && !IsNil(o.BusinessId) {
		return true
	}

	return false
}

// SetBusinessId gets a reference to the given string and assigns it to the BusinessId field.
func (o *ResponseLicense) SetBusinessId(v string) {
	o.BusinessId = &v
}

// GetCreationTime returns the CreationTime field value
func (o *ResponseLicense) GetCreationTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreationTime, true
}

// SetCreationTime sets field value
func (o *ResponseLicense) SetCreationTime(v time.Time) {
	o.CreationTime = v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *ResponseLicense) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *ResponseLicense) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *ResponseLicense) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetId returns the Id field value
func (o *ResponseLicense) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ResponseLicense) SetId(v string) {
	o.Id = v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value
func (o *ResponseLicense) GetLastUpdatedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetLastUpdatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastUpdatedTime, true
}

// SetLastUpdatedTime sets field value
func (o *ResponseLicense) SetLastUpdatedTime(v time.Time) {
	o.LastUpdatedTime = v
}

// GetLastVerifiedTime returns the LastVerifiedTime field value if set, zero value otherwise.
func (o *ResponseLicense) GetLastVerifiedTime() time.Time {
	if o == nil || IsNil(o.LastVerifiedTime) {
		var ret time.Time
		return ret
	}
	return *o.LastVerifiedTime
}

// GetLastVerifiedTimeOk returns a tuple with the LastVerifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetLastVerifiedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastVerifiedTime) {
		return nil, false
	}
	return o.LastVerifiedTime, true
}

// HasLastVerifiedTime returns a boolean if a field has been set.
func (o *ResponseLicense) HasLastVerifiedTime() bool {
	if o != nil && !IsNil(o.LastVerifiedTime) {
		return true
	}

	return false
}

// SetLastVerifiedTime gets a reference to the given time.Time and assigns it to the LastVerifiedTime field.
func (o *ResponseLicense) SetLastVerifiedTime(v time.Time) {
	o.LastVerifiedTime = &v
}

// GetLicenseClassification returns the LicenseClassification field value if set, zero value otherwise.
func (o *ResponseLicense) GetLicenseClassification() string {
	if o == nil || IsNil(o.LicenseClassification) {
		var ret string
		return ret
	}
	return *o.LicenseClassification
}

// GetLicenseClassificationOk returns a tuple with the LicenseClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetLicenseClassificationOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseClassification) {
		return nil, false
	}
	return o.LicenseClassification, true
}

// HasLicenseClassification returns a boolean if a field has been set.
func (o *ResponseLicense) HasLicenseClassification() bool {
	if o != nil && !IsNil(o.LicenseClassification) {
		return true
	}

	return false
}

// SetLicenseClassification gets a reference to the given string and assigns it to the LicenseClassification field.
func (o *ResponseLicense) SetLicenseClassification(v string) {
	o.LicenseClassification = &v
}

// GetLicenseExpirationDate returns the LicenseExpirationDate field value if set, zero value otherwise.
func (o *ResponseLicense) GetLicenseExpirationDate() string {
	if o == nil || IsNil(o.LicenseExpirationDate) {
		var ret string
		return ret
	}
	return *o.LicenseExpirationDate
}

// GetLicenseExpirationDateOk returns a tuple with the LicenseExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetLicenseExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseExpirationDate) {
		return nil, false
	}
	return o.LicenseExpirationDate, true
}

// HasLicenseExpirationDate returns a boolean if a field has been set.
func (o *ResponseLicense) HasLicenseExpirationDate() bool {
	if o != nil && !IsNil(o.LicenseExpirationDate) {
		return true
	}

	return false
}

// SetLicenseExpirationDate gets a reference to the given string and assigns it to the LicenseExpirationDate field.
func (o *ResponseLicense) SetLicenseExpirationDate(v string) {
	o.LicenseExpirationDate = &v
}

// GetLicenseIssuanceDate returns the LicenseIssuanceDate field value if set, zero value otherwise.
func (o *ResponseLicense) GetLicenseIssuanceDate() string {
	if o == nil || IsNil(o.LicenseIssuanceDate) {
		var ret string
		return ret
	}
	return *o.LicenseIssuanceDate
}

// GetLicenseIssuanceDateOk returns a tuple with the LicenseIssuanceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetLicenseIssuanceDateOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseIssuanceDate) {
		return nil, false
	}
	return o.LicenseIssuanceDate, true
}

// HasLicenseIssuanceDate returns a boolean if a field has been set.
func (o *ResponseLicense) HasLicenseIssuanceDate() bool {
	if o != nil && !IsNil(o.LicenseIssuanceDate) {
		return true
	}

	return false
}

// SetLicenseIssuanceDate gets a reference to the given string and assigns it to the LicenseIssuanceDate field.
func (o *ResponseLicense) SetLicenseIssuanceDate(v string) {
	o.LicenseIssuanceDate = &v
}

// GetLicenseNumber returns the LicenseNumber field value
func (o *ResponseLicense) GetLicenseNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LicenseNumber
}

// GetLicenseNumberOk returns a tuple with the LicenseNumber field value
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetLicenseNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LicenseNumber, true
}

// SetLicenseNumber sets field value
func (o *ResponseLicense) SetLicenseNumber(v string) {
	o.LicenseNumber = v
}

// GetLicenseType returns the LicenseType field value
func (o *ResponseLicense) GetLicenseType() LicenseType {
	if o == nil {
		var ret LicenseType
		return ret
	}

	return o.LicenseType
}

// GetLicenseTypeOk returns a tuple with the LicenseType field value
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetLicenseTypeOk() (*LicenseType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LicenseType, true
}

// SetLicenseType sets field value
func (o *ResponseLicense) SetLicenseType(v LicenseType) {
	o.LicenseType = v
}

// GetLicenseTypeDescription returns the LicenseTypeDescription field value if set, zero value otherwise.
func (o *ResponseLicense) GetLicenseTypeDescription() string {
	if o == nil || IsNil(o.LicenseTypeDescription) {
		var ret string
		return ret
	}
	return *o.LicenseTypeDescription
}

// GetLicenseTypeDescriptionOk returns a tuple with the LicenseTypeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetLicenseTypeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseTypeDescription) {
		return nil, false
	}
	return o.LicenseTypeDescription, true
}

// HasLicenseTypeDescription returns a boolean if a field has been set.
func (o *ResponseLicense) HasLicenseTypeDescription() bool {
	if o != nil && !IsNil(o.LicenseTypeDescription) {
		return true
	}

	return false
}

// SetLicenseTypeDescription gets a reference to the given string and assigns it to the LicenseTypeDescription field.
func (o *ResponseLicense) SetLicenseTypeDescription(v string) {
	o.LicenseTypeDescription = &v
}

// GetLicenseeAddress returns the LicenseeAddress field value if set, zero value otherwise.
func (o *ResponseLicense) GetLicenseeAddress() string {
	if o == nil || IsNil(o.LicenseeAddress) {
		var ret string
		return ret
	}
	return *o.LicenseeAddress
}

// GetLicenseeAddressOk returns a tuple with the LicenseeAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetLicenseeAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseeAddress) {
		return nil, false
	}
	return o.LicenseeAddress, true
}

// HasLicenseeAddress returns a boolean if a field has been set.
func (o *ResponseLicense) HasLicenseeAddress() bool {
	if o != nil && !IsNil(o.LicenseeAddress) {
		return true
	}

	return false
}

// SetLicenseeAddress gets a reference to the given string and assigns it to the LicenseeAddress field.
func (o *ResponseLicense) SetLicenseeAddress(v string) {
	o.LicenseeAddress = &v
}

// GetLicenseeName returns the LicenseeName field value if set, zero value otherwise.
func (o *ResponseLicense) GetLicenseeName() string {
	if o == nil || IsNil(o.LicenseeName) {
		var ret string
		return ret
	}
	return *o.LicenseeName
}

// GetLicenseeNameOk returns a tuple with the LicenseeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetLicenseeNameOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseeName) {
		return nil, false
	}
	return o.LicenseeName, true
}

// HasLicenseeName returns a boolean if a field has been set.
func (o *ResponseLicense) HasLicenseeName() bool {
	if o != nil && !IsNil(o.LicenseeName) {
		return true
	}

	return false
}

// SetLicenseeName gets a reference to the given string and assigns it to the LicenseeName field.
func (o *ResponseLicense) SetLicenseeName(v string) {
	o.LicenseeName = &v
}

// GetLicensingAuthority returns the LicensingAuthority field value if set, zero value otherwise.
func (o *ResponseLicense) GetLicensingAuthority() string {
	if o == nil || IsNil(o.LicensingAuthority) {
		var ret string
		return ret
	}
	return *o.LicensingAuthority
}

// GetLicensingAuthorityOk returns a tuple with the LicensingAuthority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetLicensingAuthorityOk() (*string, bool) {
	if o == nil || IsNil(o.LicensingAuthority) {
		return nil, false
	}
	return o.LicensingAuthority, true
}

// HasLicensingAuthority returns a boolean if a field has been set.
func (o *ResponseLicense) HasLicensingAuthority() bool {
	if o != nil && !IsNil(o.LicensingAuthority) {
		return true
	}

	return false
}

// SetLicensingAuthority gets a reference to the given string and assigns it to the LicensingAuthority field.
func (o *ResponseLicense) SetLicensingAuthority(v string) {
	o.LicensingAuthority = &v
}

// GetStatus returns the Status field value
func (o *ResponseLicense) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ResponseLicense) SetStatus(v string) {
	o.Status = v
}

// GetTenant returns the Tenant field value
func (o *ResponseLicense) GetTenant() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value
// and a boolean to check if the value has been set.
func (o *ResponseLicense) GetTenantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tenant, true
}

// SetTenant sets field value
func (o *ResponseLicense) SetTenant(v string) {
	o.Tenant = v
}

func (o ResponseLicense) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseLicense) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BusinessId) {
		toSerialize["business_id"] = o.BusinessId
	}
	toSerialize["creation_time"] = o.CreationTime
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	toSerialize["id"] = o.Id
	toSerialize["last_updated_time"] = o.LastUpdatedTime
	if !IsNil(o.LastVerifiedTime) {
		toSerialize["last_verified_time"] = o.LastVerifiedTime
	}
	if !IsNil(o.LicenseClassification) {
		toSerialize["license_classification"] = o.LicenseClassification
	}
	if !IsNil(o.LicenseExpirationDate) {
		toSerialize["license_expiration_date"] = o.LicenseExpirationDate
	}
	if !IsNil(o.LicenseIssuanceDate) {
		toSerialize["license_issuance_date"] = o.LicenseIssuanceDate
	}
	toSerialize["license_number"] = o.LicenseNumber
	toSerialize["license_type"] = o.LicenseType
	if !IsNil(o.LicenseTypeDescription) {
		toSerialize["license_type_description"] = o.LicenseTypeDescription
	}
	if !IsNil(o.LicenseeAddress) {
		toSerialize["licensee_address"] = o.LicenseeAddress
	}
	if !IsNil(o.LicenseeName) {
		toSerialize["licensee_name"] = o.LicenseeName
	}
	if !IsNil(o.LicensingAuthority) {
		toSerialize["licensing_authority"] = o.LicensingAuthority
	}
	toSerialize["status"] = o.Status
	toSerialize["tenant"] = o.Tenant
	return toSerialize, nil
}

type NullableResponseLicense struct {
	value *ResponseLicense
	isSet bool
}

func (v NullableResponseLicense) Get() *ResponseLicense {
	return v.value
}

func (v *NullableResponseLicense) Set(val *ResponseLicense) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseLicense) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseLicense) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseLicense(val *ResponseLicense) *NullableResponseLicense {
	return &NullableResponseLicense{value: val, isSet: true}
}

func (v NullableResponseLicense) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseLicense) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


