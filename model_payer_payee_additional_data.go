/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.69.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PayerPayeeAdditionalData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayerPayeeAdditionalData{}

// PayerPayeeAdditionalData Contains the type of transfer for the payer and payee relationship
type PayerPayeeAdditionalData struct {
	TransferType string `json:"transfer_type"`
}

// NewPayerPayeeAdditionalData instantiates a new PayerPayeeAdditionalData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayerPayeeAdditionalData(transferType string) *PayerPayeeAdditionalData {
	this := PayerPayeeAdditionalData{}
	this.TransferType = transferType
	return &this
}

// NewPayerPayeeAdditionalDataWithDefaults instantiates a new PayerPayeeAdditionalData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayerPayeeAdditionalDataWithDefaults() *PayerPayeeAdditionalData {
	this := PayerPayeeAdditionalData{}
	return &this
}

// GetTransferType returns the TransferType field value
func (o *PayerPayeeAdditionalData) GetTransferType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransferType
}

// GetTransferTypeOk returns a tuple with the TransferType field value
// and a boolean to check if the value has been set.
func (o *PayerPayeeAdditionalData) GetTransferTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransferType, true
}

// SetTransferType sets field value
func (o *PayerPayeeAdditionalData) SetTransferType(v string) {
	o.TransferType = v
}

func (o PayerPayeeAdditionalData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayerPayeeAdditionalData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["transfer_type"] = o.TransferType
	return toSerialize, nil
}

type NullablePayerPayeeAdditionalData struct {
	value *PayerPayeeAdditionalData
	isSet bool
}

func (v NullablePayerPayeeAdditionalData) Get() *PayerPayeeAdditionalData {
	return v.value
}

func (v *NullablePayerPayeeAdditionalData) Set(val *PayerPayeeAdditionalData) {
	v.value = val
	v.isSet = true
}

func (v NullablePayerPayeeAdditionalData) IsSet() bool {
	return v.isSet
}

func (v *NullablePayerPayeeAdditionalData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayerPayeeAdditionalData(val *PayerPayeeAdditionalData) *NullablePayerPayeeAdditionalData {
	return &NullablePayerPayeeAdditionalData{value: val, isSet: true}
}

func (v NullablePayerPayeeAdditionalData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayerPayeeAdditionalData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


